{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1","program":"/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","indexed","/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=47e61ed6dc7436d4","-C","extra-filename=-47e61ed6dc7436d4","--out-dir","/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","-L","dependency=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libindexed-47e61ed6dc7436d4.rmeta"},"prelude":{"crate_id":{"name":"indexed","disambiguator":[17677992687227369005,0]},"crate_root":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src","external_crates":[{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9888355131369537266,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11275466351773074568,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14505302196044876161,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12672318884608983985,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9602480897548461658,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6215642551405411717,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11323364399412649918,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[505106994998565642,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5151717038203672608,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12015404889719386584,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6634436157752397486,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10627139614780737919,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15241097753775192730,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4193977997774401605,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4301272078305384557,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12250611045243811845,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8394371263132856076,0]}}],"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":158,"byte_end":32040,"line_start":4,"line_end":920,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":158,"byte_end":32040,"line_start":4,"line_end":920,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":186},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":110},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" This library provides a `Vec`-like, no reallocation collection named `indexed::Pool`.\n The pool's reference can be obtained from one of its elements.\n It can be used as a memory pool, and library users do not need to store/pass the pool's reference everywhere.\n The elements can be linked to each other using indexes rather than pointers.","sig":null,"attributes":[{"value":"/ This library provides a `Vec`-like, no reallocation collection named `indexed::Pool`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":158,"byte_end":247,"line_start":4,"line_end":4,"column_start":1,"column_end":90}},{"value":"/ The pool's reference can be obtained from one of its elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":248,"byte_end":314,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/ It can be used as a memory pool, and library users do not need to store/pass the pool's reference everywhere.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":315,"byte_end":428,"line_start":6,"line_end":6,"column_start":1,"column_end":114}},{"value":"/ The elements can be linked to each other using indexes rather than pointers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":429,"byte_end":509,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":510,"byte_end":513,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":514,"byte_end":528,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":529,"byte_end":532,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":533,"byte_end":540,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":541,"byte_end":573,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/ use std::fmt::{self,Display,Formatter};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":574,"byte_end":617,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":618,"byte_end":621,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // A singly linked list of string.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":622,"byte_end":660,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ struct List( Box<Pool<Node>> );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":661,"byte_end":696,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":697,"byte_end":700,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ struct Node {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":701,"byte_end":718,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/     next  : u32,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":719,"byte_end":739,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/     index : u32,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":740,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/     text  : &'static str,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":761,"byte_end":790,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":791,"byte_end":796,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":797,"byte_end":800,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ unsafe impl Indexed for Node {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":801,"byte_end":835,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/     fn null() -> usize { !0_u32 as usize }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":836,"byte_end":882,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/     unsafe fn get_index( &self ) -> usize { self.index as usize }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":883,"byte_end":952,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/     unsafe fn set_index( &mut self, index: usize ) { self.index = index as u32; }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":953,"byte_end":1038,"line_start":27,"line_end":27,"column_start":1,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1039,"byte_end":1044,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1045,"byte_end":1048,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl List {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1049,"byte_end":1064,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     fn new() -> Self { List( Pool::<Node>::new() )}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1065,"byte_end":1120,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1121,"byte_end":1124,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     fn head<'a>( &'a mut self, text: &'static str ) -> &'a mut Node {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1125,"byte_end":1198,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/         assert_eq!( self.0.new_index(), 0 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1199,"byte_end":1247,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/         self.0.push( Node{","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1248,"byte_end":1278,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/             next  : Node::null() as u32,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1279,"byte_end":1323,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/             index : 0, // the pool will set the actual index inside its `push()` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1324,"byte_end":1416,"line_start":37,"line_end":37,"column_start":1,"column_end":93}},{"value":"/             text  ,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1417,"byte_end":1440,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/         });","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1441,"byte_end":1456,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/         &mut self.0[0]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1457,"byte_end":1483,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1484,"byte_end":1493,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1494,"byte_end":1499,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1500,"byte_end":1503,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ impl Node {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1504,"byte_end":1519,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     // The method does not need a parameter of `Pool`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1520,"byte_end":1578,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/     fn add<'a>( &'a mut self, sib: &'static str ) -> &'a mut Self {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1579,"byte_end":1650,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/         let pool = unsafe { self.pool_mut() as *mut Pool<Node> };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1651,"byte_end":1720,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/         let index = unsafe{ (*pool).new_index() };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1721,"byte_end":1775,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/         self.next = index as u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1776,"byte_end":1813,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/         let pool = unsafe{ &mut *pool };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1814,"byte_end":1858,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/         pool.push( Node{","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1859,"byte_end":1887,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/             next  : Node::null() as u32,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1888,"byte_end":1932,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/             index : Node::null() as u32, // the pool will set the actual index inside its `push()` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":1933,"byte_end":2043,"line_start":53,"line_end":53,"column_start":1,"column_end":111}},{"value":"/             text  : sib,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2044,"byte_end":2072,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/         });","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2073,"byte_end":2088,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/         &mut pool[index]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2089,"byte_end":2117,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2118,"byte_end":2127,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2128,"byte_end":2133,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2134,"byte_end":2137,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ impl Display for List {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2138,"byte_end":2165,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/     fn fmt( &self, fmt: &mut Formatter ) -> fmt::Result {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2166,"byte_end":2227,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/         if self.0.new_index() != 0 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2228,"byte_end":2268,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/             let mut curr = 0_usize;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2269,"byte_end":2308,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/             while curr != Node::null() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2309,"byte_end":2353,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/                 write!( fmt, \"{} \", self.0[curr].text )?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2354,"byte_end":2415,"line_start":65,"line_end":65,"column_start":1,"column_end":62}},{"value":"/                 curr = self.0[curr].next as usize;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2416,"byte_end":2470,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"/             }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2471,"byte_end":2488,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2489,"byte_end":2502,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/         Ok(())","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2503,"byte_end":2521,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2522,"byte_end":2531,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2532,"byte_end":2537,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2538,"byte_end":2541,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut list = List::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2542,"byte_end":2573,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/ list.head( \"no\" ).add( \"need\" ).add( \"for\" ).add( \"pool\" ).add( \"parameter\" );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2574,"byte_end":2656,"line_start":74,"line_end":74,"column_start":1,"column_end":83}},{"value":"/ assert_eq!( list.to_string(), \"no need for pool parameter \" );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2657,"byte_end":2723,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":2724,"byte_end":2731,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3802,"byte_end":3804,"line_start":99,"line_end":99,"column_start":5,"column_end":7},"name":"B5","qualname":"::ChunkLen::B5","value":"ChunkLen::B5","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":40},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3811,"byte_end":3813,"line_start":99,"line_end":99,"column_start":14,"column_end":16},"name":"B6","qualname":"::ChunkLen::B6","value":"ChunkLen::B6","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3820,"byte_end":3822,"line_start":99,"line_end":99,"column_start":23,"column_end":25},"name":"B7","qualname":"::ChunkLen::B7","value":"ChunkLen::B7","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":46},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3830,"byte_end":3832,"line_start":99,"line_end":99,"column_start":33,"column_end":35},"name":"B8","qualname":"::ChunkLen::B8","value":"ChunkLen::B8","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":49},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3840,"byte_end":3842,"line_start":99,"line_end":99,"column_start":43,"column_end":45},"name":"B9","qualname":"::ChunkLen::B9","value":"ChunkLen::B9","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":52},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3850,"byte_end":3853,"line_start":99,"line_end":99,"column_start":53,"column_end":56},"name":"B10","qualname":"::ChunkLen::B10","value":"ChunkLen::B10","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":55},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3862,"byte_end":3865,"line_start":99,"line_end":99,"column_start":65,"column_end":68},"name":"B11","qualname":"::ChunkLen::B11","value":"ChunkLen::B11","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":58},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3874,"byte_end":3877,"line_start":99,"line_end":99,"column_start":77,"column_end":80},"name":"B12","qualname":"::ChunkLen::B12","value":"ChunkLen::B12","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":61},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3886,"byte_end":3889,"line_start":99,"line_end":99,"column_start":89,"column_end":92},"name":"B13","qualname":"::ChunkLen::B13","value":"ChunkLen::B13","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":64},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3898,"byte_end":3901,"line_start":99,"line_end":99,"column_start":101,"column_end":104},"name":"B14","qualname":"::ChunkLen::B14","value":"ChunkLen::B14","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":99,"line_end":99,"column_start":114,"column_end":117},"name":"B15","qualname":"::ChunkLen::B15","value":"ChunkLen::B15","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":70},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3924,"byte_end":3927,"line_start":99,"line_end":99,"column_start":127,"column_end":130},"name":"B16","qualname":"::ChunkLen::B16","value":"ChunkLen::B16","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":36},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3787,"byte_end":3795,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"ChunkLen","qualname":"::ChunkLen","value":"pub enum ChunkLen {\n    B5 = ,\n    B6 = ,\n    B7 = ,\n    B8 = ,\n    B9 = ,\n    B10 = ,\n    B11 = ,\n    B12 = ,\n    B13 = ,\n    B14 = ,\n    B15 = ,\n    B16 = ,\n}","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70}],"decl_id":null,"docs":" Possible chunk sizes.\n","sig":null,"attributes":[{"value":"/ Possible chunk sizes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3752,"byte_end":3777,"line_start":97,"line_end":97,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4000,"byte_end":4009,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"chunk_len","qualname":"::chunk_len","value":"pub fn chunk_len<T: Indexed>() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Reflects the count of elements a chunk can hold.\n","sig":null,"attributes":[{"value":"/ Reflects the count of elements a chunk can hold.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":3940,"byte_end":3992,"line_start":102,"line_end":102,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4368,"byte_end":4375,"line_start":108,"line_end":108,"column_start":18,"column_end":25},"name":"Indexed","qualname":"::Indexed","value":"Indexed: Sized","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" Type of elements in the `Pool` must implement this trait.\n Typically some integer field in the type must devote to storing the index in the pool, and it is not necessarily usize.\n For example, an index can be stored in u32 if 4194304K is enough for anybody.\n","sig":null,"attributes":[{"value":"/ Type of elements in the `Pool` must implement this trait.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4083,"byte_end":4144,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"/ Typically some integer field in the type must devote to storing the index in the pool, and it is not necessarily usize.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4145,"byte_end":4268,"line_start":106,"line_end":106,"column_start":1,"column_end":124}},{"value":"/ For example, an index can be stored in u32 if 4194304K is enough for anybody.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4269,"byte_end":4350,"line_start":107,"line_end":107,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4512,"byte_end":4521,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"chunk_len","qualname":"::Indexed::chunk_len","value":"pub fn chunk_len() -> ChunkLen","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Sets the underlying chunk size. The default is 256, and can be overrided by those values defined in `ChunkLen`.\n","sig":null,"attributes":[{"value":"/ Sets the underlying chunk size. The default is 256, and can be overrided by those values defined in `ChunkLen`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4389,"byte_end":4504,"line_start":109,"line_end":109,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4895,"byte_end":4899,"line_start":114,"line_end":114,"column_start":8,"column_end":12},"name":"null","qualname":"::Indexed::null","value":"pub fn null() -> usize","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Defines which index value is for null. If the underlying storage for index is smaller than `usize`'s size, the library user should override this method and pick a smaller value, e.g `!0_u32` for index stored in `u32`.\n Note that it is for convenience only, and the library will not do any index check against `null()`.\n","sig":null,"attributes":[{"value":"/ Defines which index value is for null. If the underlying storage for index is smaller than `usize`'s size, the library user should override this method and pick a smaller value, e.g `!0_u32` for index stored in `u32`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4558,"byte_end":4779,"line_start":112,"line_end":112,"column_start":5,"column_end":226}},{"value":"/ Note that it is for convenience only, and the library will not do any index check against `null()`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4784,"byte_end":4887,"line_start":113,"line_end":113,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4985,"byte_end":4994,"line_start":117,"line_end":117,"column_start":15,"column_end":24},"name":"get_index","qualname":"::Indexed::get_index","value":"pub unsafe fn get_index(&Self) -> usize","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Gets the element's index in the pool.\n","sig":null,"attributes":[{"value":"/ Gets the element's index in the pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4929,"byte_end":4970,"line_start":116,"line_end":116,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5129,"byte_end":5138,"line_start":120,"line_end":120,"column_start":15,"column_end":24},"name":"set_index","qualname":"::Indexed::set_index","value":"pub unsafe fn set_index(&mut Self, usize)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Sets the element's index in the pool. The library user is not expected to call it directly.\n","sig":null,"attributes":[{"value":"/ Sets the element's index in the pool. The library user is not expected to call it directly.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5019,"byte_end":5114,"line_start":119,"line_end":119,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5214,"byte_end":5218,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"pool","qualname":"::Indexed::pool","value":"pub fn pool(&Self) -> &Pool<Self>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Obtains reference of its pool.\n","sig":null,"attributes":[{"value":"/ Obtains reference of its pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5172,"byte_end":5206,"line_start":122,"line_end":122,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5327,"byte_end":5335,"line_start":126,"line_end":126,"column_start":15,"column_end":23},"name":"pool_mut","qualname":"::Indexed::pool_mut","value":"pub unsafe fn pool_mut(&Self) -> &mut Pool<Self>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Obtains mutable reference of its pool.\n","sig":null,"attributes":[{"value":"/ Obtains mutable reference of its pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5270,"byte_end":5312,"line_start":125,"line_end":125,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5444,"byte_end":5457,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"pool_non_null","qualname":"::Indexed::pool_non_null","value":"pub fn pool_non_null(&Self) -> NonNull<Pool<Self>>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Obtains non null pointer of its pool.\n","sig":null,"attributes":[{"value":"/ Obtains non null pointer of its pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5395,"byte_end":5436,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5610,"byte_end":5619,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"pool_push","qualname":"::Indexed::pool_push","value":"pub fn pool_push(&Self, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Appends an element to the back of its pool.\n","sig":null,"attributes":[{"value":"/ Appends an element to the back of its pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5555,"byte_end":5602,"line_start":131,"line_end":131,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5802,"byte_end":5812,"line_start":135,"line_end":135,"column_start":15,"column_end":25},"name":"pool_write","qualname":"::Indexed::pool_write","value":"pub unsafe fn pool_write(&Self, usize, Self)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Overwrites a new value into its pool at given index without reading or dropping the old value.\n","sig":null,"attributes":[{"value":"/ Overwrites a new value into its pool at given index without reading or dropping the old value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5689,"byte_end":5787,"line_start":134,"line_end":134,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":6288,"byte_end":6300,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"pool_reserve","qualname":"::Indexed::pool_reserve","value":"pub fn pool_reserve(&Self, usize)","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Reserves capacity for at least additional more elements to be inserted in the given Pool<T>.\n The collection may reserve more space because the increasing size must be multiple of underlying `chunk_len()`.\n After calling reserve, capacity will be greater than or equal to self.pool().new_index() + additional.\n Does nothing if capacity is already sufficient.\n","sig":null,"attributes":[{"value":"/ Reserves capacity for at least additional more elements to be inserted in the given Pool<T>.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5897,"byte_end":5993,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ The collection may reserve more space because the increasing size must be multiple of underlying `chunk_len()`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":5998,"byte_end":6113,"line_start":138,"line_end":138,"column_start":5,"column_end":120}},{"value":"/ After calling reserve, capacity will be greater than or equal to self.pool().new_index() + additional.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":6118,"byte_end":6224,"line_start":139,"line_end":139,"column_start":5,"column_end":111}},{"value":"/ Does nothing if capacity is already sufficient.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":6229,"byte_end":6280,"line_start":140,"line_end":140,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8786,"byte_end":8790,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"Pool","qualname":"::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" A `Vec`-like, no reallocation collection.\n Elements in a `Pool` should not be zero sized type, or the construction will panic.\n","sig":null,"attributes":[{"value":"/ A `Vec`-like, no reallocation collection.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8611,"byte_end":8656,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ Elements in a `Pool` should not be zero sized type, or the construction will panic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8657,"byte_end":8744,"line_start":206,"line_end":206,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10155,"byte_end":10158,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool<T>>::new","value":"pub fn new() -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new pool that drops its elements on destruction.","sig":null,"attributes":[{"value":"/ Creates a new pool that drops its elements on destruction.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9302,"byte_end":9364,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9369,"byte_end":9372,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9377,"byte_end":9389,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9394,"byte_end":9397,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Panics if the type of element is ZST.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9402,"byte_end":9443,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9448,"byte_end":9451,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9456,"byte_end":9470,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9475,"byte_end":9478,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9483,"byte_end":9490,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9495,"byte_end":9533,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9538,"byte_end":9570,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9575,"byte_end":9578,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ static mut COUNT: usize = 0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9583,"byte_end":9615,"line_start":230,"line_end":230,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9620,"byte_end":9623,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ struct Name { index: usize, text: String }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9628,"byte_end":9674,"line_start":232,"line_end":232,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9679,"byte_end":9682,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ impl_indexed!{ Name{ index: usize }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9687,"byte_end":9727,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9732,"byte_end":9735,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ impl Drop for Name { fn drop( &mut self ) { unsafe{ COUNT += 1; }}}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9740,"byte_end":9811,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9816,"byte_end":9819,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ impl From<&'static str> for Name {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9824,"byte_end":9862,"line_start":238,"line_end":238,"column_start":5,"column_end":43}},{"value":"/     fn from( s: &'static str ) -> Self {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9867,"byte_end":9911,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/         Name{ index: <Self as Indexed>::null(), text: s.to_string() }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9916,"byte_end":9989,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9994,"byte_end":10003,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10008,"byte_end":10013,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10018,"byte_end":10021,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ { let pool = pool!( Name[ \"foo\", \"bar\", \"baz\" ]); }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10026,"byte_end":10081,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10086,"byte_end":10089,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( unsafe{ COUNT }, 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10094,"byte_end":10131,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10136,"byte_end":10143,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11275,"byte_end":11288,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"new_unmanaged","qualname":"<Pool<T>>::new_unmanaged","value":"pub fn new_unmanaged() -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new pool that does not drop its elements on destruction.\n It is up to the user to drop the elements manually to avoid memory leaks.","sig":null,"attributes":[{"value":"/ Creates a new pool that does not drop its elements on destruction.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10205,"byte_end":10275,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ It is up to the user to drop the elements manually to avoid memory leaks.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10280,"byte_end":10357,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10362,"byte_end":10365,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10370,"byte_end":10382,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10387,"byte_end":10390,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Panics if the type of element is ZST.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10395,"byte_end":10436,"line_start":255,"line_end":255,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10441,"byte_end":10444,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10449,"byte_end":10463,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10468,"byte_end":10471,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10476,"byte_end":10483,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10488,"byte_end":10526,"line_start":260,"line_end":260,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10531,"byte_end":10563,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10568,"byte_end":10571,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ static mut COUNT: usize = 0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10576,"byte_end":10608,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10613,"byte_end":10616,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ struct Name { index: usize, text: String }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10621,"byte_end":10667,"line_start":265,"line_end":265,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10672,"byte_end":10675,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ impl_indexed!{ Name{ index: usize }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10680,"byte_end":10720,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10725,"byte_end":10728,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ impl Drop for Name { fn drop( &mut self ) { unsafe{ COUNT += 1; }}}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10733,"byte_end":10804,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10809,"byte_end":10812,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ impl From<&'static str> for Name {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10817,"byte_end":10855,"line_start":271,"line_end":271,"column_start":5,"column_end":43}},{"value":"/     fn from( s: &'static str ) -> Self {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10860,"byte_end":10904,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/         Name{ index: <Self as Indexed>::null(), text: s.to_string() }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10909,"byte_end":10982,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":10987,"byte_end":10996,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11001,"byte_end":11006,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11011,"byte_end":11014,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11019,"byte_end":11024,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/     let mut pool = Pool::<Name>::new_unmanaged();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11029,"byte_end":11082,"line_start":278,"line_end":278,"column_start":5,"column_end":58}},{"value":"/     pool.push( \"foo\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11087,"byte_end":11121,"line_start":279,"line_end":279,"column_start":5,"column_end":39}},{"value":"/     pool.push( \"bar\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11126,"byte_end":11160,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/     pool.push( \"baz\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11165,"byte_end":11199,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11204,"byte_end":11209,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ assert_eq!( unsafe{ COUNT }, 0 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11214,"byte_end":11251,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":11256,"byte_end":11263,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12681,"byte_end":12685,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"push","qualname":"<Pool<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the back of a pool.","sig":null,"attributes":[{"value":"/ Appends an element to the back of a pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12063,"byte_end":12108,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12113,"byte_end":12116,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12121,"byte_end":12133,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12138,"byte_end":12141,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of elements in the vector overflows a `usize`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12146,"byte_end":12217,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12222,"byte_end":12225,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12230,"byte_end":12244,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12249,"byte_end":12252,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12257,"byte_end":12264,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12269,"byte_end":12307,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12312,"byte_end":12344,"line_start":319,"line_end":319,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12349,"byte_end":12352,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: i32 }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12357,"byte_end":12399,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12404,"byte_end":12407,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12412,"byte_end":12443,"line_start":323,"line_end":323,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12448,"byte_end":12451,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ pool.push( Foo::from( 0 ));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12456,"byte_end":12487,"line_start":325,"line_end":325,"column_start":5,"column_end":36}},{"value":"/ pool.push( Foo::from( 1 ));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12492,"byte_end":12523,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"/ pool.push( Foo::from( 2 ));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12528,"byte_end":12559,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12564,"byte_end":12567,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( pool.iter().map( |e| e.inner ).collect::<Vec<_>>(), vec![ 0, 1, 2 ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12572,"byte_end":12657,"line_start":329,"line_end":329,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":12662,"byte_end":12669,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14530,"byte_end":14535,"line_start":384,"line_end":384,"column_start":19,"column_end":24},"name":"write","qualname":"<Pool<T>>::write","value":"pub unsafe fn write(&mut Self, usize, T)","parent":null,"children":[],"decl_id":null,"docs":" Overwrites a new value into a pool at given index without reading or dropping the old value.","sig":null,"attributes":[{"value":"/ Overwrites a new value into a pool at given index without reading or dropping the old value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13239,"byte_end":13335,"line_start":347,"line_end":347,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13340,"byte_end":13343,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13348,"byte_end":13360,"line_start":349,"line_end":349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13365,"byte_end":13368,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This operation is marked unsafe because it accepts an index as an offset which acts like a raw pointer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13373,"byte_end":13480,"line_start":351,"line_end":351,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13485,"byte_end":13488,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ It does not drop the contents of the existing `self[index]` element. This is safe, but it could leak allocations or resources,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13493,"byte_end":13623,"line_start":353,"line_end":353,"column_start":5,"column_end":135}},{"value":"/ so care must be taken not to overwrite an object that should be dropped.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13628,"byte_end":13704,"line_start":354,"line_end":354,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13709,"byte_end":13712,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Additionally, it does not drop `value`. Semantically, `value` is moved into `self[index]`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13717,"byte_end":13811,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13816,"byte_end":13819,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This is appropriate for initializing uninitialized memory.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13824,"byte_end":13886,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13891,"byte_end":13894,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13899,"byte_end":13913,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13918,"byte_end":13921,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13926,"byte_end":13942,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13947,"byte_end":13950,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13955,"byte_end":13962,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":13967,"byte_end":14005,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14010,"byte_end":14042,"line_start":366,"line_end":366,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14047,"byte_end":14050,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14055,"byte_end":14106,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14111,"byte_end":14114,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14119,"byte_end":14157,"line_start":370,"line_end":370,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14162,"byte_end":14165,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ pool.reserve( 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14170,"byte_end":14192,"line_start":372,"line_end":372,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14197,"byte_end":14200,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14205,"byte_end":14217,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/     pool.write( 0, \"a\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14222,"byte_end":14258,"line_start":375,"line_end":375,"column_start":5,"column_end":41}},{"value":"/     pool.write( 2, \"c\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14263,"byte_end":14299,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/     pool.write( 1, \"b\".into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14304,"byte_end":14340,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/     pool.set_len( 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14345,"byte_end":14371,"line_start":378,"line_end":378,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14376,"byte_end":14381,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14386,"byte_end":14389,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( pool.iter().map( |e| e.inner ).collect::<Vec<_>>(), vec![ \"a\", \"b\", \"c\" ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14394,"byte_end":14485,"line_start":381,"line_end":381,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14490,"byte_end":14497,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14502,"byte_end":14511,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15780,"byte_end":15787,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Pool<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least additional more elements to be inserted in the given Pool<T>.\n The collection may reserve more space because the increasing size must be multiple of underlying `chunk_len()`.\n After calling reserve, capacity will be greater than or equal to self.new_index() + additional.\n Does nothing if capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least additional more elements to be inserted in the given Pool<T>.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14714,"byte_end":14810,"line_start":389,"line_end":389,"column_start":5,"column_end":101}},{"value":"/ The collection may reserve more space because the increasing size must be multiple of underlying `chunk_len()`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14815,"byte_end":14930,"line_start":390,"line_end":390,"column_start":5,"column_end":120}},{"value":"/ After calling reserve, capacity will be greater than or equal to self.new_index() + additional.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":14935,"byte_end":15034,"line_start":391,"line_end":391,"column_start":5,"column_end":104}},{"value":"/ Does nothing if capacity is already sufficient.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15039,"byte_end":15090,"line_start":392,"line_end":392,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15095,"byte_end":15098,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15103,"byte_end":15115,"line_start":394,"line_end":394,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15128,"byte_end":15177,"line_start":396,"line_end":396,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15182,"byte_end":15185,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15190,"byte_end":15204,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15209,"byte_end":15212,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15217,"byte_end":15224,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15229,"byte_end":15267,"line_start":401,"line_end":401,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15272,"byte_end":15304,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15309,"byte_end":15312,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15317,"byte_end":15368,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15373,"byte_end":15376,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15381,"byte_end":15419,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15424,"byte_end":15427,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ pool.reserve( 0 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15432,"byte_end":15454,"line_start":408,"line_end":408,"column_start":5,"column_end":27}},{"value":"/ assert_eq!( pool.capacity(), 0 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15459,"byte_end":15496,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15501,"byte_end":15504,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ pool.reserve( 1 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15509,"byte_end":15531,"line_start":411,"line_end":411,"column_start":5,"column_end":27}},{"value":"/ let cap = pool.capacity();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15536,"byte_end":15566,"line_start":412,"line_end":412,"column_start":5,"column_end":35}},{"value":"/ assert!( cap >= 1 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15571,"byte_end":15595,"line_start":413,"line_end":413,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15600,"byte_end":15603,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ pool.reserve( 1 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15608,"byte_end":15630,"line_start":415,"line_end":415,"column_start":5,"column_end":27}},{"value":"/ assert_eq!( pool.capacity(), cap );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15635,"byte_end":15674,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15679,"byte_end":15682,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ pool.reserve( 1024 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15687,"byte_end":15712,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/ assert!( pool.capacity() >= 1024 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15717,"byte_end":15756,"line_start":419,"line_end":419,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":15761,"byte_end":15768,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16747,"byte_end":16750,"line_start":448,"line_end":448,"column_start":12,"column_end":15},"name":"len","qualname":"<Pool<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the pool, also referred to as its 'length'.\n ```\n #[macro_use] extern crate indexed;\n use indexed::{Indexed,Pool};","sig":null,"attributes":[{"value":"/ Returns the number of elements in the pool, also referred to as its 'length'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16360,"byte_end":16441,"line_start":436,"line_end":436,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16446,"byte_end":16455,"line_start":437,"line_end":437,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16460,"byte_end":16467,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16472,"byte_end":16510,"line_start":439,"line_end":439,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16515,"byte_end":16547,"line_start":440,"line_end":440,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16552,"byte_end":16555,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16560,"byte_end":16611,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16616,"byte_end":16619,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let mut pool = pool!( Foo[ \"a\", \"b\", \"c\" ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16624,"byte_end":16672,"line_start":444,"line_end":444,"column_start":5,"column_end":53}},{"value":"/ assert_eq!( pool.len(), 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16677,"byte_end":16709,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16714,"byte_end":16721,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16726,"byte_end":16735,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18976,"byte_end":18983,"line_start":516,"line_end":516,"column_start":19,"column_end":26},"name":"set_len","qualname":"<Pool<T>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of a pool.","sig":null,"attributes":[{"value":"/ Sets the length of a pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16788,"byte_end":16818,"line_start":450,"line_end":450,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16823,"byte_end":16826,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the pool, without actually modifying its buffers,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16831,"byte_end":16921,"line_start":452,"line_end":452,"column_start":5,"column_end":95}},{"value":"/ so it is up to the caller to ensure that the pool is actually the specified size.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":16926,"byte_end":17011,"line_start":453,"line_end":453,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17016,"byte_end":17019,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17024,"byte_end":17031,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17036,"byte_end":17074,"line_start":456,"line_end":456,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17079,"byte_end":17111,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17116,"byte_end":17119,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: char }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17124,"byte_end":17167,"line_start":459,"line_end":459,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17172,"byte_end":17175,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let mut pool = pool!( Foo[ 'r', 'u', 's', 't' ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17180,"byte_end":17233,"line_start":461,"line_end":461,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17238,"byte_end":17241,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17246,"byte_end":17258,"line_start":463,"line_end":463,"column_start":5,"column_end":17}},{"value":"/     std::ptr::drop_in_place( &mut pool[3] );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17263,"byte_end":17311,"line_start":464,"line_end":464,"column_start":5,"column_end":53}},{"value":"/     pool.set_len( 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17316,"byte_end":17342,"line_start":465,"line_end":465,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17347,"byte_end":17352,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17357,"byte_end":17360,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( pool.len(), 3 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17365,"byte_end":17397,"line_start":468,"line_end":468,"column_start":5,"column_end":37}},{"value":"/ assert_eq!( pool.iter().map( |e| e.inner ).collect::<Vec<_>>(), vec!['r', 'u', 's'] );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17402,"byte_end":17492,"line_start":469,"line_end":469,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17497,"byte_end":17504,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17509,"byte_end":17512,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ In this example, there is a memory leak since the memory locations","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17517,"byte_end":17587,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ owned by the first `Name` were not freed prior to the `set_len` call:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17592,"byte_end":17665,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17670,"byte_end":17673,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17678,"byte_end":17685,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17690,"byte_end":17728,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17733,"byte_end":17765,"line_start":477,"line_end":477,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17770,"byte_end":17773,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ static mut COUNT: usize = 0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17778,"byte_end":17810,"line_start":479,"line_end":479,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17815,"byte_end":17818,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ struct Name { index: usize, text: String }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17823,"byte_end":17869,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17874,"byte_end":17877,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ impl_indexed!{ Name{ index: usize }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17882,"byte_end":17922,"line_start":483,"line_end":483,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17927,"byte_end":17930,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ impl Drop for Name { fn drop( &mut self ) { unsafe{ COUNT += 1; }}}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":17935,"byte_end":18006,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18011,"byte_end":18014,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ impl From<&'static str> for Name {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18019,"byte_end":18057,"line_start":487,"line_end":487,"column_start":5,"column_end":43}},{"value":"/     fn from( s: &'static str ) -> Self {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18062,"byte_end":18106,"line_start":488,"line_end":488,"column_start":5,"column_end":49}},{"value":"/         Name{ index: <Self as Indexed>::null(), text: s.to_string() }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18111,"byte_end":18184,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18189,"byte_end":18198,"line_start":490,"line_end":490,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18203,"byte_end":18208,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18213,"byte_end":18216,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let mut pool = pool!( Name[ \"abc\", \"def\", \"g\" ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18221,"byte_end":18274,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18279,"byte_end":18282,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18287,"byte_end":18299,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/     std::ptr::drop_in_place( &mut pool[2] );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18304,"byte_end":18352,"line_start":496,"line_end":496,"column_start":5,"column_end":53}},{"value":"/     std::ptr::drop_in_place( &mut pool[1] );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18357,"byte_end":18405,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/     pool.set_len( 0 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18410,"byte_end":18436,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18441,"byte_end":18446,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18451,"byte_end":18454,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( unsafe{ COUNT }, 2 );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18459,"byte_end":18496,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18501,"byte_end":18508,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ In this example, the pool gets expanded from zero to four items without any memory allocations occurring,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18513,"byte_end":18622,"line_start":503,"line_end":503,"column_start":5,"column_end":114}},{"value":"/ resulting in pool values of unallocated memory:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18627,"byte_end":18678,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18683,"byte_end":18686,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18691,"byte_end":18698,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18703,"byte_end":18741,"line_start":507,"line_end":507,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18746,"byte_end":18778,"line_start":508,"line_end":508,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18783,"byte_end":18786,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18791,"byte_end":18842,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18847,"byte_end":18850,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18855,"byte_end":18893,"line_start":512,"line_end":512,"column_start":5,"column_end":43}},{"value":"/ unsafe { pool.set_len( 3 ); }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18898,"byte_end":18931,"line_start":513,"line_end":513,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18936,"byte_end":18943,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":18948,"byte_end":18957,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19443,"byte_end":19451,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Pool<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the vector can hold without more allocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the vector can hold without more allocating.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19170,"byte_end":19249,"line_start":522,"line_end":522,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19254,"byte_end":19257,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Note: **the purpose of this method is not to avoid reallocation**, which could not happen at all, but to grow the buffer for next incomming `write()`s.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19262,"byte_end":19417,"line_start":524,"line_end":524,"column_start":5,"column_end":160}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19422,"byte_end":19431,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19909,"byte_end":19917,"line_start":543,"line_end":543,"column_start":12,"column_end":20},"name":"non_null","qualname":"<Pool<T>>::non_null","value":"pub fn non_null(&Self) -> NonNull<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the pool's `NonNull` pointer.","sig":null,"attributes":[{"value":"/ Returns the pool's `NonNull` pointer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19488,"byte_end":19529,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19534,"byte_end":19537,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19542,"byte_end":19556,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19561,"byte_end":19564,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19569,"byte_end":19576,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19581,"byte_end":19619,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19624,"byte_end":19656,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19661,"byte_end":19664,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: i32 }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19669,"byte_end":19711,"line_start":536,"line_end":536,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19716,"byte_end":19719,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19724,"byte_end":19762,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/ let p = pool.non_null();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19767,"byte_end":19795,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19800,"byte_end":19803,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( p, std::ptr::NonNull::new( Box::into_raw( pool )).unwrap() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19808,"byte_end":19885,"line_start":541,"line_end":541,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19890,"byte_end":19897,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20485,"byte_end":20489,"line_start":565,"line_end":565,"column_start":12,"column_end":16},"name":"pool","qualname":"<Pool<T>>::pool","value":"pub fn pool(&T) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Obtains reference of the pool of an element.\n \n # Examples\n \n ```\n #[macro_use] extern crate indexed;\n use indexed::{Indexed,Pool};","sig":null,"attributes":[{"value":"/ Obtains reference of the pool of an element.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":19964,"byte_end":20012,"line_start":545,"line_end":545,"column_start":5,"column_end":53}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20017,"byte_end":20021,"line_start":546,"line_end":546,"column_start":5,"column_end":9}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20026,"byte_end":20040,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20045,"byte_end":20049,"line_start":548,"line_end":548,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20054,"byte_end":20061,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20066,"byte_end":20104,"line_start":550,"line_end":550,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20109,"byte_end":20141,"line_start":551,"line_end":551,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20146,"byte_end":20149,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: usize }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20154,"byte_end":20198,"line_start":553,"line_end":553,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20203,"byte_end":20206,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20211,"byte_end":20249,"line_start":555,"line_end":555,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20254,"byte_end":20257,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ for i in 0..1024 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20262,"byte_end":20284,"line_start":557,"line_end":557,"column_start":5,"column_end":27}},{"value":"/     pool.push( i.into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20289,"byte_end":20319,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20324,"byte_end":20329,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20334,"byte_end":20337,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ for i in 0..1024 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20342,"byte_end":20364,"line_start":561,"line_end":561,"column_start":5,"column_end":27}},{"value":"/     assert!( pool.non_null().as_ptr() as *const Pool<Foo> == pool[i].pool() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20369,"byte_end":20451,"line_start":562,"line_end":562,"column_start":5,"column_end":87}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20456,"byte_end":20461,"line_start":563,"line_end":563,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20466,"byte_end":20473,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21690,"byte_end":21698,"line_start":601,"line_end":601,"column_start":19,"column_end":27},"name":"pool_mut","qualname":"<Pool<T>>::pool_mut","value":"pub unsafe fn pool_mut(&T) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Obtains mutable reference of the pool from an element.\n \n # Safety\n \n This operation is marked unsafe because it obtains a mutable reference of the `Pool` from one of its immutable element,\n which may violate the memory safety rule \"only one mutable reference, or none but multiple immutable references\".\n \n # Examples\n \n ```\n #[macro_use] extern crate indexed;\n use indexed::{Indexed,Pool};","sig":null,"attributes":[{"value":"/ Obtains mutable reference of the pool from an element.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20832,"byte_end":20890,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20895,"byte_end":20899,"line_start":576,"line_end":576,"column_start":5,"column_end":9}},{"value":"/ # Safety","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20904,"byte_end":20916,"line_start":577,"line_end":577,"column_start":5,"column_end":17}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20921,"byte_end":20925,"line_start":578,"line_end":578,"column_start":5,"column_end":9}},{"value":"/ This operation is marked unsafe because it obtains a mutable reference of the `Pool` from one of its immutable element,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":20930,"byte_end":21053,"line_start":579,"line_end":579,"column_start":5,"column_end":128}},{"value":"/ which may violate the memory safety rule \"only one mutable reference, or none but multiple immutable references\".","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21058,"byte_end":21175,"line_start":580,"line_end":580,"column_start":5,"column_end":122}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21180,"byte_end":21184,"line_start":581,"line_end":581,"column_start":5,"column_end":9}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21189,"byte_end":21203,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21208,"byte_end":21212,"line_start":583,"line_end":583,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21217,"byte_end":21224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21229,"byte_end":21267,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21272,"byte_end":21304,"line_start":586,"line_end":586,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21309,"byte_end":21312,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: usize }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21317,"byte_end":21361,"line_start":588,"line_end":588,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21366,"byte_end":21369,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::<Foo>::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21374,"byte_end":21412,"line_start":590,"line_end":590,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21417,"byte_end":21420,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ for i in 0..1024 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21425,"byte_end":21447,"line_start":592,"line_end":592,"column_start":5,"column_end":27}},{"value":"/     pool.push( i.into() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21452,"byte_end":21482,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21487,"byte_end":21492,"line_start":594,"line_end":594,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21497,"byte_end":21500,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ for i in 0..1024 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21505,"byte_end":21527,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/     assert_eq!( pool.non_null().as_ptr(),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21532,"byte_end":21577,"line_start":597,"line_end":597,"column_start":5,"column_end":50}},{"value":"/                 unsafe{ pool[i].pool_mut() as *mut Pool<Foo>});","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21582,"byte_end":21649,"line_start":598,"line_end":598,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21654,"byte_end":21659,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":21664,"byte_end":21671,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22072,"byte_end":22085,"line_start":610,"line_end":610,"column_start":12,"column_end":25},"name":"pool_non_null","qualname":"<Pool<T>>::pool_non_null","value":"pub fn pool_non_null(&T) -> NonNull<Self>","parent":null,"children":[],"decl_id":null,"docs":" Obtains `NonNull` pointer of the pool from an element.\n","sig":null,"attributes":[{"value":"/ Obtains `NonNull` pointer of the pool from an element.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22002,"byte_end":22060,"line_start":609,"line_end":609,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22270,"byte_end":22279,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"new_index","qualname":"<Pool<T>>::new_index","value":"pub fn new_index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the expected index for the next new element to be `push()`ed in.\n","sig":null,"attributes":[{"value":"/ Returns the expected index for the next new element to be `push()`ed in.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22182,"byte_end":22258,"line_start":612,"line_end":612,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22748,"byte_end":22756,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Pool<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pool contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the pool contains no elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22316,"byte_end":22368,"line_start":615,"line_end":615,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22373,"byte_end":22376,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22381,"byte_end":22395,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22400,"byte_end":22403,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22408,"byte_end":22415,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22420,"byte_end":22458,"line_start":620,"line_end":620,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22463,"byte_end":22495,"line_start":621,"line_end":621,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22500,"byte_end":22503,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22508,"byte_end":22559,"line_start":623,"line_end":623,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22564,"byte_end":22567,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let mut pool = Pool::new();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22572,"byte_end":22603,"line_start":625,"line_end":625,"column_start":5,"column_end":36}},{"value":"/ assert!( pool.is_empty() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22608,"byte_end":22639,"line_start":626,"line_end":626,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22644,"byte_end":22647,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ pool.push( Foo::from( \"foo\" ));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22652,"byte_end":22687,"line_start":628,"line_end":628,"column_start":5,"column_end":40}},{"value":"/ assert!( !pool.is_empty() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22692,"byte_end":22724,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22729,"byte_end":22736,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23378,"byte_end":23382,"line_start":651,"line_end":651,"column_start":12,"column_end":16},"name":"iter","qualname":"<Pool<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pool.","sig":null,"attributes":[{"value":"/ Returns an iterator over the pool.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22797,"byte_end":22835,"line_start":633,"line_end":633,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22840,"byte_end":22843,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22848,"byte_end":22862,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22867,"byte_end":22874,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22879,"byte_end":22917,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22922,"byte_end":22954,"line_start":638,"line_end":638,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22959,"byte_end":22962,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: &'static str }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":22967,"byte_end":23018,"line_start":640,"line_end":640,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23023,"byte_end":23026,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let mut pool = pool!( Foo[ \"abc\", \"def\", \"g\" ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23031,"byte_end":23083,"line_start":642,"line_end":642,"column_start":5,"column_end":57}},{"value":"/ let mut iter = pool.iter();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23088,"byte_end":23119,"line_start":643,"line_end":643,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23124,"byte_end":23127,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( iter.next().unwrap().inner, \"abc\" );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23132,"byte_end":23184,"line_start":645,"line_end":645,"column_start":5,"column_end":57}},{"value":"/ assert_eq!( iter.next().unwrap().inner, \"def\" );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23189,"byte_end":23241,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/ assert_eq!( iter.next().unwrap().inner, \"g\"   );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23246,"byte_end":23298,"line_start":647,"line_end":647,"column_start":5,"column_end":57}},{"value":"/ assert!( iter.next().is_none() );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23303,"byte_end":23340,"line_start":648,"line_end":648,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23345,"byte_end":23352,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23357,"byte_end":23366,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24066,"byte_end":24074,"line_start":672,"line_end":672,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Pool<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each value.","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23574,"byte_end":23631,"line_start":656,"line_end":656,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23636,"byte_end":23639,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23644,"byte_end":23658,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23663,"byte_end":23666,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23671,"byte_end":23678,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ #[macro_use] extern crate indexed;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23683,"byte_end":23721,"line_start":661,"line_end":661,"column_start":5,"column_end":43}},{"value":"/ use indexed::{Indexed,Pool};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23726,"byte_end":23758,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23763,"byte_end":23766,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ extrusive_indexed!{ Foo{ inner: i32 }}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23771,"byte_end":23813,"line_start":664,"line_end":664,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23818,"byte_end":23821,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let mut pool = pool!( Foo[ 0, 1, 2 ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23826,"byte_end":23868,"line_start":666,"line_end":666,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23873,"byte_end":23876,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ pool.iter_mut().for_each( |elem| { elem.inner += 10; });","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23881,"byte_end":23941,"line_start":668,"line_end":668,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23946,"byte_end":23949,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!( pool.iter().map( |e| e.inner ).collect::<Vec<_>>(), vec![ 10, 11, 12 ]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":23954,"byte_end":24042,"line_start":670,"line_end":670,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24047,"byte_end":24054,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24400,"byte_end":24413,"line_start":678,"line_end":678,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Pool<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the output at indexed location, without performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the output at indexed location, without performing any bounds checking.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24276,"byte_end":24381,"line_start":677,"line_end":677,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24672,"byte_end":24689,"line_start":683,"line_end":683,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Pool<T>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the output at indexed location, without performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the output at indexed location, without performing any bounds checking.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":24547,"byte_end":24653,"line_start":682,"line_end":682,"column_start":5,"column_end":111}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26505,"byte_end":26509,"line_start":734,"line_end":734,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Immutable pool iterator","sig":null,"attributes":[{"value":"/ Immutable pool iterator","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26413,"byte_end":26440,"line_start":731,"line_end":731,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26441,"byte_end":26444,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `iter` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26445,"byte_end":26493,"line_start":733,"line_end":733,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27316,"byte_end":27323,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" Mutable pool iterator","sig":null,"attributes":[{"value":"/ Mutable pool iterator","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27222,"byte_end":27247,"line_start":761,"line_end":761,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27248,"byte_end":27251,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `iter_mut` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27252,"byte_end":27304,"line_start":763,"line_end":763,"column_start":1,"column_end":53}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":6504,"byte_end":6509,"line_start":149,"line_end":149,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":7690,"byte_end":7695,"line_start":176,"line_end":176,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8343,"byte_end":8348,"line_start":196,"line_end":196,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8498,"byte_end":8503,"line_start":201,"line_end":201,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9288,"byte_end":9292,"line_start":217,"line_end":217,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":25424,"byte_end":25428,"line_start":698,"line_end":698,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26055,"byte_end":26059,"line_start":718,"line_end":718,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26257,"byte_end":26261,"line_start":725,"line_end":725,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26678,"byte_end":26682,"line_start":741,"line_end":741,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27496,"byte_end":27503,"line_start":771,"line_end":771,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":4377,"byte_end":4382,"line_start":108,"line_end":108,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":6504,"byte_end":6509,"line_start":149,"line_end":149,"column_start":17,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":7690,"byte_end":7695,"line_start":176,"line_end":176,"column_start":33,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8343,"byte_end":8348,"line_start":196,"line_end":196,"column_start":39,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":8498,"byte_end":8503,"line_start":201,"line_end":201,"column_start":42,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":9288,"byte_end":9292,"line_start":217,"line_end":217,"column_start":17,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":25424,"byte_end":25428,"line_start":698,"line_end":698,"column_start":26,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26055,"byte_end":26059,"line_start":718,"line_end":718,"column_start":39,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26257,"byte_end":26261,"line_start":725,"line_end":725,"column_start":42,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":26678,"byte_end":26682,"line_start":741,"line_end":741,"column_start":37,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":7566}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/indexed-0.1.1/src/lib.rs","byte_start":27496,"byte_end":27503,"line_start":771,"line_end":771,"column_start":37,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":7566}}]}