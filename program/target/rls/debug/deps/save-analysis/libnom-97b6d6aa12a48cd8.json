{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1","program":"/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","nom","--edition=2018","/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"bitvec\"","--cfg","feature=\"funty\"","--cfg","feature=\"std\"","-C","metadata=97b6d6aa12a48cd8","-C","extra-filename=-97b6d6aa12a48cd8","--out-dir","/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","-L","dependency=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","--extern","bitvec=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libbitvec-ea2435117ca17e65.rmeta","--extern","funty=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libfunty-34438574dc39d8a3.rmeta","--extern","memchr=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libmemchr-9cacbc56223a3151.rmeta","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libnom-97b6d6aa12a48cd8.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[1856560446939252759,0]},"crate_root":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src","external_crates":[{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9888355131369537266,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","num":2,"id":{"name":"core","disambiguator":[11275466351773074568,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14505302196044876161,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12672318884608983985,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9602480897548461658,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6215642551405411717,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11323364399412649918,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[505106994998565642,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5151717038203672608,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12015404889719386584,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6634436157752397486,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10627139614780737919,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15241097753775192730,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4193977997774401605,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4301272078305384557,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12250611045243811845,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8394371263132856076,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":18,"id":{"name":"bitvec","disambiguator":[11220699854423835854,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":19,"id":{"name":"radium","disambiguator":[11998560462230857705,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":20,"id":{"name":"tap","disambiguator":[8029392067358955496,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":21,"id":{"name":"wyz","disambiguator":[18026623675485817393,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":22,"id":{"name":"funty","disambiguator":[5799359355431564446,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","num":23,"id":{"name":"memchr","disambiguator":[2049440482723229173,0]}}],"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":0,"byte_end":17158,"line_start":1,"line_end":525,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":9336},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16059,"byte_end":16064,"line_start":463,"line_end":463,"column_start":7,"column_end":12},"alias_span":null,"name":"alloc","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":498},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16066,"byte_end":16072,"line_start":463,"line_end":463,"column_start":14,"column_end":20},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":72},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16074,"byte_end":16079,"line_start":463,"line_end":463,"column_start":22,"column_end":27},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":2638},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16081,"byte_end":16084,"line_start":463,"line_end":463,"column_start":29,"column_end":32},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":989},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16086,"byte_end":16097,"line_start":463,"line_end":463,"column_start":34,"column_end":45},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":2800},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16099,"byte_end":16106,"line_start":463,"line_end":463,"column_start":47,"column_end":54},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":4259},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16108,"byte_end":16111,"line_start":463,"line_end":463,"column_start":56,"column_end":59},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":9444},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16113,"byte_end":16117,"line_start":463,"line_end":463,"column_start":61,"column_end":65},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":4705},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16119,"byte_end":16123,"line_start":463,"line_end":463,"column_start":67,"column_end":71},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":1822},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16125,"byte_end":16128,"line_start":463,"line_end":463,"column_start":73,"column_end":76},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":3054},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16130,"byte_end":16133,"line_start":463,"line_end":463,"column_start":78,"column_end":81},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":7958},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16135,"byte_end":16141,"line_start":463,"line_end":463,"column_start":83,"column_end":89},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":2,"index":8529},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16143,"byte_end":16149,"line_start":463,"line_end":463,"column_start":91,"column_end":97},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":4902},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16157,"byte_end":16162,"line_start":464,"line_end":464,"column_start":7,"column_end":12},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":5177},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16164,"byte_end":16167,"line_start":464,"line_end":464,"column_start":14,"column_end":17},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":5382},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16169,"byte_end":16175,"line_start":464,"line_end":464,"column_start":19,"column_end":25},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":6237},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16177,"byte_end":16180,"line_start":464,"line_end":464,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16177,"byte_end":16180,"line_start":464,"line_end":464,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":15},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16295,"byte_end":16302,"line_start":470,"line_end":470,"column_start":20,"column_end":27},"alias_span":null,"name":"v1","value":"","parent":{"krate":0,"index":60}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16390,"byte_end":16391,"line_start":478,"line_end":478,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16417,"byte_end":16418,"line_start":479,"line_end":479,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16442,"byte_end":16443,"line_start":480,"line_end":480,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16465,"byte_end":16466,"line_start":481,"line_end":481,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16540,"byte_end":16541,"line_start":485,"line_end":485,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":0,"byte_end":17158,"line_start":1,"line_end":525,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":98},{"krate":0,"index":209},{"krate":0,"index":416},{"krate":0,"index":925},{"krate":0,"index":1294},{"krate":0,"index":1349},{"krate":0,"index":1484},{"krate":0,"index":1739},{"krate":0,"index":2094},{"krate":0,"index":2277},{"krate":0,"index":2596},{"krate":0,"index":2597}],"decl_id":null,"docs":" # nom, eating data byte by byte","sig":null,"attributes":[{"value":"/ # nom, eating data byte by byte","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":40,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ streaming patterns, and as much as possible zero copy.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":109,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":172,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":187,"byte_end":190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":191,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":203,"byte_end":224,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":225,"byte_end":228,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ use nom::{","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":229,"byte_end":243,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":244,"byte_end":258,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/   bytes::complete::{tag, take_while_m_n},","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":259,"byte_end":304,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/   combinator::map_res,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":305,"byte_end":331,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/   sequence::tuple};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":332,"byte_end":355,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":356,"byte_end":359,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug,PartialEq)]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":360,"byte_end":390,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ pub struct Color {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":391,"byte_end":413,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/   pub red:     u8,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":414,"byte_end":436,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/   pub green:   u8,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":437,"byte_end":459,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   pub blue:    u8,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":460,"byte_end":482,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":483,"byte_end":488,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":489,"byte_end":492,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":493,"byte_end":562,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/   u8::from_str_radix(input, 16)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":563,"byte_end":598,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":599,"byte_end":604,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":605,"byte_end":608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn is_hex_digit(c: char) -> bool {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":609,"byte_end":647,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/   c.is_digit(16)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":648,"byte_end":668,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":669,"byte_end":674,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":675,"byte_end":678,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn hex_primary(input: &str) -> IResult<&str, u8> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":679,"byte_end":733,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/   map_res(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":734,"byte_end":748,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/     take_while_m_n(2, 2, is_hex_digit),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":749,"byte_end":792,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/     from_hex","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":793,"byte_end":809,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/   )(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":810,"byte_end":824,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":825,"byte_end":830,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":831,"byte_end":834,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fn hex_color(input: &str) -> IResult<&str, Color> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":835,"byte_end":890,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/   let (input, _) = tag(\"#\")(input)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":891,"byte_end":931,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/   let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":932,"byte_end":1027,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/   Ok((input, Color { red, green, blue }))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1032,"byte_end":1077,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1078,"byte_end":1083,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1084,"byte_end":1087,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1088,"byte_end":1103,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/   assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1104,"byte_end":1158,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/     red: 47,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1159,"byte_end":1175,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/     green: 20,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1176,"byte_end":1194,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/     blue: 223,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1195,"byte_end":1213,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/   })));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1214,"byte_end":1225,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1226,"byte_end":1231,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1232,"byte_end":1239,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1240,"byte_end":1243,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1244,"byte_end":1310,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ There are a few [guides](https://github.com/Geal/nom/tree/master/doc) with more details","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1315,"byte_end":1406,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ about [the design of nom macros](https://github.com/Geal/nom/blob/master/doc/how_nom_macros_work.md),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1407,"byte_end":1512,"line_start":58,"line_end":58,"column_start":1,"column_end":106}},{"value":"/ [how to write parsers](https://github.com/Geal/nom/blob/master/doc/making_a_new_parser_from_scratch.md),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1513,"byte_end":1621,"line_start":59,"line_end":59,"column_start":1,"column_end":109}},{"value":"/ or the [error management system](https://github.com/Geal/nom/blob/master/doc/error_management.md).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1622,"byte_end":1724,"line_start":60,"line_end":60,"column_start":1,"column_end":103}},{"value":"/ You can also check out the [recipes] module that contains examples of common patterns.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1725,"byte_end":1815,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ **Looking for a specific combinator? Read the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1820,"byte_end":1869,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/ [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md)**","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1870,"byte_end":1975,"line_start":64,"line_end":64,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1976,"byte_end":1979,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ If you are upgrading to nom 5.0, please read the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":1980,"byte_end":2032,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/ [migration document](https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_5.md).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2033,"byte_end":2125,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2126,"byte_end":2129,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See also the [FAQ](https://github.com/Geal/nom/blob/master/doc/FAQ.md).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2130,"byte_end":2205,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2206,"byte_end":2209,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Parser combinators","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2210,"byte_end":2235,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2236,"byte_end":2239,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Parser combinators are an approach to parsers that is very different from","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2240,"byte_end":2317,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ software like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2318,"byte_end":2391,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ [yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2392,"byte_end":2470,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ in a separate syntax and generating the corresponding code, you use very small","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2471,"byte_end":2553,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"/ functions with very specific purposes, like \"take 5 bytes\", or \"recognize the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2554,"byte_end":2635,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ word 'HTTP'\", and assemble them in meaningful patterns like \"recognize","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2636,"byte_end":2710,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ 'HTTP', then a space, then a version\".","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2711,"byte_end":2753,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ The resulting code is small, and looks like the grammar you would have","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2754,"byte_end":2828,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ written with other parser approaches.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2829,"byte_end":2870,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This gives us a few advantages:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2875,"byte_end":2910,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2911,"byte_end":2914,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ - The parsers are small and easy to write","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2915,"byte_end":2960,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ - The parsers components are easy to reuse (if they're general enough, please add them to nom!)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":2961,"byte_end":3060,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ - The parsers components are easy to test separately (unit tests and property-based tests)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3061,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"/ - The parser combination code looks close to the grammar you would have written","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3156,"byte_end":3239,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"/ - You can build partial parsers, specific to the data you need at the moment, and ignore the rest","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3240,"byte_end":3341,"line_start":89,"line_end":89,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3342,"byte_end":3345,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Here is an example of one such parser, to recognize text between parentheses:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3346,"byte_end":3427,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3428,"byte_end":3431,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3432,"byte_end":3443,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3444,"byte_end":3458,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3459,"byte_end":3473,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/   sequence::delimited,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3474,"byte_end":3500,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/   // see the \"streaming/complete\" paragraph lower for an explanation of these submodules","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3501,"byte_end":3593,"line_start":97,"line_end":97,"column_start":1,"column_end":93}},{"value":"/   character::complete::char,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3594,"byte_end":3626,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/   bytes::complete::is_not","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3627,"byte_end":3656,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3657,"byte_end":3663,"line_start":100,"line_end":100,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ fn parens(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3668,"byte_end":3719,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/   delimited(char('('), is_not(\")\"), char(')'))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3720,"byte_end":3777,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3778,"byte_end":3783,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3784,"byte_end":3791,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3792,"byte_end":3795,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ It defines a function named `parens` which will recognize a sequence of the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3796,"byte_end":3875,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ character `(`, the longest byte array not containing `)`, then the character","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3876,"byte_end":3956,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ `)`, and will return the byte array in the middle.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":3957,"byte_end":4011,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4012,"byte_end":4015,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Here is another parser, written without using nom's combinators this time:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4016,"byte_end":4094,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4095,"byte_end":4098,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4111,"byte_end":4127,"line_start":114,"line_end":114,"column_start":1,"column_end":17}},{"value":"/ extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4128,"byte_end":4149,"line_start":115,"line_end":115,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4150,"byte_end":4153,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ use nom::{IResult, Err, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4154,"byte_end":4190,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4191,"byte_end":4194,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4195,"byte_end":4212,"line_start":119,"line_end":119,"column_start":1,"column_end":18}},{"value":"/ fn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4213,"byte_end":4261,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/   if i.len() < 4 {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4262,"byte_end":4284,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"/     Err(Err::Incomplete(Needed::new(4)))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4285,"byte_end":4329,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/   } else {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4330,"byte_end":4344,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/     Ok((&i[4..], &i[0..4]))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4345,"byte_end":4376,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/   }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4377,"byte_end":4384,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4385,"byte_end":4390,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4391,"byte_end":4398,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4399,"byte_end":4406,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This function takes a byte array as input, and tries to consume 4 bytes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4411,"byte_end":4487,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ Writing all the parsers manually, like this, is dangerous, despite Rust's","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4488,"byte_end":4565,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ safety features. There are still a lot of mistakes one can make. That's why","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4566,"byte_end":4645,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ nom provides a list of function and macros to help in developing parsers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4646,"byte_end":4723,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4724,"byte_end":4727,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ With functions, you would write it like this:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4728,"byte_end":4777,"line_start":135,"line_end":135,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4782,"byte_end":4793,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, bytes::streaming::take};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4794,"byte_end":4841,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"/ fn take4(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4842,"byte_end":4892,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"/   take(4u8)(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4893,"byte_end":4915,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4916,"byte_end":4921,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4922,"byte_end":4929,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4930,"byte_end":4933,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ With macros, you would write it like this:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4934,"byte_end":4980,"line_start":144,"line_end":144,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4985,"byte_end":4996,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":4997,"byte_end":5013,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5014,"byte_end":5035,"line_start":148,"line_end":148,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5036,"byte_end":5039,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5040,"byte_end":5057,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ named!(take4, take!(4));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5058,"byte_end":5086,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5087,"byte_end":5094,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5095,"byte_end":5102,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ nom has used macros for combinators from versions 1 to 4, and from version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5107,"byte_end":5185,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ 5, it proposes new combinators as functions, but still allows the macros style","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5186,"byte_end":5268,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"/ (macros have been rewritten to use the functions under the hood).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5269,"byte_end":5338,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"/ For new parsers, we recommend using the functions instead of macros, since","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5339,"byte_end":5417,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ rustc messages will be much easier to understand.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5418,"byte_end":5471,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5472,"byte_end":5475,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5476,"byte_end":5479,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ A parser in nom is a function which, for an input type `I`, an output type `O`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5480,"byte_end":5562,"line_start":162,"line_end":162,"column_start":1,"column_end":83}},{"value":"/ and an optional error type `E`, will have the following signature:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5563,"byte_end":5633,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5634,"byte_end":5637,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5638,"byte_end":5656,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O, E>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5657,"byte_end":5701,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5702,"byte_end":5709,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5710,"byte_end":5713,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Or like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5714,"byte_end":5822,"line_start":169,"line_end":169,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5823,"byte_end":5826,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5827,"byte_end":5845,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ fn parser(input: I) -> IResult<I, O>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5846,"byte_end":5887,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5888,"byte_end":5895,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5896,"byte_end":5899,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ `IResult` is an alias for the `Result` type:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5900,"byte_end":5948,"line_start":175,"line_end":175,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5949,"byte_end":5952,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5953,"byte_end":5964,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ use nom::{Needed, error::Error};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":5965,"byte_end":6001,"line_start":178,"line_end":178,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6002,"byte_end":6005,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ type IResult<I, O, E = Error<I>> = Result<(I, O), Err<E>>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6006,"byte_end":6068,"line_start":180,"line_end":180,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6069,"byte_end":6072,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ enum Err<E> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6073,"byte_end":6090,"line_start":182,"line_end":182,"column_start":1,"column_end":18}},{"value":"/   Incomplete(Needed),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6091,"byte_end":6116,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"/   Error(E),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6117,"byte_end":6132,"line_start":184,"line_end":184,"column_start":1,"column_end":16}},{"value":"/   Failure(E),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6133,"byte_end":6150,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6151,"byte_end":6156,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6157,"byte_end":6164,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6165,"byte_end":6168,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ It can have the following values:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6169,"byte_end":6206,"line_start":189,"line_end":189,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6207,"byte_end":6210,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ - A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6211,"byte_end":6352,"line_start":191,"line_end":191,"column_start":1,"column_end":142}},{"value":"/ - An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6353,"byte_end":6476,"line_start":192,"line_end":192,"column_start":1,"column_end":124}},{"value":"/ - An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6477,"byte_end":6609,"line_start":193,"line_end":193,"column_start":1,"column_end":133}},{"value":"/ - An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6610,"byte_end":6768,"line_start":194,"line_end":194,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6769,"byte_end":6772,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Please refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md) for an exhaustive list of parsers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6773,"byte_end":6931,"line_start":196,"line_end":196,"column_start":1,"column_end":159}},{"value":"/ See also the rest of the documentation [here](https://github.com/Geal/nom/blob/master/doc).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":6932,"byte_end":7027,"line_start":197,"line_end":197,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7028,"byte_end":7031,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Making new parsers with function combinators","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7032,"byte_end":7083,"line_start":199,"line_end":199,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7084,"byte_end":7087,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ nom is based on functions that generate parsers, with a signature like","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7088,"byte_end":7162,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ this: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7163,"byte_end":7238,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ The arguments of a combinator can be direct values (like `take` which uses","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7239,"byte_end":7317,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"/ a number of bytes or character as argument) or even other parsers (like","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7318,"byte_end":7393,"line_start":204,"line_end":204,"column_start":1,"column_end":76}},{"value":"/ `delimited` which takes as argument 3 parsers, and returns the result of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7394,"byte_end":7470,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/ the second one if all are successful).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7471,"byte_end":7513,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7514,"byte_end":7517,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ Here are some examples:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7518,"byte_end":7545,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7546,"byte_end":7549,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7550,"byte_end":7561,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7562,"byte_end":7583,"line_start":211,"line_end":211,"column_start":1,"column_end":22}},{"value":"/ use nom::bytes::complete::{tag, take};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7584,"byte_end":7626,"line_start":212,"line_end":212,"column_start":1,"column_end":43}},{"value":"/ fn abcd_parser(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7627,"byte_end":7679,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/   tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7680,"byte_end":7754,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7755,"byte_end":7760,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7761,"byte_end":7764,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ fn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7765,"byte_end":7816,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/   take(10u8)(i) // will consume and return 10 bytes of input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7817,"byte_end":7881,"line_start":218,"line_end":218,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7882,"byte_end":7887,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7888,"byte_end":7895,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7896,"byte_end":7899,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ ## Combining parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7900,"byte_end":7924,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7925,"byte_end":7928,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ There are higher level patterns, like the **`alt`** combinator, which","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":7929,"byte_end":8002,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ provides a choice between multiple parsers. If one branch fails, it tries","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8003,"byte_end":8080,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ the next, and returns the result of the first parser that succeeds:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8081,"byte_end":8152,"line_start":226,"line_end":226,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8153,"byte_end":8156,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8157,"byte_end":8168,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8169,"byte_end":8190,"line_start":229,"line_end":229,"column_start":1,"column_end":22}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8191,"byte_end":8216,"line_start":230,"line_end":230,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8217,"byte_end":8251,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8252,"byte_end":8255,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ let mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8256,"byte_end":8311,"line_start":233,"line_end":233,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8312,"byte_end":8315,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8316,"byte_end":8391,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8392,"byte_end":8467,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8468,"byte_end":8579,"line_start":237,"line_end":237,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8580,"byte_end":8587,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8588,"byte_end":8591,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ The **`opt`** combinator makes a parser optional. If the child parser returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8592,"byte_end":8673,"line_start":240,"line_end":240,"column_start":1,"column_end":82}},{"value":"/ an error, **`opt`** will still succeed and return None:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8674,"byte_end":8733,"line_start":241,"line_end":241,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8734,"byte_end":8737,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8738,"byte_end":8749,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, combinator::opt, bytes::complete::tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8750,"byte_end":8812,"line_start":244,"line_end":244,"column_start":1,"column_end":63}},{"value":"/ fn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8813,"byte_end":8873,"line_start":245,"line_end":245,"column_start":1,"column_end":61}},{"value":"/   opt(tag(\"abcd\"))(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8874,"byte_end":8899,"line_start":246,"line_end":246,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8900,"byte_end":8905,"line_start":247,"line_end":247,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8906,"byte_end":8909,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8910,"byte_end":8991,"line_start":249,"line_end":249,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":8992,"byte_end":9063,"line_start":250,"line_end":250,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9064,"byte_end":9071,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9072,"byte_end":9075,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ **`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9076,"byte_end":9173,"line_start":253,"line_end":253,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9174,"byte_end":9177,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9178,"byte_end":9189,"line_start":255,"line_end":255,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9190,"byte_end":9226,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9227,"byte_end":9258,"line_start":257,"line_end":257,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9259,"byte_end":9276,"line_start":258,"line_end":258,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, multi::many0, bytes::complete::tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9277,"byte_end":9336,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/ use std::str;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9337,"byte_end":9354,"line_start":260,"line_end":260,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9355,"byte_end":9358,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ fn multi(i: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9359,"byte_end":9410,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/   many0(tag(\"abcd\"))(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9411,"byte_end":9438,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9439,"byte_end":9444,"line_start":264,"line_end":264,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9445,"byte_end":9448,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ let a = \"abcdef\";","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9449,"byte_end":9470,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"/ let b = \"abcdabcdef\";","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9471,"byte_end":9496,"line_start":267,"line_end":267,"column_start":1,"column_end":26}},{"value":"/ let c = \"azerty\";","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9497,"byte_end":9518,"line_start":268,"line_end":268,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9519,"byte_end":9574,"line_start":269,"line_end":269,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9575,"byte_end":9638,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(multi(c), Ok((\"azerty\", Vec::new())));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9639,"byte_end":9692,"line_start":271,"line_end":271,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9693,"byte_end":9700,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"alloc\"))]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9701,"byte_end":9737,"line_start":273,"line_end":273,"column_start":1,"column_end":37}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9738,"byte_end":9756,"line_start":274,"line_end":274,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9757,"byte_end":9764,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9765,"byte_end":9768,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ Here are some basic combining macros available:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9769,"byte_end":9820,"line_start":277,"line_end":277,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9821,"byte_end":9824,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ - **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9825,"byte_end":9936,"line_start":279,"line_end":279,"column_start":1,"column_end":112}},{"value":"/ - **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":9937,"byte_end":10055,"line_start":280,"line_end":280,"column_start":1,"column_end":119}},{"value":"/ - **`many1`**: Will apply the parser 1 or more times","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10056,"byte_end":10112,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10113,"byte_end":10116,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ There are more complex (and more useful) parsers like `tuple!`, which is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10117,"byte_end":10193,"line_start":283,"line_end":283,"column_start":1,"column_end":77}},{"value":"/ used to apply a series of parsers then assemble their results.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10194,"byte_end":10260,"line_start":284,"line_end":284,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10261,"byte_end":10264,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Example with `tuple`:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10265,"byte_end":10290,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10291,"byte_end":10294,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10295,"byte_end":10306,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10307,"byte_end":10343,"line_start":289,"line_end":289,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10344,"byte_end":10361,"line_start":290,"line_end":290,"column_start":1,"column_end":18}},{"value":"/ use nom::{error::ErrorKind, Needed,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10362,"byte_end":10401,"line_start":291,"line_end":291,"column_start":1,"column_end":40}},{"value":"/ number::streaming::be_u16,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10402,"byte_end":10432,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ bytes::streaming::{tag, take},","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10433,"byte_end":10467,"line_start":293,"line_end":293,"column_start":1,"column_end":35}},{"value":"/ sequence::tuple};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10468,"byte_end":10489,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10490,"byte_end":10493,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ let mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10494,"byte_end":10550,"line_start":296,"line_end":296,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10551,"byte_end":10554,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10555,"byte_end":10570,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/   tpl(&b\"abcdefgh\"[..]),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10571,"byte_end":10599,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"/   Ok((","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10600,"byte_end":10610,"line_start":300,"line_end":300,"column_start":1,"column_end":11}},{"value":"/     &b\"h\"[..],","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10611,"byte_end":10629,"line_start":301,"line_end":301,"column_start":1,"column_end":19}},{"value":"/     (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10630,"byte_end":10674,"line_start":302,"line_end":302,"column_start":1,"column_end":45}},{"value":"/   ))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10675,"byte_end":10683,"line_start":303,"line_end":303,"column_start":1,"column_end":9}},{"value":"/ );","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10684,"byte_end":10690,"line_start":304,"line_end":304,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10691,"byte_end":10769,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"/ let input = &b\"abcdejk\"[..];","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10770,"byte_end":10802,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10803,"byte_end":10883,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10884,"byte_end":10891,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10892,"byte_end":10899,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10900,"byte_end":10903,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ But you can also use a sequence of combinators written in imperative style,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10904,"byte_end":10983,"line_start":311,"line_end":311,"column_start":1,"column_end":80}},{"value":"/ thanks to the `?` operator:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":10984,"byte_end":11015,"line_start":312,"line_end":312,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11016,"byte_end":11019,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11020,"byte_end":11031,"line_start":314,"line_end":314,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11032,"byte_end":11068,"line_start":315,"line_end":315,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11069,"byte_end":11086,"line_start":316,"line_end":316,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, bytes::complete::tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11087,"byte_end":11132,"line_start":317,"line_end":317,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11133,"byte_end":11136,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11137,"byte_end":11168,"line_start":319,"line_end":319,"column_start":1,"column_end":32}},{"value":"/ struct A {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11169,"byte_end":11183,"line_start":320,"line_end":320,"column_start":1,"column_end":15}},{"value":"/   a: u8,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11184,"byte_end":11196,"line_start":321,"line_end":321,"column_start":1,"column_end":13}},{"value":"/   b: u8","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11197,"byte_end":11208,"line_start":322,"line_end":322,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11209,"byte_end":11214,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11215,"byte_end":11218,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11219,"byte_end":11279,"line_start":325,"line_end":325,"column_start":1,"column_end":61}},{"value":"/ fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11280,"byte_end":11340,"line_start":326,"line_end":326,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11341,"byte_end":11344,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], A> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11345,"byte_end":11386,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/   // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11387,"byte_end":11491,"line_start":329,"line_end":329,"column_start":1,"column_end":105}},{"value":"/   let (i, _) = tag(\"abcd\")(i)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11492,"byte_end":11527,"line_start":330,"line_end":330,"column_start":1,"column_end":36}},{"value":"/   let (i, a) = ret_int1(i)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11528,"byte_end":11560,"line_start":331,"line_end":331,"column_start":1,"column_end":33}},{"value":"/   let (i, _) = tag(\"efgh\")(i)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11561,"byte_end":11596,"line_start":332,"line_end":332,"column_start":1,"column_end":36}},{"value":"/   let (i, b) = ret_int2(i)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11597,"byte_end":11629,"line_start":333,"line_end":333,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11630,"byte_end":11633,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/   Ok((i, A { a, b }))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11634,"byte_end":11659,"line_start":335,"line_end":335,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11660,"byte_end":11665,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11666,"byte_end":11669,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let r = f(b\"abcdefghX\");","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11670,"byte_end":11698,"line_start":338,"line_end":338,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11699,"byte_end":11749,"line_start":339,"line_end":339,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11750,"byte_end":11757,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11758,"byte_end":11765,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11766,"byte_end":11769,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ## Streaming / Complete","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11770,"byte_end":11797,"line_start":343,"line_end":343,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11798,"byte_end":11801,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ Some of nom's modules have `streaming` or `complete` submodules. They hold","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11802,"byte_end":11880,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/ different variants of the same combinators.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11881,"byte_end":11928,"line_start":346,"line_end":346,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11929,"byte_end":11932,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ A streaming parser assumes that we might not have all of the input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":11933,"byte_end":12009,"line_start":348,"line_end":348,"column_start":1,"column_end":77}},{"value":"/ This can happen with some network protocol or large file parsers, where the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12010,"byte_end":12089,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ input buffer can be full and need to be resized or refilled.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12090,"byte_end":12154,"line_start":350,"line_end":350,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12155,"byte_end":12158,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ A complete parser assumes that we already have all of the input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12159,"byte_end":12232,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ This will be the common case with small files that can be read entirely to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12233,"byte_end":12311,"line_start":353,"line_end":353,"column_start":1,"column_end":79}},{"value":"/ memory.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12312,"byte_end":12323,"line_start":354,"line_end":354,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12324,"byte_end":12327,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Here is how it works in practice:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12328,"byte_end":12365,"line_start":356,"line_end":356,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12366,"byte_end":12369,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12370,"byte_end":12381,"line_start":358,"line_end":358,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12382,"byte_end":12463,"line_start":359,"line_end":359,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12464,"byte_end":12467,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12468,"byte_end":12526,"line_start":361,"line_end":361,"column_start":1,"column_end":59}},{"value":"/   bytes::streaming::take(4u8)(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12527,"byte_end":12563,"line_start":362,"line_end":362,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12564,"byte_end":12569,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12570,"byte_end":12573,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ fn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12574,"byte_end":12631,"line_start":365,"line_end":365,"column_start":1,"column_end":58}},{"value":"/   bytes::complete::take(4u8)(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12632,"byte_end":12667,"line_start":366,"line_end":366,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12668,"byte_end":12673,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12674,"byte_end":12677,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ // both parsers will take 4 bytes as expected","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12678,"byte_end":12727,"line_start":369,"line_end":369,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12728,"byte_end":12805,"line_start":370,"line_end":370,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12806,"byte_end":12882,"line_start":371,"line_end":371,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12883,"byte_end":12886,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ // if the input is smaller than 4 bytes, the streaming parser","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12887,"byte_end":12952,"line_start":373,"line_end":373,"column_start":1,"column_end":66}},{"value":"/ // will return `Incomplete` to indicate that we need more data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":12953,"byte_end":13019,"line_start":374,"line_end":374,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13020,"byte_end":13102,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13103,"byte_end":13106,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ // but the complete parser will return an error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13107,"byte_end":13158,"line_start":377,"line_end":377,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13159,"byte_end":13260,"line_start":378,"line_end":378,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13261,"byte_end":13264,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ // the alpha0 function recognizes 0 or more alphabetic characters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13265,"byte_end":13334,"line_start":380,"line_end":380,"column_start":1,"column_end":70}},{"value":"/ fn alpha0_streaming(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13335,"byte_end":13392,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/   character::streaming::alpha0(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13393,"byte_end":13430,"line_start":382,"line_end":382,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13431,"byte_end":13436,"line_start":383,"line_end":383,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13437,"byte_end":13440,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ fn alpha0_complete(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13441,"byte_end":13497,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/   character::complete::alpha0(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13498,"byte_end":13534,"line_start":386,"line_end":386,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13535,"byte_end":13540,"line_start":387,"line_end":387,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13541,"byte_end":13544,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ // if there's a clear limit to the recognized characters, both parsers work the same way","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13545,"byte_end":13637,"line_start":389,"line_end":389,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13638,"byte_end":13699,"line_start":390,"line_end":390,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13700,"byte_end":13760,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13761,"byte_end":13764,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ // but when there's no limit, the streaming version returns `Incomplete`, because it cannot","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13765,"byte_end":13860,"line_start":393,"line_end":393,"column_start":1,"column_end":96}},{"value":"/ // know if more input data should be recognized. The whole input could be \"abcd;\", or","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13861,"byte_end":13950,"line_start":394,"line_end":394,"column_start":1,"column_end":90}},{"value":"/ // \"abcde;\"","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13951,"byte_end":13966,"line_start":395,"line_end":395,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":13967,"byte_end":14046,"line_start":396,"line_end":396,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14047,"byte_end":14050,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ // while the complete version knows that all of the data is there","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14051,"byte_end":14120,"line_start":398,"line_end":398,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14121,"byte_end":14179,"line_start":399,"line_end":399,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14180,"byte_end":14187,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/ **Going further:** Read the [guides](https://github.com/Geal/nom/tree/master/doc),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14188,"byte_end":14274,"line_start":401,"line_end":401,"column_start":1,"column_end":87}},{"value":"/ check out the [recipes]!","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14275,"byte_end":14303,"line_start":402,"line_end":402,"column_start":1,"column_end":29}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14576,"byte_end":14598,"line_start":408,"line_end":408,"column_start":1,"column_end":23}},{"value":"warn(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":14599,"byte_end":14634,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15192,"byte_end":15195,"line_start":432,"line_end":432,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":7}],"decl_id":null,"docs":" Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\n it, albeit there it is not public.\n","sig":null,"attributes":[{"value":"/ Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15008,"byte_end":15108,"line_start":429,"line_end":429,"column_start":1,"column_end":101}},{"value":"/ it, albeit there it is not public.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15109,"byte_end":15147,"line_start":430,"line_end":430,"column_start":1,"column_end":39}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15148,"byte_end":15183,"line_start":431,"line_end":431,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16009,"byte_end":16012,"line_start":460,"line_end":460,"column_start":11,"column_end":14},"name":"std","qualname":"::lib::std","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" internal std exports for no_std compatibility\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15885,"byte_end":15908,"line_start":457,"line_end":457,"column_start":3,"column_end":26}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15911,"byte_end":15946,"line_start":458,"line_end":458,"column_start":3,"column_end":38}},{"value":"/ internal std exports for no_std compatibility","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":15949,"byte_end":15998,"line_start":459,"line_end":459,"column_start":3,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16266,"byte_end":16273,"line_start":469,"line_end":469,"column_start":13,"column_end":20},"name":"prelude","qualname":"::lib::std::prelude","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":61}],"decl_id":null,"docs":" internal reproduction of std prelude\n","sig":null,"attributes":[{"value":"/ internal reproduction of std prelude","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16194,"byte_end":16234,"line_start":467,"line_end":467,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17405,"byte_end":17415,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::util::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Helper trait to show a byte slice as a hex dump\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17260,"byte_end":17283,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/ Helper trait to show a byte slice as a hex dump","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17343,"byte_end":17394,"line_start":8,"line_end":8,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17509,"byte_end":17515,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::util::HexDisplay::to_hex","value":"pub fn to_hex(&Self, usize) -> String","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17420,"byte_end":17487,"line_start":10,"line_end":10,"column_start":3,"column_end":70}},{"value":"/ `String`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17490,"byte_end":17503,"line_start":11,"line_end":11,"column_start":3,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17673,"byte_end":17684,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::util::HexDisplay::to_hex_from","value":"pub fn to_hex_from(&Self, usize, usize) -> String","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17556,"byte_end":17651,"line_start":14,"line_end":14,"column_start":3,"column_end":98}},{"value":"/ `String`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":17654,"byte_end":17667,"line_start":15,"line_end":15,"column_start":3,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":21185,"byte_end":21192,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"dbg_dmp","qualname":"::util::dbg_dmp","value":"pub fn dbg_dmp<'a, F, O, E: Debug>(F, &'static str) -> /*impl Trait*/ where\nF: Fn(&'a [u8]) -> IResult<&'a [u8], O, E>","parent":null,"children":[],"decl_id":null,"docs":" Prints a message and the input if the parser fails.","sig":null,"attributes":[{"value":"/ Prints a message and the input if the parser fails.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20470,"byte_end":20525,"line_start":139,"line_end":139,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20526,"byte_end":20529,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The message prints the `Error` or `Incomplete`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20530,"byte_end":20580,"line_start":141,"line_end":141,"column_start":1,"column_end":51}},{"value":"/ and the parser's calling code.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20581,"byte_end":20615,"line_start":142,"line_end":142,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20616,"byte_end":20619,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ It also displays the input in hexdump format","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20620,"byte_end":20668,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20669,"byte_end":20672,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20673,"byte_end":20684,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, dbg_dmp, bytes::complete::tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20685,"byte_end":20739,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20740,"byte_end":20743,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20744,"byte_end":20789,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/   dbg_dmp(tag(\"abcd\"), \"tag\")(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20790,"byte_end":20826,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20827,"byte_end":20832,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20833,"byte_end":20836,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/   let a = &b\"efghijkl\"[..];","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20837,"byte_end":20868,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20869,"byte_end":20872,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ // Will print the following message:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20873,"byte_end":20913,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ // Error(Position(0, [101, 102, 103, 104, 105, 106, 107, 108])) at l.5 by ' tag ! ( \"abcd\" ) '","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":20914,"byte_end":21012,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ // 00000000        65 66 67 68 69 6a 6b 6c         efghijkl","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":21013,"byte_end":21076,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ f(a);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":21077,"byte_end":21086,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":21087,"byte_end":21094,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/util.rs","byte_start":21095,"byte_end":21118,"line_start":160,"line_end":160,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":3014},{"krate":0,"index":3018},{"krate":0,"index":3021},{"krate":0,"index":3023},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3042},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":193},{"krate":0,"index":3060},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16568,"byte_end":16580,"line_start":490,"line_end":490,"column_start":1,"column_end":13}},{"value":"/ Error management","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22663,"byte_end":22683,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22684,"byte_end":22687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsers are generic over their error type, requiring that it implements","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22688,"byte_end":22763,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ the `error::ParseError<Input>` trait.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22764,"byte_end":22805,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23176,"byte_end":23186,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<I>: Sized","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" This trait must be implemented by the error type of a nom parser.","sig":null,"attributes":[{"value":"/ This trait must be implemented by the error type of a nom parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22863,"byte_end":22932,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22933,"byte_end":22936,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are already implementations of it for `(Input, ErrorKind)`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":22937,"byte_end":23005,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ and `VerboseError<Input>`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23006,"byte_end":23036,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23037,"byte_end":23040,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides methods to create an error from some combinators,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23041,"byte_end":23106,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ and combine existing errors in combinators like `alt`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23107,"byte_end":23165,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23270,"byte_end":23285,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"name":"from_error_kind","qualname":"::error::ParseError::from_error_kind","value":"pub fn from_error_kind(I, ErrorKind) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23201,"byte_end":23264,"line_start":17,"line_end":17,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23533,"byte_end":23539,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"name":"append","qualname":"::error::ParseError::append","value":"pub fn append(I, ErrorKind, Self) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23325,"byte_end":23393,"line_start":20,"line_end":20,"column_start":3,"column_end":71}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23396,"byte_end":23461,"line_start":21,"line_end":21,"column_start":3,"column_end":68}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23464,"byte_end":23527,"line_start":22,"line_end":22,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23667,"byte_end":23676,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"name":"from_char","qualname":"::error::ParseError::from_char","value":"pub fn from_char(I, char) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Creates an error from an input position and an expected character\n","sig":null,"attributes":[{"value":"/ Creates an error from an input position and an expected character","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23592,"byte_end":23661,"line_start":25,"line_end":25,"column_start":3,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23887,"byte_end":23889,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"name":"or","qualname":"::error::ParseError::or","value":"pub fn or(Self, Self) -> Self","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Combines two existing errors. This function is used to compare errors\n generated in various branches of [alt]\n","sig":null,"attributes":[{"value":"/ Combines two existing errors. This function is used to compare errors","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23763,"byte_end":23836,"line_start":30,"line_end":30,"column_start":3,"column_end":76}},{"value":"/ generated in various branches of [alt]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23839,"byte_end":23881,"line_start":31,"line_end":31,"column_start":3,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":111},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24049,"byte_end":24061,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"ContextError","qualname":"::error::ContextError","value":"ContextError<I>: Sized","parent":null,"children":[{"krate":0,"index":113}],"decl_id":null,"docs":" This trait is required by the `context` combinator to add a static string\n to an existing error\n","sig":null,"attributes":[{"value":"/ This trait is required by the `context` combinator to add a static string","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23936,"byte_end":24013,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ to an existing error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24014,"byte_end":24038,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24311,"byte_end":24322,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"name":"add_context","qualname":"::error::ContextError::add_context","value":"pub fn add_context(I, &'static str, Self) -> Self","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, a static string and an existing error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24076,"byte_end":24162,"line_start":40,"line_end":40,"column_start":3,"column_end":89}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24165,"byte_end":24250,"line_start":41,"line_end":41,"column_start":3,"column_end":88}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24253,"byte_end":24305,"line_start":42,"line_end":42,"column_start":3,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24538,"byte_end":24555,"line_start":50,"line_end":50,"column_start":11,"column_end":28},"name":"FromExternalError","qualname":"::error::FromExternalError","value":"FromExternalError<I, E>","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" This trait is required by the [map_res] combinator to integrate\n error types from external functions, like [std::str::FromStr]\n","sig":null,"attributes":[{"value":"/ This trait is required by the [map_res] combinator to integrate","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24394,"byte_end":24461,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ error types from external functions, like [std::str::FromStr]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24462,"byte_end":24527,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24694,"byte_end":24713,"line_start":53,"line_end":53,"column_start":6,"column_end":25},"name":"from_external_error","qualname":"::error::FromExternalError::from_external_error","value":"pub fn from_external_error(I, ErrorKind, E) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, an [ErrorKind] indicating the\n wrapping parser, and an external error\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, an [ErrorKind] indicating the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24566,"byte_end":24643,"line_start":51,"line_end":51,"column_start":3,"column_end":80}},{"value":"/ wrapping parser, and an external error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24646,"byte_end":24688,"line_start":52,"line_end":52,"column_start":3,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24865,"byte_end":24870,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { input, code }","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017}],"decl_id":null,"docs":" default error type, only contains the error' location and code\n","sig":null,"attributes":[{"value":"/ default error type, only contains the error' location and code","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24759,"byte_end":24825,"line_start":56,"line_end":56,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24928,"byte_end":24933,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"name":"input","qualname":"::error::Error::input","value":"I","parent":{"krate":0,"index":3014},"children":[],"decl_id":null,"docs":" position of the error in the input data\n","sig":null,"attributes":[{"value":"/ position of the error in the input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24878,"byte_end":24921,"line_start":59,"line_end":59,"column_start":3,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24965,"byte_end":24969,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"name":"code","qualname":"::error::Error::code","value":"error::ErrorKind","parent":{"krate":0,"index":3014},"children":[],"decl_id":null,"docs":" nom error code\n","sig":null,"attributes":[{"value":"/ nom error code","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24940,"byte_end":24958,"line_start":61,"line_end":61,"column_start":3,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25045,"byte_end":25048,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"new","qualname":"<Error<I>>::new","value":"pub fn new(I, ErrorKind) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" creates a new basic error\n","sig":null,"attributes":[{"value":"/ creates a new basic error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25006,"byte_end":25035,"line_start":66,"line_end":66,"column_start":3,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":26800,"byte_end":26810,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"make_error","qualname":"::error::make_error","value":"pub fn make_error<I, E: ParseError<I>>(I, ErrorKind) -> E","parent":null,"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":26729,"byte_end":26792,"line_start":133,"line_end":133,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27109,"byte_end":27121,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"append_error","qualname":"::error::append_error","value":"pub fn append_error<I, E: ParseError<I>>(I, ErrorKind, E) -> E","parent":null,"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":26903,"byte_end":26971,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":26972,"byte_end":27037,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27038,"byte_end":27101,"line_start":140,"line_end":140,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27567,"byte_end":27579,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"VerboseError","qualname":"::error::VerboseError","value":"VerboseError { errors }","parent":null,"children":[{"krate":0,"index":3029}],"decl_id":null,"docs":" This error type accumulates errors and their position when backtracking\n through a parse tree. With some post processing (cf `examples/json.rs`),\n it can be used to display user friendly error messages\n","sig":null,"attributes":[{"value":"/ This error type accumulates errors and their position when backtracking","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27222,"byte_end":27297,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ through a parse tree. With some post processing (cf `examples/json.rs`),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27298,"byte_end":27374,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ it can be used to display user friendly error messages","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27375,"byte_end":27433,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27434,"byte_end":27459,"line_start":148,"line_end":148,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27710,"byte_end":27716,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"name":"errors","qualname":"::error::VerboseError::errors","value":"std::vec::Vec<(I, error::VerboseErrorKind)>","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":" List of errors accumulated by `VerboseError`, containing the affected\n part of input data, and some context\n","sig":null,"attributes":[{"value":"/ List of errors accumulated by `VerboseError`, containing the affected","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27587,"byte_end":27660,"line_start":152,"line_end":152,"column_start":3,"column_end":76}},{"value":"/ part of input data, and some context","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27663,"byte_end":27703,"line_start":153,"line_end":153,"column_start":3,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28012,"byte_end":28019,"line_start":163,"line_end":163,"column_start":3,"column_end":10},"name":"Context","qualname":"::error::VerboseErrorKind::Context","value":"VerboseErrorKind::Context(&'static str)","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" Static string added by the `context` function\n","sig":null,"attributes":[{"value":"/ Static string added by the `context` function","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27960,"byte_end":28009,"line_start":162,"line_end":162,"column_start":3,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28105,"byte_end":28109,"line_start":165,"line_end":165,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::VerboseErrorKind::Char","value":"VerboseErrorKind::Char(char)","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" Indicates which character was expected by the `char` function\n","sig":null,"attributes":[{"value":"/ Indicates which character was expected by the `char` function","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28037,"byte_end":28102,"line_start":164,"line_end":164,"column_start":3,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28165,"byte_end":28168,"line_start":167,"line_end":167,"column_start":3,"column_end":6},"name":"Nom","qualname":"::error::VerboseErrorKind::Nom","value":"VerboseErrorKind::Nom(ErrorKind)","parent":{"krate":0,"index":3042},"children":[],"decl_id":null,"docs":" Error kind given by various nom parsers\n","sig":null,"attributes":[{"value":"/ Error kind given by various nom parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28119,"byte_end":28162,"line_start":166,"line_end":166,"column_start":3,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27939,"byte_end":27955,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"VerboseErrorKind","qualname":"::error::VerboseErrorKind","value":"pub enum VerboseErrorKind {\n    Context(&'static str),\n    Char(char),\n    Nom(ErrorKind),\n}","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049}],"decl_id":null,"docs":" Error context for `VerboseError`\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27771,"byte_end":27796,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/ Error context for `VerboseError`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":27893,"byte_end":27929,"line_start":160,"line_end":160,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30245,"byte_end":30252,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"context","qualname":"::error::context","value":"pub fn context<I: Clone, E: ContextError<I>, F, O>(&'static str, F)\n-> /*impl Trait*/ where F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Create a new error from an input position, a static string and an existing error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30013,"byte_end":30098,"line_start":230,"line_end":230,"column_start":1,"column_end":86}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30099,"byte_end":30184,"line_start":231,"line_end":231,"column_start":1,"column_end":86}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30185,"byte_end":30237,"line_start":232,"line_end":232,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30843,"byte_end":30856,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::error::convert_error","value":"pub fn convert_error<I: core::ops::Deref<Target = str>>(I, VerboseError<I>)\n-> crate::lib::std::string::String","parent":null,"children":[],"decl_id":null,"docs":" Transforms a `VerboseError` into a trace with input position information\n","sig":null,"attributes":[{"value":"/ Transforms a `VerboseError` into a trace with input position information","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30672,"byte_end":30748,"line_start":248,"line_end":248,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":30749,"byte_end":30774,"line_start":249,"line_end":249,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34375,"byte_end":34378,"line_start":367,"line_end":367,"column_start":3,"column_end":6},"name":"Tag","qualname":"::error::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34382,"byte_end":34388,"line_start":368,"line_end":368,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::error::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34392,"byte_end":34398,"line_start":369,"line_end":369,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::error::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34402,"byte_end":34405,"line_start":370,"line_end":370,"column_start":3,"column_end":6},"name":"Alt","qualname":"::error::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34409,"byte_end":34414,"line_start":371,"line_end":371,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::error::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34418,"byte_end":34421,"line_start":372,"line_end":372,"column_start":3,"column_end":6},"name":"IsA","qualname":"::error::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34425,"byte_end":34438,"line_start":373,"line_end":373,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::error::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34442,"byte_end":34463,"line_start":374,"line_end":374,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::error::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34467,"byte_end":34472,"line_start":375,"line_end":375,"column_start":3,"column_end":8},"name":"Many0","qualname":"::error::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34476,"byte_end":34481,"line_start":376,"line_end":376,"column_start":3,"column_end":8},"name":"Many1","qualname":"::error::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34485,"byte_end":34493,"line_start":377,"line_end":377,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::error::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34497,"byte_end":34502,"line_start":378,"line_end":378,"column_start":3,"column_end":8},"name":"Count","qualname":"::error::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34506,"byte_end":34515,"line_start":379,"line_end":379,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::error::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34519,"byte_end":34530,"line_start":380,"line_end":380,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::error::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34534,"byte_end":34544,"line_start":381,"line_end":381,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::error::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34548,"byte_end":34553,"line_start":382,"line_end":382,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::error::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34557,"byte_end":34562,"line_start":383,"line_end":383,"column_start":3,"column_end":8},"name":"Digit","qualname":"::error::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34566,"byte_end":34574,"line_start":384,"line_end":384,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::error::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34578,"byte_end":34586,"line_start":385,"line_end":385,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::error::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34590,"byte_end":34602,"line_start":386,"line_end":386,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::error::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34606,"byte_end":34611,"line_start":387,"line_end":387,"column_start":3,"column_end":8},"name":"Space","qualname":"::error::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34615,"byte_end":34625,"line_start":388,"line_end":388,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::error::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34629,"byte_end":34642,"line_start":389,"line_end":389,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::error::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34646,"byte_end":34649,"line_start":390,"line_end":390,"column_start":3,"column_end":6},"name":"Eof","qualname":"::error::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34653,"byte_end":34659,"line_start":391,"line_end":391,"column_start":3,"column_end":9},"name":"Switch","qualname":"::error::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34663,"byte_end":34670,"line_start":392,"line_end":392,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::error::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34674,"byte_end":34679,"line_start":393,"line_end":393,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::error::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34683,"byte_end":34689,"line_start":394,"line_end":394,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::error::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34693,"byte_end":34697,"line_start":395,"line_end":395,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34701,"byte_end":34705,"line_start":396,"line_end":396,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::error::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34709,"byte_end":34720,"line_start":397,"line_end":397,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::error::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34724,"byte_end":34737,"line_start":398,"line_end":398,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::error::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34741,"byte_end":34751,"line_start":399,"line_end":399,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::error::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34755,"byte_end":34768,"line_start":400,"line_end":400,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::error::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34772,"byte_end":34786,"line_start":401,"line_end":401,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::error::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34790,"byte_end":34800,"line_start":402,"line_end":402,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::error::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34804,"byte_end":34812,"line_start":403,"line_end":403,"column_start":3,"column_end":11},"name":"Complete","qualname":"::error::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34816,"byte_end":34819,"line_start":404,"line_end":404,"column_start":3,"column_end":6},"name":"Fix","qualname":"::error::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34823,"byte_end":34830,"line_start":405,"line_end":405,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::error::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34834,"byte_end":34850,"line_start":406,"line_end":406,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::error::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34854,"byte_end":34862,"line_start":407,"line_end":407,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::error::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34866,"byte_end":34872,"line_start":408,"line_end":408,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::error::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34876,"byte_end":34879,"line_start":409,"line_end":409,"column_start":3,"column_end":6},"name":"Not","qualname":"::error::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34883,"byte_end":34894,"line_start":410,"line_end":410,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::error::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34898,"byte_end":34904,"line_start":411,"line_end":411,"column_start":3,"column_end":9},"name":"Verify","qualname":"::error::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34908,"byte_end":34917,"line_start":412,"line_end":412,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::error::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34921,"byte_end":34932,"line_start":413,"line_end":413,"column_start":3,"column_end":14},"name":"TakeWhileMN","qualname":"::error::ErrorKind::TakeWhileMN","value":"ErrorKind::TakeWhileMN","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34936,"byte_end":34943,"line_start":414,"line_end":414,"column_start":3,"column_end":10},"name":"ParseTo","qualname":"::error::ErrorKind::ParseTo","value":"ErrorKind::ParseTo","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34947,"byte_end":34955,"line_start":415,"line_end":415,"column_start":3,"column_end":11},"name":"TooLarge","qualname":"::error::ErrorKind::TooLarge","value":"ErrorKind::TooLarge","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34959,"byte_end":34969,"line_start":416,"line_end":416,"column_start":3,"column_end":13},"name":"Many0Count","qualname":"::error::ErrorKind::Many0Count","value":"ErrorKind::Many0Count","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34973,"byte_end":34983,"line_start":417,"line_end":417,"column_start":3,"column_end":13},"name":"Many1Count","qualname":"::error::ErrorKind::Many1Count","value":"ErrorKind::Many1Count","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34987,"byte_end":34992,"line_start":418,"line_end":418,"column_start":3,"column_end":8},"name":"Float","qualname":"::error::ErrorKind::Float","value":"ErrorKind::Float","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34996,"byte_end":35003,"line_start":419,"line_end":419,"column_start":3,"column_end":10},"name":"Satisfy","qualname":"::error::ErrorKind::Satisfy","value":"ErrorKind::Satisfy","parent":{"krate":0,"index":3060},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3060},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34361,"byte_end":34370,"line_start":366,"line_end":366,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    ManyTill,\n    Count,\n    TakeUntil,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    NonEmpty,\n    ManyMN,\n    Not,\n    Permutation,\n    Verify,\n    TakeTill1,\n    TakeWhileMN,\n    ParseTo,\n    TooLarge,\n    Many0Count,\n    Many1Count,\n    Float,\n    Satisfy,\n}","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165}],"decl_id":null,"docs":" Indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ Indicates which parser returned an error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34210,"byte_end":34254,"line_start":362,"line_end":362,"column_start":1,"column_end":45}},{"value":"rustfmt::skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34255,"byte_end":34271,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"allow(deprecated, missing_docs)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":34318,"byte_end":34351,"line_start":365,"line_end":365,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":35091,"byte_end":35103,"line_start":425,"line_end":425,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::error::error_to_u32","value":"pub fn error_to_u32(&ErrorKind) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a number\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":35008,"byte_end":35024,"line_start":422,"line_end":422,"column_start":1,"column_end":17}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":35025,"byte_end":35045,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"/ Converts an ErrorKind to a number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":35046,"byte_end":35083,"line_start":424,"line_end":424,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37801,"byte_end":37812,"line_start":487,"line_end":487,"column_start":10,"column_end":21},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a text description\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37702,"byte_end":37718,"line_start":484,"line_end":484,"column_start":3,"column_end":19}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37721,"byte_end":37741,"line_start":485,"line_end":485,"column_start":3,"column_end":23}},{"value":"/ Converts an ErrorKind to a text description","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37744,"byte_end":37791,"line_start":486,"line_end":486,"column_start":3,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":224},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51028,"byte_end":51035,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"Result<(I, O), Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50536,"byte_end":50577,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50578,"byte_end":50581,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It depends on the input type `I`, the output type `O`, and the error type `E`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50582,"byte_end":50663,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ (by default `(I, nom::ErrorKind)`)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50664,"byte_end":50702,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50703,"byte_end":50706,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Ok` side is a pair containing the remainder of the input (the part of the data that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50707,"byte_end":50799,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ was not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50800,"byte_end":50894,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50895,"byte_end":50898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Outside of the parsing code, you can use the [Finish::finish] method to convert","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50899,"byte_end":50982,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ it to a more common result type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":50983,"byte_end":51018,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51172,"byte_end":51178,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"Finish","qualname":"::internal::Finish","value":"Finish<I, O, E>","parent":null,"children":[{"krate":0,"index":232}],"decl_id":null,"docs":" Helper trait to convert a parser's result to a more manageable type\n","sig":null,"attributes":[{"value":"/ Helper trait to convert a parser's result to a more manageable type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51090,"byte_end":51161,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51924,"byte_end":51930,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"finish","qualname":"::internal::Finish::finish","value":"pub fn finish(Self) -> Result<(I, O), E>","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" converts the parser's result to a type that is more consumable by error\n management libraries. It keeps the same `Ok` branch, and merges `Err::Error`\n and `Err::Failure` into the `Err` side.","sig":null,"attributes":[{"value":"/ converts the parser's result to a type that is more consumable by error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51192,"byte_end":51267,"line_start":22,"line_end":22,"column_start":3,"column_end":78}},{"value":"/ management libraries. It keeps the same `Ok` branch, and merges `Err::Error`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51270,"byte_end":51350,"line_start":23,"line_end":23,"column_start":3,"column_end":83}},{"value":"/ and `Err::Failure` into the `Err` side.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51353,"byte_end":51396,"line_start":24,"line_end":24,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51399,"byte_end":51402,"line_start":25,"line_end":25,"column_start":3,"column_end":6}},{"value":"/ *warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51405,"byte_end":51487,"line_start":26,"line_end":26,"column_start":3,"column_end":85}},{"value":"/ - \"complete\" parsers: It will not be an issue, `Incomplete` is never used","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51490,"byte_end":51567,"line_start":27,"line_end":27,"column_start":3,"column_end":80}},{"value":"/ - \"streaming\" parsers: `Incomplete` will be returned if there's not enough data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51570,"byte_end":51653,"line_start":28,"line_end":28,"column_start":3,"column_end":86}},{"value":"/ for the parser to decide, and you should gather more data before parsing again.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51656,"byte_end":51739,"line_start":29,"line_end":29,"column_start":3,"column_end":86}},{"value":"/ Once the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51742,"byte_end":51833,"line_start":30,"line_end":30,"column_start":3,"column_end":94}},{"value":"/ you can get out of the parsing loop and call `finish()` on the parser's result","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51836,"byte_end":51918,"line_start":31,"line_end":31,"column_start":3,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52649,"byte_end":52656,"line_start":52,"line_end":52,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":3183},"children":[],"decl_id":null,"docs":" Needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ Needs more data, but we do not know how much","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52598,"byte_end":52646,"line_start":51,"line_end":51,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52707,"byte_end":52711,"line_start":54,"line_end":54,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(NonZeroUsize)","parent":{"krate":0,"index":3183},"children":[],"decl_id":null,"docs":" Contains the required data size in bytes\n","sig":null,"attributes":[{"value":"/ Contains the required data size in bytes","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52660,"byte_end":52704,"line_start":53,"line_end":53,"column_start":3,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52587,"byte_end":52593,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed { Unknown, Size(NonZeroUsize), }","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3186}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52423,"byte_end":52496,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52542,"byte_end":52577,"line_start":49,"line_end":49,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52836,"byte_end":52839,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"new","qualname":"<Needed>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero\n","sig":null,"attributes":[{"value":"/ Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52746,"byte_end":52826,"line_start":58,"line_end":58,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53030,"byte_end":53038,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if we know how many bytes we need\n","sig":null,"attributes":[{"value":"/ Indicates if we know how many bytes we need","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52973,"byte_end":53020,"line_start":66,"line_end":66,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53189,"byte_end":53192,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: Fn(NonZeroUsize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53084,"byte_end":53167,"line_start":71,"line_end":71,"column_start":3,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53170,"byte_end":53179,"line_start":72,"line_end":72,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54264,"byte_end":54274,"line_start":99,"line_end":99,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::Err::Incomplete","value":"Err::Incomplete(Needed)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" There was not enough data\n","sig":null,"attributes":[{"value":"/ There was not enough data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54232,"byte_end":54261,"line_start":98,"line_end":98,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54330,"byte_end":54335,"line_start":101,"line_end":101,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::Err::Error","value":"Err::Error(E)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" The parser had an error (recoverable)\n","sig":null,"attributes":[{"value":"/ The parser had an error (recoverable)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54286,"byte_end":54327,"line_start":100,"line_end":100,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54498,"byte_end":54505,"line_start":105,"line_end":105,"column_start":3,"column_end":10},"name":"Failure","qualname":"::internal::Err::Failure","value":"Err::Failure(E)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" The parser had an unrecoverable error: we got to the right\n branch and we know other branches won't work, so backtrack\n as fast as possible\n","sig":null,"attributes":[{"value":"/ The parser had an unrecoverable error: we got to the right","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54342,"byte_end":54404,"line_start":102,"line_end":102,"column_start":3,"column_end":65}},{"value":"/ branch and we know other branches won't work, so backtrack","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54407,"byte_end":54469,"line_start":103,"line_end":103,"column_start":3,"column_end":65}},{"value":"/ as fast as possible","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54472,"byte_end":54495,"line_start":104,"line_end":104,"column_start":3,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54221,"byte_end":54224,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<E> { Incomplete(Needed), Error(E), Failure(E), }","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209}],"decl_id":null,"docs":" The `Err` enum indicates the parser was not successful","sig":null,"attributes":[{"value":"/ The `Err` enum indicates the parser was not successful","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53339,"byte_end":53397,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53398,"byte_end":53401,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It has three cases:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53402,"byte_end":53425,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53426,"byte_end":53429,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ * `Incomplete` indicates that more data is needed to decide. The `Needed` enum","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53430,"byte_end":53512,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ can contain how many additional bytes are necessary. If you are sure your parser","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53513,"byte_end":53597,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ is working on full data, you can wrap your parser with the `complete` combinator","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53598,"byte_end":53682,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ to transform that case in `Error`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53683,"byte_end":53720,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ * `Error` means some parser did not succeed, but another one might (as an example,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53721,"byte_end":53807,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/ when testing different branches of an `alt` combinator)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53808,"byte_end":53867,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/ * `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53868,"byte_end":53958,"line_start":91,"line_end":91,"column_start":1,"column_end":91}},{"value":"/ to decide on the next parser to apply, and that parser fails, you know there's no need","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":53959,"byte_end":54049,"line_start":92,"line_end":92,"column_start":1,"column_end":91}},{"value":"/ to try other parsers, you were already in the right branch, so the data is invalid","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54050,"byte_end":54136,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54137,"byte_end":54140,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54176,"byte_end":54211,"line_start":96,"line_end":96,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54579,"byte_end":54592,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<Err<E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the result is Incomplete\n","sig":null,"attributes":[{"value":"/ Tests if the result is Incomplete","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54532,"byte_end":54569,"line_start":109,"line_end":109,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54757,"byte_end":54760,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"name":"map","qualname":"<Err<E>>::map","value":"pub fn map<E2, F>(Self, F) -> Err<E2> where F: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Applies the given function to the inner error\n","sig":null,"attributes":[{"value":"/ Applies the given function to the inner error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54698,"byte_end":54747,"line_start":118,"line_end":118,"column_start":3,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55077,"byte_end":55084,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"convert","qualname":"<Err<E>>::convert","value":"pub fn convert<F>(Err<F>) -> Self where E: From<F>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54991,"byte_end":55067,"line_start":130,"line_end":130,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55314,"byte_end":55323,"line_start":141,"line_end":141,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<(T, ErrorKind)>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<(U, ErrorKind)> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55222,"byte_end":55304,"line_start":140,"line_end":140,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55847,"byte_end":55855,"line_start":159,"line_end":159,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ [u8], ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(Vec<u8>, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55751,"byte_end":55774,"line_start":157,"line_end":157,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56145,"byte_end":56153,"line_start":168,"line_end":168,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ str, ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(String, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55996,"byte_end":56072,"line_start":166,"line_end":166,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":281},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56974,"byte_end":56980,"line_start":203,"line_end":203,"column_start":11,"column_end":17},"name":"Parser","qualname":"::internal::Parser","value":"Parser<I, O, E>","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" All nom parsers implement this trait\n","sig":null,"attributes":[{"value":"/ All nom parsers implement this trait","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56923,"byte_end":56963,"line_start":202,"line_end":202,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57134,"byte_end":57139,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"name":"parse","qualname":"::internal::Parser::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" A parser takes in input type, and returns a `Result` containing\n either the remaining input and the output value, or an error\n","sig":null,"attributes":[{"value":"/ A parser takes in input type, and returns a `Result` containing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56994,"byte_end":57061,"line_start":204,"line_end":204,"column_start":3,"column_end":70}},{"value":"/ either the remaining input and the output value, or an error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57064,"byte_end":57128,"line_start":205,"line_end":205,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57238,"byte_end":57241,"line_start":209,"line_end":209,"column_start":6,"column_end":9},"name":"map","qualname":"::internal::Parser::map","value":"pub fn map<G, O2>(Self, G) -> Map<Self, G, O> where G: Fn(O) -> O2,\nSelf: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Maps a function over the result of a parser\n","sig":null,"attributes":[{"value":"/ Maps a function over the result of a parser","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57185,"byte_end":57232,"line_start":208,"line_end":208,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57537,"byte_end":57545,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"name":"flat_map","qualname":"::internal::Parser::flat_map","value":"pub fn flat_map<G, H, O2>(Self, G) -> FlatMap<Self, G, O> where G: Fn(O) -> H,\nH: Parser<I, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Creates a second parser from the output of the first one, then apply over the rest of the input\n","sig":null,"attributes":[{"value":"/ Creates a second parser from the output of the first one, then apply over the rest of the input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57432,"byte_end":57531,"line_start":221,"line_end":221,"column_start":3,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57837,"byte_end":57845,"line_start":236,"line_end":236,"column_start":6,"column_end":14},"name":"and_then","qualname":"::internal::Parser::and_then","value":"pub fn and_then<G, O2>(Self, G) -> AndThen<Self, G, O> where\nG: Parser<O, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Applies a second parser over the output of the first one\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the output of the first one","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":57771,"byte_end":57831,"line_start":235,"line_end":235,"column_start":3,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58135,"byte_end":58138,"line_start":249,"line_end":249,"column_start":6,"column_end":9},"name":"and","qualname":"::internal::Parser::and","value":"pub fn and<G, O2>(Self, G) -> And<Self, G> where G: Parser<I, O2, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Applies a second parser after the first one, return their results as a tuple\n","sig":null,"attributes":[{"value":"/ Applies a second parser after the first one, return their results as a tuple","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58049,"byte_end":58129,"line_start":248,"line_end":248,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58344,"byte_end":58346,"line_start":258,"line_end":258,"column_start":6,"column_end":8},"name":"or","qualname":"::internal::Parser::or","value":"pub fn or<G>(Self, G) -> Or<Self, G> where G: Parser<I, O, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Applies a second parser over the input if the first one failed\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the input if the first one failed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58272,"byte_end":58338,"line_start":257,"line_end":257,"column_start":3,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58608,"byte_end":58612,"line_start":268,"line_end":268,"column_start":6,"column_end":10},"name":"into","qualname":"::internal::Parser::into","value":"pub fn into<O2: From<O>, E2: From<E>>(Self) -> Into<Self, O, O2, E, E2> where\nSelf: core::marker::Sized","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" automatically converts the parser's output and error values to another type, as long as they\n implement the `From` trait\n","sig":null,"attributes":[{"value":"/ automatically converts the parser's output and error values to another type, as long as they","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58473,"byte_end":58569,"line_start":266,"line_end":266,"column_start":3,"column_end":99}},{"value":"/ implement the `From` trait","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58572,"byte_end":58602,"line_start":267,"line_end":267,"column_start":3,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59419,"byte_end":59422,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"Map","qualname":"::internal::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" Implementation of `Parser::map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::map`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59336,"byte_end":59371,"line_start":301,"line_end":301,"column_start":1,"column_end":36}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59372,"byte_end":59407,"line_start":302,"line_end":302,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59840,"byte_end":59847,"line_start":320,"line_end":320,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::internal::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" Implementation of `Parser::flat_map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::flat_map`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59752,"byte_end":59792,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59793,"byte_end":59828,"line_start":319,"line_end":319,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60253,"byte_end":60260,"line_start":337,"line_end":337,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::internal::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"decl_id":null,"docs":" Implementation of `Parser::and_then`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and_then`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60165,"byte_end":60205,"line_start":335,"line_end":335,"column_start":1,"column_end":41}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60206,"byte_end":60241,"line_start":336,"line_end":336,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60673,"byte_end":60676,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"And","qualname":"::internal::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"decl_id":null,"docs":" Implementation of `Parser::and`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60590,"byte_end":60625,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60626,"byte_end":60661,"line_start":354,"line_end":354,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61050,"byte_end":61052,"line_start":372,"line_end":372,"column_start":12,"column_end":14},"name":"Or","qualname":"::internal::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" Implementation of `Parser::or`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::or`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60968,"byte_end":61002,"line_start":370,"line_end":370,"column_start":1,"column_end":35}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61003,"byte_end":61038,"line_start":371,"line_end":371,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61549,"byte_end":61553,"line_start":393,"line_end":393,"column_start":12,"column_end":16},"name":"Into","qualname":"::internal::Into","value":"Into {  }","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"decl_id":null,"docs":" Implementation of `Parser::into`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::into`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61465,"byte_end":61501,"line_start":391,"line_end":391,"column_start":1,"column_end":37}},{"value":"allow(missing_doc_code_examples)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61502,"byte_end":61537,"line_start":392,"line_end":392,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":476},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":63596,"byte_end":63607,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":477}],"decl_id":null,"docs":" Abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ Abstract method to calculate the input length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":63536,"byte_end":63585,"line_start":20,"line_end":20,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":63715,"byte_end":63724,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":476},"children":[],"decl_id":null,"docs":" Calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ Calculates the input length, as indicated by its name,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":63612,"byte_end":63670,"line_start":22,"line_end":22,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":63673,"byte_end":63709,"line_start":23,"line_end":23,"column_start":3,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":493},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":64486,"byte_end":64492,"line_start":63,"line_end":63,"column_start":11,"column_end":17},"name":"Offset","qualname":"::traits::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":494}],"decl_id":null,"docs":" Useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ Useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":64386,"byte_end":64475,"line_start":62,"line_end":62,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":64579,"byte_end":64585,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"name":"offset","qualname":"::traits::Offset::offset","value":"pub fn offset(&Self, &Self) -> usize","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ Offset between the first byte of self and the first byte of the argument","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":64497,"byte_end":64573,"line_start":64,"line_end":64,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":514},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65816,"byte_end":65823,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::traits::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":515}],"decl_id":null,"docs":" Helper trait for types that can be viewed as a byte slice\n","sig":null,"attributes":[{"value":"/ Helper trait for types that can be viewed as a byte slice","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65744,"byte_end":65805,"line_start":128,"line_end":128,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65874,"byte_end":65882,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::traits::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Casts the input type to a byte slice\n","sig":null,"attributes":[{"value":"/ Casts the input type to a byte slice","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65828,"byte_end":65868,"line_start":130,"line_end":130,"column_start":3,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":534},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67652,"byte_end":67658,"line_start":230,"line_end":230,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":" Transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ Transforms common types to a char for basic token parsing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67580,"byte_end":67641,"line_start":229,"line_end":229,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67695,"byte_end":67702,"line_start":232,"line_end":232,"column_start":6,"column_end":13},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67663,"byte_end":67689,"line_start":231,"line_end":231,"column_start":3,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67879,"byte_end":67887,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67721,"byte_end":67767,"line_start":234,"line_end":234,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67770,"byte_end":67773,"line_start":235,"line_end":235,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str` it recognizes alphabetic","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67776,"byte_end":67824,"line_start":236,"line_end":236,"column_start":3,"column_end":51}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67827,"byte_end":67873,"line_start":237,"line_end":237,"column_start":3,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67983,"byte_end":67994,"line_start":242,"line_end":242,"column_start":6,"column_end":17},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67906,"byte_end":67952,"line_start":240,"line_end":240,"column_start":3,"column_end":49}},{"value":"/ or a decimal digit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":67955,"byte_end":67977,"line_start":241,"line_end":241,"column_start":3,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68056,"byte_end":68068,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"pub fn is_dec_digit(Self) -> bool","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is a decimal digit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68012,"byte_end":68050,"line_start":243,"line_end":243,"column_start":3,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68127,"byte_end":68139,"line_start":246,"line_end":246,"column_start":6,"column_end":18},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an hex digit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68086,"byte_end":68121,"line_start":245,"line_end":245,"column_start":3,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68200,"byte_end":68212,"line_start":248,"line_end":248,"column_start":6,"column_end":18},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an octal digit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68157,"byte_end":68194,"line_start":247,"line_end":247,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68270,"byte_end":68273,"line_start":250,"line_end":250,"column_start":6,"column_end":9},"name":"len","qualname":"::traits::AsChar::len","value":"pub fn len(Self) -> usize","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ Gets the len in bytes for self","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":68230,"byte_end":68264,"line_start":249,"line_end":249,"column_start":3,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":576},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70812,"byte_end":70821,"line_start":381,"line_end":381,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584}],"decl_id":null,"docs":" Abstracts common iteration operations on the input type\n","sig":null,"attributes":[{"value":"/ Abstracts common iteration operations on the input type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70742,"byte_end":70801,"line_start":380,"line_end":380,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":577},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70954,"byte_end":70958,"line_start":385,"line_end":385,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70826,"byte_end":70887,"line_start":382,"line_end":382,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70890,"byte_end":70893,"line_start":383,"line_end":383,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70896,"byte_end":70946,"line_start":384,"line_end":384,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":578},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71168,"byte_end":71172,"line_start":389,"line_end":389,"column_start":8,"column_end":12},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter: Iterator<Item = (usize, Self::Item)>;","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item and its position\n for use with [Slice]. If we're iterating over `&str`, the position\n corresponds to the byte index of the character\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item and its position","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":70962,"byte_end":71034,"line_start":386,"line_end":386,"column_start":3,"column_end":75}},{"value":"/ for use with [Slice]. If we're iterating over `&str`, the position","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71037,"byte_end":71107,"line_start":387,"line_end":387,"column_start":3,"column_end":73}},{"value":"/ corresponds to the byte index of the character","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71110,"byte_end":71160,"line_start":388,"line_end":388,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71278,"byte_end":71286,"line_start":392,"line_end":392,"column_start":8,"column_end":16},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem: Iterator<Item = Self::Item>;","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71215,"byte_end":71270,"line_start":391,"line_end":391,"column_start":3,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71390,"byte_end":71402,"line_start":395,"line_end":395,"column_start":6,"column_end":18},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"pub fn iter_indices(&Self) -> Self::Iter","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements and their byte offsets","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71320,"byte_end":71384,"line_start":394,"line_end":394,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71474,"byte_end":71487,"line_start":397,"line_end":397,"column_start":6,"column_end":19},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"pub fn iter_elements(&Self) -> Self::IterElem","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71427,"byte_end":71468,"line_start":396,"line_end":396,"column_start":3,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71564,"byte_end":71572,"line_start":399,"line_end":399,"column_start":6,"column_end":14},"name":"position","qualname":"::traits::InputIter::position","value":"pub fn position<P>(&Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ Finds the byte position of the element","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71516,"byte_end":71558,"line_start":398,"line_end":398,"column_start":3,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71726,"byte_end":71737,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"pub fn slice_index(&Self, usize) -> Result<usize, Needed>","parent":{"krate":0,"index":576},"children":[],"decl_id":null,"docs":" Get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ Get the byte offset from the element's position in the stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71655,"byte_end":71720,"line_start":402,"line_end":402,"column_start":3,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":585},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71831,"byte_end":71840,"line_start":407,"line_end":407,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake: Sized","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" Abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ Abstracts slicing operations","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71788,"byte_end":71820,"line_start":406,"line_end":406,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71920,"byte_end":71924,"line_start":409,"line_end":409,"column_start":6,"column_end":10},"name":"take","qualname":"::traits::InputTake::take","value":"pub fn take(&Self, usize) -> Self","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Returns a slice of `count` bytes. panics if count > length\n","sig":null,"attributes":[{"value":"/ Returns a slice of `count` bytes. panics if count > length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71852,"byte_end":71914,"line_start":408,"line_end":408,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":72036,"byte_end":72046,"line_start":411,"line_end":411,"column_start":6,"column_end":16},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"pub fn take_split(&Self, usize) -> (Self, Self)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Split the stream at the `count` byte offset. panics if count > length\n","sig":null,"attributes":[{"value":"/ Split the stream at the `count` byte offset. panics if count > length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71957,"byte_end":72030,"line_start":410,"line_end":410,"column_start":3,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":635},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75703,"byte_end":75721,"line_start":573,"line_end":573,"column_start":11,"column_end":29},"name":"UnspecializedInput","qualname":"::traits::UnspecializedInput","value":"UnspecializedInput","parent":null,"children":[],"decl_id":null,"docs":" Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","sig":null,"attributes":[{"value":"/ Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75138,"byte_end":75249,"line_start":564,"line_end":564,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75250,"byte_end":75253,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ When implementing a custom input type, it is possible to use directly the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75254,"byte_end":75331,"line_start":566,"line_end":566,"column_start":1,"column_end":78}},{"value":"/ default implementation: If the input type implements `InputLength`, `InputIter`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75332,"byte_end":75416,"line_start":567,"line_end":567,"column_start":1,"column_end":85}},{"value":"/ `InputTake` and `Clone`, you can implement `UnspecializedInput` and get","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75417,"byte_end":75492,"line_start":568,"line_end":568,"column_start":1,"column_end":76}},{"value":"/ a default version of `InputTakeAtPosition` and `Compare`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75493,"byte_end":75554,"line_start":569,"line_end":569,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75555,"byte_end":75558,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, you might want to write a custom implementation of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75559,"byte_end":75638,"line_start":571,"line_end":571,"column_start":1,"column_end":80}},{"value":"/ `InputTakeAtPosition` (like the one for `&[u8]`).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75639,"byte_end":75692,"line_start":572,"line_end":572,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":636},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75920,"byte_end":75939,"line_start":578,"line_end":578,"column_start":11,"column_end":30},"name":"InputTakeAtPosition","qualname":"::traits::InputTakeAtPosition","value":"InputTakeAtPosition: Sized","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647}],"decl_id":null,"docs":" Methods to take as much input as possible until the provided function returns true for the current element.","sig":null,"attributes":[{"value":"/ Methods to take as much input as possible until the provided function returns true for the current element.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75726,"byte_end":75837,"line_start":575,"line_end":575,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75838,"byte_end":75841,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ A large part of nom's basic parsers are built using this trait.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75842,"byte_end":75909,"line_start":577,"line_end":577,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":637},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76079,"byte_end":76083,"line_start":582,"line_end":582,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputTakeAtPosition::Item","value":"type Item;","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75951,"byte_end":76012,"line_start":579,"line_end":579,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76015,"byte_end":76018,"line_start":580,"line_end":580,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76021,"byte_end":76071,"line_start":581,"line_end":581,"column_start":3,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76340,"byte_end":76357,"line_start":588,"line_end":588,"column_start":6,"column_end":23},"name":"split_at_position","qualname":"::traits::InputTakeAtPosition::split_at_position","value":"pub fn split_at_position<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76088,"byte_end":76175,"line_start":584,"line_end":584,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76178,"byte_end":76224,"line_start":585,"line_end":585,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76227,"byte_end":76230,"line_start":586,"line_end":586,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76233,"byte_end":76334,"line_start":587,"line_end":587,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76772,"byte_end":76790,"line_start":598,"line_end":598,"column_start":6,"column_end":24},"name":"split_at_position1","qualname":"::traits::InputTakeAtPosition::split_at_position1","value":"pub fn split_at_position1<P, E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76471,"byte_end":76557,"line_start":592,"line_end":592,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76560,"byte_end":76606,"line_start":593,"line_end":593,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76609,"byte_end":76612,"line_start":594,"line_end":594,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76615,"byte_end":76656,"line_start":595,"line_end":595,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76659,"byte_end":76662,"line_start":596,"line_end":596,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76665,"byte_end":76766,"line_start":597,"line_end":597,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77189,"byte_end":77215,"line_start":610,"line_end":610,"column_start":6,"column_end":32},"name":"split_at_position_complete","qualname":"::traits::InputTakeAtPosition::split_at_position_complete","value":"pub fn split_at_position_complete<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":76935,"byte_end":77022,"line_start":606,"line_end":606,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77025,"byte_end":77071,"line_start":607,"line_end":607,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77074,"byte_end":77077,"line_start":608,"line_end":608,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77080,"byte_end":77183,"line_start":609,"line_end":609,"column_start":3,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77645,"byte_end":77672,"line_start":623,"line_end":623,"column_start":6,"column_end":33},"name":"split_at_position1_complete","qualname":"::traits::InputTakeAtPosition::split_at_position1_complete","value":"pub fn split_at_position1_complete<P,\n                                   E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77342,"byte_end":77428,"line_start":617,"line_end":617,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77431,"byte_end":77477,"line_start":618,"line_end":618,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77480,"byte_end":77483,"line_start":619,"line_end":619,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77486,"byte_end":77527,"line_start":620,"line_end":620,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77530,"byte_end":77533,"line_start":621,"line_end":621,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77536,"byte_end":77639,"line_start":622,"line_end":622,"column_start":3,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84446,"byte_end":84448,"line_start":899,"line_end":899,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":" Comparison was successful\n","sig":null,"attributes":[{"value":"/ Comparison was successful","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84414,"byte_end":84443,"line_start":898,"line_end":898,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84487,"byte_end":84497,"line_start":901,"line_end":901,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":" We need more data to be sure\n","sig":null,"attributes":[{"value":"/ We need more data to be sure","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84452,"byte_end":84484,"line_start":900,"line_end":900,"column_start":3,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84525,"byte_end":84530,"line_start":903,"line_end":903,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":" Comparison failed\n","sig":null,"attributes":[{"value":"/ Comparison failed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84501,"byte_end":84522,"line_start":902,"line_end":902,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3752},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84396,"byte_end":84409,"line_start":897,"line_end":897,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"pub enum CompareResult { Ok, Incomplete, Error, }","parent":null,"children":[{"krate":0,"index":3753},{"krate":0,"index":3755},{"krate":0,"index":3757}],"decl_id":null,"docs":" Indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ Indicates wether a comparison was successful, an error, or","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84268,"byte_end":84330,"line_start":894,"line_end":894,"column_start":1,"column_end":63}},{"value":"/ if more data was needed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84331,"byte_end":84358,"line_start":895,"line_end":895,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":722},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84581,"byte_end":84588,"line_start":907,"line_end":907,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" Abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ Abstracts comparison operations","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84535,"byte_end":84570,"line_start":906,"line_end":906,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84649,"byte_end":84656,"line_start":909,"line_end":909,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"pub fn compare(&Self, T) -> CompareResult","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84596,"byte_end":84643,"line_start":908,"line_end":908,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84960,"byte_end":84975,"line_start":917,"line_end":917,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"pub fn compare_no_case(&Self, T) -> CompareResult","parent":{"krate":0,"index":722},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84690,"byte_end":84737,"line_start":910,"line_end":910,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84740,"byte_end":84770,"line_start":911,"line_end":911,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84773,"byte_end":84776,"line_start":912,"line_end":912,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str`, the comparison is done","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84779,"byte_end":84826,"line_start":913,"line_end":913,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84829,"byte_end":84874,"line_start":914,"line_end":914,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84877,"byte_end":84927,"line_start":915,"line_end":915,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":84930,"byte_end":84954,"line_start":916,"line_end":916,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":762},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":88741,"byte_end":88750,"line_start":1083,"line_end":1083,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":764}],"decl_id":null,"docs":" Look for a token in self\n","sig":null,"attributes":[{"value":"/ Look for a token in self","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":88702,"byte_end":88730,"line_start":1082,"line_end":1082,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":88807,"byte_end":88817,"line_start":1085,"line_end":1085,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"pub fn find_token(&Self, T) -> bool","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" Returns true if self contains the token\n","sig":null,"attributes":[{"value":"/ Returns true if self contains the token","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":88758,"byte_end":88801,"line_start":1084,"line_end":1084,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":799},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":90147,"byte_end":90160,"line_start":1147,"line_end":1147,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":801}],"decl_id":null,"docs":" Look for a substring in self\n","sig":null,"attributes":[{"value":"/ Look for a substring in self","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":90104,"byte_end":90136,"line_start":1146,"line_end":1146,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":90235,"byte_end":90249,"line_start":1149,"line_end":1149,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"pub fn find_substring(&Self, T) -> Option<usize>","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" Returns the byte position of the substring if it is found\n","sig":null,"attributes":[{"value":"/ Returns the byte position of the substring if it is found","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":90168,"byte_end":90229,"line_start":1148,"line_end":1148,"column_start":3,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":823},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92052,"byte_end":92059,"line_start":1223,"line_end":1223,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":825}],"decl_id":null,"docs":" Used to integrate `str`'s `parse()` method\n","sig":null,"attributes":[{"value":"/ Used to integrate `str`'s `parse()` method","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":91995,"byte_end":92041,"line_start":1222,"line_end":1222,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92214,"byte_end":92222,"line_start":1226,"line_end":1226,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"pub fn parse_to(&Self) -> Option<R>","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Succeeds if `parse()` succeeded. The byte slice implementation\n will first convert it to a `&str`, then apply the `parse()` function\n","sig":null,"attributes":[{"value":"/ Succeeds if `parse()` succeeded. The byte slice implementation","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92067,"byte_end":92133,"line_start":1224,"line_end":1224,"column_start":3,"column_end":69}},{"value":"/ will first convert it to a `&str`, then apply the `parse()` function","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92136,"byte_end":92208,"line_start":1225,"line_end":1225,"column_start":3,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":835},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92668,"byte_end":92673,"line_start":1246,"line_end":1246,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":837}],"decl_id":null,"docs":" Slicing operations using ranges.","sig":null,"attributes":[{"value":"/ Slicing operations using ranges.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92502,"byte_end":92538,"line_start":1241,"line_end":1241,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92539,"byte_end":92542,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ This trait is loosely based on","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92543,"byte_end":92577,"line_start":1243,"line_end":1243,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92578,"byte_end":92614,"line_start":1244,"line_end":1244,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92615,"byte_end":92657,"line_start":1245,"line_end":1245,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92734,"byte_end":92739,"line_start":1248,"line_end":1248,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"pub fn slice(&Self, R) -> Self","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Slices self according to the range argument\n","sig":null,"attributes":[{"value":"/ Slices self according to the range argument","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":92681,"byte_end":92728,"line_start":1247,"line_end":1247,"column_start":3,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":842},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96400,"byte_end":96410,"line_start":1396,"line_end":1396,"column_start":11,"column_end":21},"name":"ExtendInto","qualname":"::traits::ExtendInto","value":"ExtendInto","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"decl_id":null,"docs":" Abstracts something which can extend an `Extend`.\n Used to build modified input slices in `escaped_transform`\n","sig":null,"attributes":[{"value":"/ Abstracts something which can extend an `Extend`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96273,"byte_end":96326,"line_start":1394,"line_end":1394,"column_start":1,"column_end":54}},{"value":"/ Used to build modified input slices in `escaped_transform`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96327,"byte_end":96389,"line_start":1395,"line_end":1395,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":843},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96543,"byte_end":96547,"line_start":1400,"line_end":1400,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::ExtendInto::Item","value":"type Item;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96415,"byte_end":96476,"line_start":1397,"line_end":1397,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96479,"byte_end":96482,"line_start":1398,"line_end":1398,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96485,"byte_end":96535,"line_start":1399,"line_end":1399,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":844},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96594,"byte_end":96602,"line_start":1403,"line_end":1403,"column_start":8,"column_end":16},"name":"Extender","qualname":"::traits::ExtendInto::Extender","value":"type Extender;","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" The type that will be produced\n","sig":null,"attributes":[{"value":"/ The type that will be produced","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96552,"byte_end":96586,"line_start":1402,"line_end":1402,"column_start":3,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96658,"byte_end":96669,"line_start":1406,"line_end":1406,"column_start":6,"column_end":17},"name":"new_builder","qualname":"::traits::ExtendInto::new_builder","value":"pub fn new_builder(&Self) -> Self::Extender","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Create a new `Extend` of the correct type\n","sig":null,"attributes":[{"value":"/ Create a new `Extend` of the correct type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96607,"byte_end":96652,"line_start":1405,"line_end":1405,"column_start":3,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96748,"byte_end":96759,"line_start":1408,"line_end":1408,"column_start":6,"column_end":17},"name":"extend_into","qualname":"::traits::ExtendInto::extend_into","value":"pub fn extend_into(&Self, &mut Self::Extender)","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Accumulate the input into an accumulator\n","sig":null,"attributes":[{"value":"/ Accumulate the input into an accumulator","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":96698,"byte_end":96742,"line_start":1407,"line_end":1407,"column_start":3,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":887},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99137,"byte_end":99144,"line_start":1532,"line_end":1532,"column_start":11,"column_end":18},"name":"ToUsize","qualname":"::traits::ToUsize","value":"ToUsize","parent":null,"children":[{"krate":0,"index":888}],"decl_id":null,"docs":" Helper trait to convert numbers to usize.","sig":null,"attributes":[{"value":"/ Helper trait to convert numbers to usize.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98831,"byte_end":98876,"line_start":1526,"line_end":1526,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98877,"byte_end":98880,"line_start":1527,"line_end":1527,"column_start":1,"column_end":4}},{"value":"/ By default, usize implements `From<u8>` and `From<u16>` but not","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98881,"byte_end":98948,"line_start":1528,"line_end":1528,"column_start":1,"column_end":68}},{"value":"/ `From<u32>` and `From<u64>` because that would be invalid on some","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98949,"byte_end":99018,"line_start":1529,"line_end":1529,"column_start":1,"column_end":70}},{"value":"/ platforms. This trait implements the conversion for platforms","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99019,"byte_end":99084,"line_start":1530,"line_end":1530,"column_start":1,"column_end":66}},{"value":"/ with 32 and 64 bits pointer platforms","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99085,"byte_end":99126,"line_start":1531,"line_end":1531,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99181,"byte_end":99189,"line_start":1534,"line_end":1534,"column_start":6,"column_end":14},"name":"to_usize","qualname":"::traits::ToUsize::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":" converts self to usize\n","sig":null,"attributes":[{"value":"/ converts self to usize","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99149,"byte_end":99175,"line_start":1533,"line_end":1533,"column_start":3,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":899},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99856,"byte_end":99868,"line_start":1575,"line_end":1575,"column_start":11,"column_end":23},"name":"ErrorConvert","qualname":"::traits::ErrorConvert","value":"ErrorConvert<E>","parent":null,"children":[{"krate":0,"index":901}],"decl_id":null,"docs":" Equivalent From implementation to avoid orphan rules in bits parsers\n","sig":null,"attributes":[{"value":"/ Equivalent From implementation to avoid orphan rules in bits parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99773,"byte_end":99845,"line_start":1574,"line_end":1574,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99917,"byte_end":99924,"line_start":1577,"line_end":1577,"column_start":6,"column_end":13},"name":"convert","qualname":"::traits::ErrorConvert::convert","value":"pub fn convert(Self) -> E","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Transform to another error type\n","sig":null,"attributes":[{"value":"/ Transform to another error type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":99876,"byte_end":99911,"line_start":1576,"line_end":1576,"column_start":3,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":925},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1031},{"krate":0,"index":1038},{"krate":0,"index":1048},{"krate":0,"index":1056},{"krate":0,"index":1065},{"krate":0,"index":1072},{"krate":0,"index":1081},{"krate":0,"index":1088},{"krate":0,"index":1098},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1117},{"krate":0,"index":1122},{"krate":0,"index":1129},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1144},{"krate":0,"index":1149},{"krate":0,"index":1156},{"krate":0,"index":1165},{"krate":0,"index":1172},{"krate":0,"index":1181},{"krate":0,"index":1187},{"krate":0,"index":1194},{"krate":0,"index":1199},{"krate":0,"index":1206},{"krate":0,"index":1211},{"krate":0,"index":1218},{"krate":0,"index":1223},{"krate":0,"index":1230},{"krate":0,"index":1235},{"krate":0,"index":1244},{"krate":0,"index":1251},{"krate":0,"index":1256},{"krate":0,"index":1263},{"krate":0,"index":1268},{"krate":0,"index":1276},{"krate":0,"index":1288}],"decl_id":null,"docs":" General purpose combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16636,"byte_end":16648,"line_start":496,"line_end":496,"column_start":1,"column_end":13}},{"value":"/ General purpose combinators","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":101846,"byte_end":101877,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":101879,"byte_end":101904,"line_start":3,"line_end":3,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102707,"byte_end":102711,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"rest","qualname":"::combinator::rest","value":"pub fn rest<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>>, T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102444,"byte_end":102475,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102476,"byte_end":102479,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102480,"byte_end":102491,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102492,"byte_end":102524,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102525,"byte_end":102555,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102556,"byte_end":102621,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102622,"byte_end":102681,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102682,"byte_end":102689,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102690,"byte_end":102699,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103157,"byte_end":103165,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"rest_len","qualname":"::combinator::rest_len","value":"pub fn rest_len<T, E: ParseError<T>>(T) -> IResult<T, usize, E> where\nT: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the remaining input.","sig":null,"attributes":[{"value":"/ Return the length of the remaining input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102870,"byte_end":102915,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102916,"byte_end":102919,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102920,"byte_end":102931,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102932,"byte_end":102964,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest_len;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":102965,"byte_end":102999,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103000,"byte_end":103068,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103069,"byte_end":103131,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103132,"byte_end":103139,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103140,"byte_end":103149,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103876,"byte_end":103879,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<I, O1, O2, E, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: FnMut(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":" Maps a function on the result of a parser.","sig":null,"attributes":[{"value":"/ Maps a function on the result of a parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103300,"byte_end":103346,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103347,"byte_end":103350,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103351,"byte_end":103362,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103363,"byte_end":103399,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ use nom::{Err,error::ErrorKind, IResult,Parser};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103400,"byte_end":103452,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103453,"byte_end":103494,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103495,"byte_end":103524,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103525,"byte_end":103542,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103543,"byte_end":103546,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut parser = map(digit1, |s: &str| s.len());","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103547,"byte_end":103599,"line_start":65,"line_end":65,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103600,"byte_end":103603,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // the parser will count how many characters were returned by digit1","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103604,"byte_end":103676,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103677,"byte_end":103729,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103730,"byte_end":103733,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103734,"byte_end":103771,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103772,"byte_end":103852,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103853,"byte_end":103860,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":103861,"byte_end":103868,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104140,"byte_end":104144,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"mapc","qualname":"::combinator::mapc","value":"pub fn mapc<I, O1, O2, E, F, G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I)\n-> IResult<I, O1, E>, G: Fn(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105077,"byte_end":105084,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"map_res","qualname":"::combinator::map_res","value":"pub fn map_res<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning a `Result` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning a `Result` over the result of a parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104314,"byte_end":104386,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104387,"byte_end":104390,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104391,"byte_end":104402,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104403,"byte_end":104439,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104440,"byte_end":104487,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104488,"byte_end":104529,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_res;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104530,"byte_end":104563,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104564,"byte_end":104581,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104582,"byte_end":104585,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_res(digit1, |s: &str| s.parse::<u8>());","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104586,"byte_end":104649,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104650,"byte_end":104653,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104654,"byte_end":104717,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104718,"byte_end":104762,"line_start":106,"line_end":106,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104763,"byte_end":104766,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104767,"byte_end":104804,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104805,"byte_end":104878,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104879,"byte_end":104882,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104883,"byte_end":104972,"line_start":111,"line_end":111,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":104973,"byte_end":105053,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105054,"byte_end":105061,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105062,"byte_end":105069,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105544,"byte_end":105552,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"map_resc","qualname":"::combinator::map_resc","value":"pub fn map_resc<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F,\n                G>(I, F, G) -> IResult<I, O2, E> where F: Fn(I) ->\nIResult<I, O1, E>, G: Fn(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106547,"byte_end":106554,"line_start":167,"line_end":167,"column_start":8,"column_end":15},"name":"map_opt","qualname":"::combinator::map_opt","value":"pub fn map_opt<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Option<O2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning an `Option` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning an `Option` over the result of a parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105778,"byte_end":105851,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105852,"byte_end":105855,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105856,"byte_end":105867,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105868,"byte_end":105904,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105905,"byte_end":105952,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105953,"byte_end":105994,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_opt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":105995,"byte_end":106028,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106029,"byte_end":106046,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106047,"byte_end":106050,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106051,"byte_end":106119,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106120,"byte_end":106123,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106124,"byte_end":106187,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106188,"byte_end":106232,"line_start":158,"line_end":158,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106233,"byte_end":106236,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106237,"byte_end":106274,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106275,"byte_end":106348,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106349,"byte_end":106352,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106353,"byte_end":106442,"line_start":163,"line_end":163,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106443,"byte_end":106523,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106524,"byte_end":106531,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106532,"byte_end":106539,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":106988,"byte_end":106996,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"map_optc","qualname":"::combinator::map_optc","value":"pub fn map_optc<I: Clone, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nOption<O2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107744,"byte_end":107754,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"map_parser","qualname":"::combinator::map_parser","value":"pub fn map_parser<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<O1, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser over the result of another one.","sig":null,"attributes":[{"value":"/ Applies a parser over the result of another one.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107203,"byte_end":107255,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107256,"byte_end":107259,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107260,"byte_end":107271,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107272,"byte_end":107308,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107309,"byte_end":107356,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107357,"byte_end":107398,"line_start":203,"line_end":203,"column_start":1,"column_end":42}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107399,"byte_end":107434,"line_start":204,"line_end":204,"column_start":1,"column_end":36}},{"value":"/ use nom::combinator::map_parser;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107435,"byte_end":107471,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107472,"byte_end":107489,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107490,"byte_end":107493,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_parser(take(5u8), digit1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107494,"byte_end":107544,"line_start":208,"line_end":208,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107545,"byte_end":107548,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107549,"byte_end":107599,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107600,"byte_end":107648,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107649,"byte_end":107720,"line_start":212,"line_end":212,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107721,"byte_end":107728,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":107729,"byte_end":107736,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108068,"byte_end":108079,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"map_parserc","qualname":"::combinator::map_parserc","value":"pub fn map_parserc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(O1) ->\nIResult<O1, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108863,"byte_end":108871,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<I, O1, O2, E: ParseError<I>, F, G, H>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Fn(O1) -> H, H: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","sig":null,"attributes":[{"value":"/ Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108290,"byte_end":108402,"line_start":243,"line_end":243,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108403,"byte_end":108406,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108407,"byte_end":108418,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108419,"byte_end":108455,"line_start":246,"line_end":246,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108456,"byte_end":108503,"line_start":247,"line_end":247,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108504,"byte_end":108539,"line_start":248,"line_end":248,"column_start":1,"column_end":36}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108540,"byte_end":108574,"line_start":249,"line_end":249,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::flat_map;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108575,"byte_end":108609,"line_start":250,"line_end":250,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108610,"byte_end":108627,"line_start":251,"line_end":251,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108628,"byte_end":108631,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ let mut parse = flat_map(u8, take);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108632,"byte_end":108671,"line_start":253,"line_end":253,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108672,"byte_end":108675,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108676,"byte_end":108746,"line_start":255,"line_end":255,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108747,"byte_end":108839,"line_start":256,"line_end":256,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108840,"byte_end":108847,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":108848,"byte_end":108855,"line_start":258,"line_end":258,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109624,"byte_end":109627,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"opt","qualname":"::combinator::opt","value":"pub fn opt<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Optional parser: Will return `None` if not successful.","sig":null,"attributes":[{"value":"/ Optional parser: Will return `None` if not successful.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109150,"byte_end":109208,"line_start":274,"line_end":274,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109209,"byte_end":109212,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109213,"byte_end":109224,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109225,"byte_end":109261,"line_start":277,"line_end":277,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109262,"byte_end":109309,"line_start":278,"line_end":278,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::opt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109310,"byte_end":109339,"line_start":279,"line_end":279,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109340,"byte_end":109381,"line_start":280,"line_end":280,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109382,"byte_end":109399,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109400,"byte_end":109403,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ fn parser(i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109404,"byte_end":109459,"line_start":283,"line_end":283,"column_start":1,"column_end":56}},{"value":"/   opt(alpha1)(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109460,"byte_end":109480,"line_start":284,"line_end":284,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109481,"byte_end":109486,"line_start":285,"line_end":285,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109487,"byte_end":109490,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109491,"byte_end":109548,"line_start":287,"line_end":287,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109549,"byte_end":109600,"line_start":288,"line_end":288,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109601,"byte_end":109608,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109609,"byte_end":109616,"line_start":290,"line_end":290,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":109961,"byte_end":109965,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"optc","qualname":"::combinator::optc","value":"pub fn optc<I: Clone, O, E: ParseError<I>, F>(I, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110755,"byte_end":110759,"line_start":332,"line_end":332,"column_start":8,"column_end":12},"name":"cond","qualname":"::combinator::cond","value":"pub fn cond<I, O, E: ParseError<I>, F>(bool, F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls the parser if the condition is met.","sig":null,"attributes":[{"value":"/ Calls the parser if the condition is met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110103,"byte_end":110148,"line_start":313,"line_end":313,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110149,"byte_end":110152,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110153,"byte_end":110164,"line_start":315,"line_end":315,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110165,"byte_end":110201,"line_start":316,"line_end":316,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110202,"byte_end":110259,"line_start":317,"line_end":317,"column_start":1,"column_end":58}},{"value":"/ use nom::combinator::cond;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110260,"byte_end":110290,"line_start":318,"line_end":318,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110291,"byte_end":110332,"line_start":319,"line_end":319,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110333,"byte_end":110350,"line_start":320,"line_end":320,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110351,"byte_end":110354,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ fn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110355,"byte_end":110419,"line_start":322,"line_end":322,"column_start":1,"column_end":65}},{"value":"/   cond(b, alpha1)(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110420,"byte_end":110444,"line_start":323,"line_end":323,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110445,"byte_end":110450,"line_start":324,"line_end":324,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110451,"byte_end":110454,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110455,"byte_end":110518,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110519,"byte_end":110579,"line_start":327,"line_end":327,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110580,"byte_end":110672,"line_start":328,"line_end":328,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110673,"byte_end":110731,"line_start":329,"line_end":329,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110732,"byte_end":110739,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":110740,"byte_end":110747,"line_start":331,"line_end":331,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111094,"byte_end":111099,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"condc","qualname":"::combinator::condc","value":"pub fn condc<I, O, E: ParseError<I>, F>(I, bool, F)\n-> IResult<I, Option<O>, E> where F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111693,"byte_end":111697,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"peek","qualname":"::combinator::peek","value":"pub fn peek<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to apply its parser without consuming the input.","sig":null,"attributes":[{"value":"/ Tries to apply its parser without consuming the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111243,"byte_end":111301,"line_start":359,"line_end":359,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111302,"byte_end":111305,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111306,"byte_end":111317,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111318,"byte_end":111354,"line_start":362,"line_end":362,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111355,"byte_end":111402,"line_start":363,"line_end":363,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::peek;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111403,"byte_end":111433,"line_start":364,"line_end":364,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111434,"byte_end":111475,"line_start":365,"line_end":365,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111476,"byte_end":111493,"line_start":366,"line_end":366,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111494,"byte_end":111497,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ let mut parser = peek(alpha1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111498,"byte_end":111532,"line_start":368,"line_end":368,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111533,"byte_end":111536,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111537,"byte_end":111592,"line_start":370,"line_end":370,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111593,"byte_end":111669,"line_start":371,"line_end":371,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111670,"byte_end":111677,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111678,"byte_end":111685,"line_start":373,"line_end":373,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":111974,"byte_end":111979,"line_start":388,"line_end":388,"column_start":8,"column_end":13},"name":"peekc","qualname":"::combinator::peekc","value":"pub fn peekc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112574,"byte_end":112577,"line_start":412,"line_end":412,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I: InputLength + Clone, E: ParseError<I>>(I) -> IResult<I, I, E>","parent":null,"children":[],"decl_id":null,"docs":" returns its input if it is at the end of input data","sig":null,"attributes":[{"value":"/ returns its input if it is at the end of input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112110,"byte_end":112165,"line_start":395,"line_end":395,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112166,"byte_end":112169,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ When we're at the end of the data, this combinator","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112170,"byte_end":112224,"line_start":397,"line_end":397,"column_start":1,"column_end":55}},{"value":"/ will succeed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112225,"byte_end":112241,"line_start":398,"line_end":398,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112242,"byte_end":112245,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112246,"byte_end":112253,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112254,"byte_end":112290,"line_start":401,"line_end":401,"column_start":1,"column_end":37}},{"value":"/ # use std::str;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112291,"byte_end":112310,"line_start":402,"line_end":402,"column_start":1,"column_end":20}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112311,"byte_end":112359,"line_start":403,"line_end":403,"column_start":1,"column_end":49}},{"value":"/ # use nom::combinator::eof;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112360,"byte_end":112391,"line_start":404,"line_end":404,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112392,"byte_end":112395,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112396,"byte_end":112413,"line_start":406,"line_end":406,"column_start":1,"column_end":18}},{"value":"/ let parser = eof;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112414,"byte_end":112435,"line_start":407,"line_end":407,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112436,"byte_end":112508,"line_start":408,"line_end":408,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112509,"byte_end":112550,"line_start":409,"line_end":409,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112551,"byte_end":112558,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112559,"byte_end":112566,"line_start":411,"line_end":411,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113257,"byte_end":113265,"line_start":436,"line_end":436,"column_start":8,"column_end":16},"name":"complete","qualname":"::combinator::complete","value":"pub fn complete<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms Incomplete into `Error`.","sig":null,"attributes":[{"value":"/ Transforms Incomplete into `Error`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112817,"byte_end":112856,"line_start":421,"line_end":421,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112857,"byte_end":112860,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112861,"byte_end":112872,"line_start":423,"line_end":423,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112873,"byte_end":112909,"line_start":424,"line_end":424,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112910,"byte_end":112957,"line_start":425,"line_end":425,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112958,"byte_end":112994,"line_start":426,"line_end":426,"column_start":1,"column_end":37}},{"value":"/ use nom::combinator::complete;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":112995,"byte_end":113029,"line_start":427,"line_end":427,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113030,"byte_end":113047,"line_start":428,"line_end":428,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113048,"byte_end":113051,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ let mut parser = complete(take(5u8));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113052,"byte_end":113093,"line_start":430,"line_end":430,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113094,"byte_end":113097,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113098,"byte_end":113153,"line_start":432,"line_end":432,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113154,"byte_end":113233,"line_start":433,"line_end":433,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113234,"byte_end":113241,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113242,"byte_end":113249,"line_start":435,"line_end":435,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113600,"byte_end":113609,"line_start":450,"line_end":450,"column_start":8,"column_end":17},"name":"completec","qualname":"::combinator::completec","value":"pub fn completec<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E>\nwhere F: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114295,"byte_end":114308,"line_start":473,"line_end":473,"column_start":8,"column_end":21},"name":"all_consuming","qualname":"::combinator::all_consuming","value":"pub fn all_consuming<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nI: InputLength, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if all the input has been consumed by its child parser.","sig":null,"attributes":[{"value":"/ Succeeds if all the input has been consumed by its child parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113744,"byte_end":113812,"line_start":457,"line_end":457,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113813,"byte_end":113816,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113817,"byte_end":113828,"line_start":459,"line_end":459,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113829,"byte_end":113865,"line_start":460,"line_end":460,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113866,"byte_end":113913,"line_start":461,"line_end":461,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::all_consuming;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113914,"byte_end":113953,"line_start":462,"line_end":462,"column_start":1,"column_end":40}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113954,"byte_end":113995,"line_start":463,"line_end":463,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":113996,"byte_end":114013,"line_start":464,"line_end":464,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114014,"byte_end":114017,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ let mut parser = all_consuming(alpha1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114018,"byte_end":114061,"line_start":466,"line_end":466,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114062,"byte_end":114065,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114066,"byte_end":114115,"line_start":468,"line_end":468,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114116,"byte_end":114187,"line_start":469,"line_end":469,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114188,"byte_end":114271,"line_start":470,"line_end":470,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114272,"byte_end":114279,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114280,"byte_end":114287,"line_start":472,"line_end":472,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115318,"byte_end":115324,"line_start":507,"line_end":507,"column_start":8,"column_end":14},"name":"verify","qualname":"::combinator::verify","value":"pub fn verify<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the child parser if it satisfies a verification function.","sig":null,"attributes":[{"value":"/ Returns the result of the child parser if it satisfies a verification function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114637,"byte_end":114720,"line_start":488,"line_end":488,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114721,"byte_end":114724,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ The verification function takes as argument a reference to the output of the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114725,"byte_end":114805,"line_start":490,"line_end":490,"column_start":1,"column_end":81}},{"value":"/ parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114806,"byte_end":114817,"line_start":491,"line_end":491,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114818,"byte_end":114821,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114822,"byte_end":114833,"line_start":493,"line_end":493,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114834,"byte_end":114870,"line_start":494,"line_end":494,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114871,"byte_end":114918,"line_start":495,"line_end":495,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::verify;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114919,"byte_end":114951,"line_start":496,"line_end":496,"column_start":1,"column_end":33}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114952,"byte_end":114993,"line_start":497,"line_end":497,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":114994,"byte_end":115011,"line_start":498,"line_end":498,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115012,"byte_end":115015,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ let mut parser = verify(alpha1, |s: &str| s.len() == 4);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115016,"byte_end":115076,"line_start":500,"line_end":500,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115077,"byte_end":115080,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115081,"byte_end":115130,"line_start":502,"line_end":502,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115131,"byte_end":115210,"line_start":503,"line_end":503,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115211,"byte_end":115294,"line_start":504,"line_end":504,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115295,"byte_end":115302,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115303,"byte_end":115310,"line_start":506,"line_end":506,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":115773,"byte_end":115780,"line_start":530,"line_end":530,"column_start":8,"column_end":15},"name":"verifyc","qualname":"::combinator::verifyc","value":"pub fn verifyc<I: Clone, O1, O2: ?Sized, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2: ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116473,"byte_end":116478,"line_start":559,"line_end":559,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, O1: Clone, O2, E: ParseError<I>, F>(O1, F) -> /*impl Trait*/\nwhere F: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the provided value if the child parser succeeds.","sig":null,"attributes":[{"value":"/ Returns the provided value if the child parser succeeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116013,"byte_end":116073,"line_start":544,"line_end":544,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116074,"byte_end":116077,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116078,"byte_end":116089,"line_start":546,"line_end":546,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116090,"byte_end":116126,"line_start":547,"line_end":547,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116127,"byte_end":116174,"line_start":548,"line_end":548,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116175,"byte_end":116206,"line_start":549,"line_end":549,"column_start":1,"column_end":32}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116207,"byte_end":116248,"line_start":550,"line_end":550,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116249,"byte_end":116266,"line_start":551,"line_end":551,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116267,"byte_end":116270,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ let mut parser = value(1234, alpha1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116271,"byte_end":116312,"line_start":553,"line_end":553,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116313,"byte_end":116316,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116317,"byte_end":116364,"line_start":555,"line_end":555,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116365,"byte_end":116449,"line_start":556,"line_end":556,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116450,"byte_end":116457,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116458,"byte_end":116465,"line_start":558,"line_end":558,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116712,"byte_end":116718,"line_start":570,"line_end":570,"column_start":8,"column_end":14},"name":"valuec","qualname":"::combinator::valuec","value":"pub fn valuec<I, O1: Clone, O2, E: ParseError<I>, F>(I, O1, F)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117320,"byte_end":117323,"line_start":596,"line_end":596,"column_start":8,"column_end":11},"name":"not","qualname":"::combinator::not","value":"pub fn not<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the child parser returns an error.","sig":null,"attributes":[{"value":"/ Succeeds if the child parser returns an error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116890,"byte_end":116940,"line_start":581,"line_end":581,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116941,"byte_end":116944,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116945,"byte_end":116956,"line_start":583,"line_end":583,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116957,"byte_end":116993,"line_start":584,"line_end":584,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":116994,"byte_end":117041,"line_start":585,"line_end":585,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::not;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117042,"byte_end":117071,"line_start":586,"line_end":586,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117072,"byte_end":117113,"line_start":587,"line_end":587,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117114,"byte_end":117131,"line_start":588,"line_end":588,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117132,"byte_end":117135,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ let mut parser = not(alpha1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117136,"byte_end":117169,"line_start":590,"line_end":590,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117170,"byte_end":117173,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"123\"), Ok((\"123\", ())));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117174,"byte_end":117221,"line_start":592,"line_end":592,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117222,"byte_end":117296,"line_start":593,"line_end":593,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117297,"byte_end":117304,"line_start":594,"line_end":594,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117305,"byte_end":117312,"line_start":595,"line_end":595,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117691,"byte_end":117695,"line_start":611,"line_end":611,"column_start":8,"column_end":12},"name":"notc","qualname":"::combinator::notc","value":"pub fn notc<I: Clone, O, E: ParseError<I>, F>(I, F) -> IResult<I, (), E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118404,"byte_end":118413,"line_start":634,"line_end":634,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                 E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" If the child parser was successful, return the consumed input as produced value.","sig":null,"attributes":[{"value":"/ If the child parser was successful, return the consumed input as produced value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117836,"byte_end":117920,"line_start":618,"line_end":618,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117921,"byte_end":117924,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117925,"byte_end":117936,"line_start":620,"line_end":620,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117937,"byte_end":117973,"line_start":621,"line_end":621,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":117974,"byte_end":118021,"line_start":622,"line_end":622,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::recognize;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118022,"byte_end":118057,"line_start":623,"line_end":623,"column_start":1,"column_end":36}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118058,"byte_end":118107,"line_start":624,"line_end":624,"column_start":1,"column_end":50}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118108,"byte_end":118146,"line_start":625,"line_end":625,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118147,"byte_end":118164,"line_start":626,"line_end":626,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118165,"byte_end":118168,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize(separated_pair(alpha1, char(','), alpha1));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118169,"byte_end":118243,"line_start":628,"line_end":628,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118244,"byte_end":118247,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118248,"byte_end":118307,"line_start":630,"line_end":630,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118308,"byte_end":118380,"line_start":631,"line_end":631,"column_start":1,"column_end":73}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118381,"byte_end":118388,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118389,"byte_end":118396,"line_start":633,"line_end":633,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":118808,"byte_end":118818,"line_start":653,"line_end":653,"column_start":8,"column_end":18},"name":"recognizec","qualname":"::combinator::recognizec","value":"pub fn recognizec<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                  E: ParseError<I>, F>(I, F) -> IResult<I, I, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120536,"byte_end":120544,"line_start":701,"line_end":701,"column_start":8,"column_end":16},"name":"consumed","qualname":"::combinator::consumed","value":"pub fn consumed<I, O, F, E>(F) -> /*impl Trait*/ where I: Clone + Offset +\nSlice<RangeTo<usize>>, E: ParseError<I>, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" if the child parser was successful, return the consumed input with the output\n as a tuple. Functions similarly to [recognize](fn.recognize.html) except it\n returns the parser output as well.","sig":null,"attributes":[{"value":"/ if the child parser was successful, return the consumed input with the output","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119004,"byte_end":119085,"line_start":663,"line_end":663,"column_start":1,"column_end":82}},{"value":"/ as a tuple. Functions similarly to [recognize](fn.recognize.html) except it","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119086,"byte_end":119165,"line_start":664,"line_end":664,"column_start":1,"column_end":80}},{"value":"/ returns the parser output as well.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119166,"byte_end":119204,"line_start":665,"line_end":665,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119205,"byte_end":119208,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ This can be useful especially in cases where the output is not the same type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119209,"byte_end":119289,"line_start":667,"line_end":667,"column_start":1,"column_end":81}},{"value":"/ as the input, or the input is a user defined type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119290,"byte_end":119344,"line_start":668,"line_end":668,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119345,"byte_end":119348,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ Returned tuple is of the format `(consumed input, produced output)`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119349,"byte_end":119421,"line_start":670,"line_end":670,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119422,"byte_end":119425,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119426,"byte_end":119437,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119438,"byte_end":119474,"line_start":673,"line_end":673,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119475,"byte_end":119522,"line_start":674,"line_end":674,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::{consumed, value, recognize, map};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119523,"byte_end":119582,"line_start":675,"line_end":675,"column_start":1,"column_end":60}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119583,"byte_end":119632,"line_start":676,"line_end":676,"column_start":1,"column_end":50}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119633,"byte_end":119667,"line_start":677,"line_end":677,"column_start":1,"column_end":35}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119668,"byte_end":119706,"line_start":678,"line_end":678,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119707,"byte_end":119710,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ fn inner_parser(input: &str) -> IResult<&str, bool> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119711,"byte_end":119768,"line_start":680,"line_end":680,"column_start":1,"column_end":58}},{"value":"/     value(true, tag(\"1234\"))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119769,"byte_end":119808,"line_start":681,"line_end":681,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119809,"byte_end":119814,"line_start":682,"line_end":682,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119815,"byte_end":119818,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119819,"byte_end":119836,"line_start":684,"line_end":684,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119837,"byte_end":119840,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ let mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119841,"byte_end":119936,"line_start":686,"line_end":686,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119937,"byte_end":119940,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":119941,"byte_end":120019,"line_start":688,"line_end":688,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120020,"byte_end":120101,"line_start":689,"line_end":689,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120102,"byte_end":120105,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120106,"byte_end":120109,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ // the first output (representing the consumed input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120110,"byte_end":120167,"line_start":692,"line_end":692,"column_start":1,"column_end":58}},{"value":"/ // should be the same as that of the `recognize` parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120168,"byte_end":120228,"line_start":693,"line_end":693,"column_start":1,"column_end":61}},{"value":"/ let mut recognize_parser = recognize(inner_parser);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120229,"byte_end":120284,"line_start":694,"line_end":694,"column_start":1,"column_end":56}},{"value":"/ let mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120285,"byte_end":120374,"line_start":695,"line_end":695,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120375,"byte_end":120378,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120379,"byte_end":120445,"line_start":697,"line_end":697,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120446,"byte_end":120512,"line_start":698,"line_end":698,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120513,"byte_end":120520,"line_start":699,"line_end":699,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":120521,"byte_end":120528,"line_start":700,"line_end":700,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121021,"byte_end":121030,"line_start":721,"line_end":721,"column_start":8,"column_end":17},"name":"consumedc","qualname":"::combinator::consumedc","value":"pub fn consumedc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, (I, O), E>\nwhere I: Clone + Offset + Slice<RangeTo<usize>>, E: ParseError<E>, F: Fn(I) ->\nIResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121660,"byte_end":121663,"line_start":745,"line_end":745,"column_start":8,"column_end":11},"name":"cut","qualname":"::combinator::cut","value":"pub fn cut<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" transforms an error to failure","sig":null,"attributes":[{"value":"/ transforms an error to failure","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121238,"byte_end":121272,"line_start":730,"line_end":730,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121273,"byte_end":121276,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121277,"byte_end":121288,"line_start":732,"line_end":732,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121289,"byte_end":121325,"line_start":733,"line_end":733,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121326,"byte_end":121373,"line_start":734,"line_end":734,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::cut;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121374,"byte_end":121403,"line_start":735,"line_end":735,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121404,"byte_end":121445,"line_start":736,"line_end":736,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121446,"byte_end":121463,"line_start":737,"line_end":737,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121464,"byte_end":121467,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ let mut parser = cut(alpha1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121468,"byte_end":121501,"line_start":739,"line_end":739,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121502,"byte_end":121505,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121506,"byte_end":121557,"line_start":741,"line_end":741,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121558,"byte_end":121636,"line_start":742,"line_end":742,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121637,"byte_end":121644,"line_start":743,"line_end":743,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121645,"byte_end":121652,"line_start":744,"line_end":744,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":121914,"byte_end":121918,"line_start":756,"line_end":756,"column_start":8,"column_end":12},"name":"cutc","qualname":"::combinator::cutc","value":"pub fn cutc<I, O, E: ParseError<I>, F>(I, F) -> IResult<I, O, E> where\nF: Fn(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122754,"byte_end":122758,"line_start":786,"line_end":786,"column_start":8,"column_end":12},"name":"into","qualname":"::combinator::into","value":"pub fn into<I, O1, O2, E1, E2, F>(F) -> /*impl Trait*/ where O1: Into<O2>,\nE1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>, F: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":" automatically converts the child parser's result to another type","sig":null,"attributes":[{"value":"/ automatically converts the child parser's result to another type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122051,"byte_end":122119,"line_start":763,"line_end":763,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122120,"byte_end":122123,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ it will be able to convert the output value and the error value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122124,"byte_end":122191,"line_start":765,"line_end":765,"column_start":1,"column_end":68}},{"value":"/ as long as the `Into` implementations are available","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122192,"byte_end":122247,"line_start":766,"line_end":766,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122248,"byte_end":122251,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122252,"byte_end":122263,"line_start":768,"line_end":768,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122264,"byte_end":122300,"line_start":769,"line_end":769,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122301,"byte_end":122324,"line_start":770,"line_end":770,"column_start":1,"column_end":24}},{"value":"/ use nom::combinator::into;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122325,"byte_end":122355,"line_start":771,"line_end":771,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122356,"byte_end":122397,"line_start":772,"line_end":772,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122398,"byte_end":122415,"line_start":773,"line_end":773,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122416,"byte_end":122419,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/  fn parser1(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122420,"byte_end":122469,"line_start":775,"line_end":775,"column_start":1,"column_end":50}},{"value":"/    alpha1(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122470,"byte_end":122486,"line_start":776,"line_end":776,"column_start":1,"column_end":17}},{"value":"/  }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122487,"byte_end":122493,"line_start":777,"line_end":777,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122494,"byte_end":122497,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/  let mut parser2 = into(parser1);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122498,"byte_end":122535,"line_start":779,"line_end":779,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122536,"byte_end":122539,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ // the parser converts the &str output of the child parser into a Vec<u8>","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122540,"byte_end":122617,"line_start":781,"line_end":781,"column_start":1,"column_end":78}},{"value":"/ let bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122618,"byte_end":122674,"line_start":782,"line_end":782,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122675,"byte_end":122730,"line_start":783,"line_end":783,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122731,"byte_end":122738,"line_start":784,"line_end":784,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":122739,"byte_end":122746,"line_start":785,"line_end":785,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123247,"byte_end":123252,"line_start":804,"line_end":804,"column_start":8,"column_end":13},"name":"intoc","qualname":"::combinator::intoc","value":"pub fn intoc<I, O1, O2, E1, E2, F>(I, F) -> IResult<I, O2, E2> where\nO1: Into<O2>, E1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>,\nF: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124219,"byte_end":124227,"line_start":833,"line_end":833,"column_start":8,"column_end":16},"name":"iterator","qualname":"::combinator::iterator","value":"pub fn iterator<Input, Output, Error, F>(Input, F)\n-> ParserIterator<Input, Error, F> where F: Parser<Input, Output, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator from input data and a parser.","sig":null,"attributes":[{"value":"/ Creates an iterator from input data and a parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123449,"byte_end":123502,"line_start":815,"line_end":815,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123503,"byte_end":123506,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ Call the iterator's [ParserIterator::finish] method to get the remaining input if successful,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123507,"byte_end":123604,"line_start":817,"line_end":817,"column_start":1,"column_end":98}},{"value":"/ or the error value if we encountered an error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123605,"byte_end":123655,"line_start":818,"line_end":818,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123656,"byte_end":123659,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123660,"byte_end":123671,"line_start":820,"line_end":820,"column_start":1,"column_end":12}},{"value":"/ use nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123672,"byte_end":123790,"line_start":821,"line_end":821,"column_start":1,"column_end":119}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123791,"byte_end":123825,"line_start":822,"line_end":822,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123826,"byte_end":123829,"line_start":823,"line_end":823,"column_start":1,"column_end":4}},{"value":"/ let data = \"abc|defg|hijkl|mnopqr|123\";","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123830,"byte_end":123873,"line_start":824,"line_end":824,"column_start":1,"column_end":44}},{"value":"/ let mut it = iterator(data, terminated(alpha1, tag(\"|\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123874,"byte_end":123936,"line_start":825,"line_end":825,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123937,"byte_end":123940,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ let parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":123941,"byte_end":124009,"line_start":827,"line_end":827,"column_start":1,"column_end":69}},{"value":"/ let res: IResult<_,_> = it.finish();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124010,"byte_end":124050,"line_start":828,"line_end":828,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124051,"byte_end":124054,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124055,"byte_end":124165,"line_start":830,"line_end":830,"column_start":1,"column_end":111}},{"value":"/ assert_eq!(res, Ok((\"123\", ())));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124166,"byte_end":124203,"line_start":831,"line_end":831,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124204,"byte_end":124211,"line_start":832,"line_end":832,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124535,"byte_end":124549,"line_start":846,"line_end":846,"column_start":12,"column_end":26},"name":"ParserIterator","qualname":"::combinator::ParserIterator","value":"ParserIterator {  }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":" Main structure associated to the [iterator] function.\n","sig":null,"attributes":[{"value":"/ Main structure associated to the [iterator] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124466,"byte_end":124523,"line_start":845,"line_end":845,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124776,"byte_end":124782,"line_start":854,"line_end":854,"column_start":10,"column_end":16},"name":"finish","qualname":"<ParserIterator<I, E, F>>::finish","value":"pub fn finish(Self) -> IResult<I, (), E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining input if parsing was successful, or the error if we encountered an error.\n","sig":null,"attributes":[{"value":"/ Returns the remaining input if parsing was successful, or the error if we encountered an error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124667,"byte_end":124766,"line_start":853,"line_end":853,"column_start":3,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126747,"byte_end":126754,"line_start":928,"line_end":928,"column_start":8,"column_end":15},"name":"success","qualname":"::combinator::success","value":"pub fn success<I, O: Clone, E: ParseError<I>>(O) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" a parser which always succeeds with given value without consuming any input.","sig":null,"attributes":[{"value":"/ a parser which always succeeds with given value without consuming any input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":125969,"byte_end":126049,"line_start":906,"line_end":906,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126050,"byte_end":126053,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ It can be used for example as the last alternative in `alt` to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126054,"byte_end":126120,"line_start":908,"line_end":908,"column_start":1,"column_end":67}},{"value":"/ specify the default case.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126121,"byte_end":126150,"line_start":909,"line_end":909,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126151,"byte_end":126154,"line_start":910,"line_end":910,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126155,"byte_end":126166,"line_start":911,"line_end":911,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126167,"byte_end":126203,"line_start":912,"line_end":912,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126204,"byte_end":126251,"line_start":913,"line_end":913,"column_start":1,"column_end":48}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126252,"byte_end":126277,"line_start":914,"line_end":914,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::{success, value};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126278,"byte_end":126320,"line_start":915,"line_end":915,"column_start":1,"column_end":43}},{"value":"/ use nom::character::complete::char;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126321,"byte_end":126360,"line_start":916,"line_end":916,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126361,"byte_end":126378,"line_start":917,"line_end":917,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126379,"byte_end":126382,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ let mut parser = success::<_,_,(_,ErrorKind)>(10);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126383,"byte_end":126437,"line_start":919,"line_end":919,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126438,"byte_end":126485,"line_start":920,"line_end":920,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126486,"byte_end":126489,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ let mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126490,"byte_end":126591,"line_start":922,"line_end":922,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(sign(\"+10\"), Ok((\"10\", 1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126592,"byte_end":126635,"line_start":923,"line_end":923,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(sign(\"-10\"), Ok((\"10\", -1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126636,"byte_end":126680,"line_start":924,"line_end":924,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(sign(\"10\"), Ok((\"10\", 1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126681,"byte_end":126723,"line_start":925,"line_end":925,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126724,"byte_end":126731,"line_start":926,"line_end":926,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":126732,"byte_end":126739,"line_start":927,"line_end":927,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"branch","qualname":"::branch","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1324},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":5132},{"krate":0,"index":5139},{"krate":0,"index":5147},{"krate":0,"index":5156},{"krate":0,"index":5166},{"krate":0,"index":5177},{"krate":0,"index":5189},{"krate":0,"index":5202},{"krate":0,"index":5216},{"krate":0,"index":5231},{"krate":0,"index":5247},{"krate":0,"index":5264},{"krate":0,"index":5282},{"krate":0,"index":5301},{"krate":0,"index":5321},{"krate":0,"index":5342},{"krate":0,"index":5364},{"krate":0,"index":5387},{"krate":0,"index":5411},{"krate":0,"index":5436},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":5462},{"krate":0,"index":5470},{"krate":0,"index":5480},{"krate":0,"index":5492},{"krate":0,"index":5506},{"krate":0,"index":5522},{"krate":0,"index":5540},{"krate":0,"index":5560},{"krate":0,"index":5582},{"krate":0,"index":5606},{"krate":0,"index":5632},{"krate":0,"index":5660},{"krate":0,"index":5690},{"krate":0,"index":5722},{"krate":0,"index":5756},{"krate":0,"index":5792},{"krate":0,"index":5830},{"krate":0,"index":5870},{"krate":0,"index":5912},{"krate":0,"index":5956}],"decl_id":null,"docs":" Choice combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16669,"byte_end":16681,"line_start":498,"line_end":498,"column_start":1,"column_end":13}},{"value":"/ Choice combinators","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":169861,"byte_end":169883,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170137,"byte_end":170140,"line_start":13,"line_end":13,"column_start":11,"column_end":14},"name":"Alt","qualname":"::branch::Alt","value":"Alt<I, O, E>","parent":null,"children":[{"krate":0,"index":1323}],"decl_id":null,"docs":" Helper trait for the [alt()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [alt()] combinator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170016,"byte_end":170060,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170061,"byte_end":170064,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170065,"byte_end":170126,"line_start":12,"line_end":12,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170248,"byte_end":170254,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"name":"choice","qualname":"::branch::Alt::choice","value":"pub fn choice(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" Tests each parser in the tuple and returns the result of the first one that succeeds\n","sig":null,"attributes":[{"value":"/ Tests each parser in the tuple and returns the result of the first one that succeeds","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170154,"byte_end":170242,"line_start":14,"line_end":14,"column_start":3,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171445,"byte_end":171448,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"alt","qualname":"::branch::alt","value":"pub fn alt<I: Clone, O, E: ParseError<I>, List: Alt<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Tests a list of parsers one by one until one succeeds.","sig":null,"attributes":[{"value":"/ Tests a list of parsers one by one until one succeeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170300,"byte_end":170358,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170359,"byte_end":170362,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It takes as argument a tuple of parsers. There is a maximum of 21","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170363,"byte_end":170432,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ parsers. If you need more, it is possible to nest them in other `alt` calls,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170433,"byte_end":170513,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ like this: `alt(parser_a, alt(parser_b, parser_c))`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170514,"byte_end":170569,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170570,"byte_end":170573,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170574,"byte_end":170585,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170586,"byte_end":170622,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170623,"byte_end":170678,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170679,"byte_end":170730,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170731,"byte_end":170756,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170757,"byte_end":170774,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170775,"byte_end":170826,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/   alt((alpha1, digit1))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170827,"byte_end":170861,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170862,"byte_end":170868,"line_start":32,"line_end":32,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170869,"byte_end":170872,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // the first parser, alpha1, recognizes the input","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170873,"byte_end":170926,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170927,"byte_end":170974,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170975,"byte_end":170978,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // the first parser returns an error, so alt tries the second one","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":170979,"byte_end":171048,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171049,"byte_end":171102,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171103,"byte_end":171106,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // both parsers failed, and with the default error type, alt will return the last error","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171107,"byte_end":171198,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171199,"byte_end":171284,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171285,"byte_end":171292,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171293,"byte_end":171300,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171301,"byte_end":171304,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ With a custom error type, it is possible to have alt return the error of the parser","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171305,"byte_end":171392,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/ that went the farthest in the input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171393,"byte_end":171437,"line_start":46,"line_end":46,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171715,"byte_end":171726,"line_start":56,"line_end":56,"column_start":11,"column_end":22},"name":"Permutation","qualname":"::branch::Permutation","value":"Permutation<I, O, E>","parent":null,"children":[{"krate":0,"index":1335}],"decl_id":null,"docs":" Helper trait for the [permutation()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [permutation()] combinator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171586,"byte_end":171638,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171639,"byte_end":171642,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171643,"byte_end":171704,"line_start":55,"line_end":55,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171833,"byte_end":171844,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"name":"permutation","qualname":"::branch::Permutation::permutation","value":"pub fn permutation(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Tries to apply all parsers in the tuple in various orders until all of them succeed\n","sig":null,"attributes":[{"value":"/ Tries to apply all parsers in the tuple in various orders until all of them succeed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171740,"byte_end":171827,"line_start":57,"line_end":57,"column_start":3,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173561,"byte_end":173572,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"permutation","qualname":"::branch::permutation","value":"pub fn permutation<I: Clone, O, E: ParseError<I>,\n                   List: Permutation<I, O, E>>(List) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Applies a list of parsers in any order.","sig":null,"attributes":[{"value":"/ Applies a list of parsers in any order.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171890,"byte_end":171933,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171934,"byte_end":171937,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Permutation will succeed if all of the child parsers succeeded.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":171938,"byte_end":172005,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/ It takes as argument a tuple of parsers, and returns a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172006,"byte_end":172064,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ tuple of the parser results.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172065,"byte_end":172097,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172098,"byte_end":172101,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172102,"byte_end":172113,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172114,"byte_end":172150,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172151,"byte_end":172215,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172216,"byte_end":172267,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172268,"byte_end":172301,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172302,"byte_end":172319,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, (&str, &str)> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172320,"byte_end":172379,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/   permutation((alpha1, digit1))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172380,"byte_end":172422,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172423,"byte_end":172428,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172429,"byte_end":172432,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // permutation recognizes alphabetic characters then digit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172433,"byte_end":172495,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172496,"byte_end":172555,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172556,"byte_end":172559,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // but also in inverse order","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172560,"byte_end":172592,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172593,"byte_end":172652,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172653,"byte_end":172656,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // it will fail if one of the parsers failed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172657,"byte_end":172705,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172706,"byte_end":172789,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172790,"byte_end":172797,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172798,"byte_end":172805,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172806,"byte_end":172809,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The parsers are applied greedily: if there are multiple unapplied parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172810,"byte_end":172887,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ that could parse the next slice of input, the first one is used.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172888,"byte_end":172956,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172957,"byte_end":172968,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":172969,"byte_end":173026,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173027,"byte_end":173060,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ use nom::character::complete::{anychar, char};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173061,"byte_end":173111,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173112,"byte_end":173115,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, (char, char)> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173116,"byte_end":173175,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/   permutation((anychar, char('a')))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173176,"byte_end":173222,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173223,"byte_end":173228,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173229,"byte_end":173232,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'b', then char('a') parses 'a'","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173233,"byte_end":173285,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173286,"byte_end":173337,"line_start":100,"line_end":100,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173338,"byte_end":173341,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'a', then char('a') fails on 'b',","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173342,"byte_end":173397,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ // even though char('a') followed by anychar would succeed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173398,"byte_end":173460,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173461,"byte_end":173541,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173542,"byte_end":173549,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/branch/mod.rs","byte_start":173550,"byte_end":173553,"line_start":106,"line_end":106,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1380},{"krate":0,"index":1387},{"krate":0,"index":1396},{"krate":0,"index":1403},{"krate":0,"index":1413},{"krate":0,"index":1420},{"krate":0,"index":1432},{"krate":0,"index":1441},{"krate":0,"index":1453},{"krate":0,"index":1462},{"krate":0,"index":1467},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":6002},{"krate":0,"index":6010},{"krate":0,"index":6020},{"krate":0,"index":6032},{"krate":0,"index":6046},{"krate":0,"index":6062},{"krate":0,"index":6080},{"krate":0,"index":6100},{"krate":0,"index":6122},{"krate":0,"index":6146},{"krate":0,"index":6172},{"krate":0,"index":6200},{"krate":0,"index":6230},{"krate":0,"index":6262},{"krate":0,"index":6296},{"krate":0,"index":6332},{"krate":0,"index":6370},{"krate":0,"index":6410},{"krate":0,"index":6452},{"krate":0,"index":6496},{"krate":0,"index":1477}],"decl_id":null,"docs":" Combinators applying parsers in sequence\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16698,"byte_end":16710,"line_start":500,"line_end":500,"column_start":1,"column_end":13}},{"value":"/ Combinators applying parsers in sequence","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":207965,"byte_end":208009,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208800,"byte_end":208804,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"pair","qualname":"::sequence::pair","value":"pub fn pair<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208108,"byte_end":208149,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208150,"byte_end":208202,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208203,"byte_end":208206,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208207,"byte_end":208222,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208223,"byte_end":208263,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208264,"byte_end":208306,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208307,"byte_end":208318,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208319,"byte_end":208366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208367,"byte_end":208395,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::pair;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208396,"byte_end":208424,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208425,"byte_end":208459,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208460,"byte_end":208463,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut parser = pair(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208464,"byte_end":208514,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208515,"byte_end":208518,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208519,"byte_end":208578,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208579,"byte_end":208644,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208645,"byte_end":208711,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208712,"byte_end":208784,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":208785,"byte_end":208792,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209186,"byte_end":209191,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"pairc","qualname":"::sequence::pairc","value":"pub fn pairc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, (O1, O2), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210094,"byte_end":210102,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"preceded","qualname":"::sequence::preceded","value":"pub fn preceded<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209400,"byte_end":209460,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209461,"byte_end":209508,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209509,"byte_end":209512,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209513,"byte_end":209528,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ * `first` The opening parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209529,"byte_end":209562,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/ * `second` The second parser to get object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209563,"byte_end":209610,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209611,"byte_end":209622,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209623,"byte_end":209670,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209671,"byte_end":209699,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::preceded;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209700,"byte_end":209732,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209733,"byte_end":209767,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209768,"byte_end":209771,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let mut parser = preceded(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209772,"byte_end":209826,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209827,"byte_end":209830,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209831,"byte_end":209881,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209882,"byte_end":209938,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":209939,"byte_end":210005,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210006,"byte_end":210078,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210079,"byte_end":210086,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210448,"byte_end":210457,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"precededc","qualname":"::sequence::precededc","value":"pub fn precededc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211374,"byte_end":211384,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"terminated","qualname":"::sequence::terminated","value":"pub fn terminated<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the second parser and discards it.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210664,"byte_end":210705,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the second parser and discards it.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210706,"byte_end":210772,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210773,"byte_end":210776,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210777,"byte_end":210792,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210793,"byte_end":210833,"line_start":107,"line_end":107,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to match an object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210834,"byte_end":210886,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210887,"byte_end":210898,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210899,"byte_end":210946,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210947,"byte_end":210975,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::terminated;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":210976,"byte_end":211010,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211011,"byte_end":211045,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211046,"byte_end":211049,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ let mut parser = terminated(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211050,"byte_end":211106,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211107,"byte_end":211110,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211111,"byte_end":211161,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211162,"byte_end":211218,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211219,"byte_end":211285,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211286,"byte_end":211358,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211359,"byte_end":211366,"line_start":121,"line_end":121,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211753,"byte_end":211764,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"terminatedc","qualname":"::sequence::terminatedc","value":"pub fn terminatedc<I, O1, O2, E: ParseError<I>, F, G>(I, F, G)\n-> IResult<I, O1, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212804,"byte_end":212818,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"separated_pair","qualname":"::sequence::separated_pair","value":"pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the sep_parser and discards it,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":211973,"byte_end":212014,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the sep_parser and discards it,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212015,"byte_end":212078,"line_start":151,"line_end":151,"column_start":1,"column_end":64}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212079,"byte_end":212131,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212132,"byte_end":212135,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212136,"byte_end":212151,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212152,"byte_end":212192,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212193,"byte_end":212235,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212236,"byte_end":212278,"line_start":157,"line_end":157,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212279,"byte_end":212290,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212291,"byte_end":212338,"line_start":159,"line_end":159,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212339,"byte_end":212367,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212368,"byte_end":212406,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212407,"byte_end":212441,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212442,"byte_end":212445,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212446,"byte_end":212516,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212517,"byte_end":212520,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212521,"byte_end":212581,"line_start":166,"line_end":166,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212582,"byte_end":212648,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212649,"byte_end":212715,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212716,"byte_end":212788,"line_start":169,"line_end":169,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":212789,"byte_end":212796,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213284,"byte_end":213299,"line_start":190,"line_end":190,"column_start":8,"column_end":23},"name":"separated_pairc","qualname":"::sequence::separated_pairc","value":"pub fn separated_pairc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, (O1, O3), E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214415,"byte_end":214424,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"delimited","qualname":"::sequence::delimited","value":"pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser,\n and finally matches an object from the third parser and discards it.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213573,"byte_end":213633,"line_start":204,"line_end":204,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213634,"byte_end":213681,"line_start":205,"line_end":205,"column_start":1,"column_end":48}},{"value":"/ and finally matches an object from the third parser and discards it.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213682,"byte_end":213754,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213755,"byte_end":213758,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213759,"byte_end":213774,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply and discard.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213775,"byte_end":213827,"line_start":209,"line_end":209,"column_start":1,"column_end":53}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213828,"byte_end":213870,"line_start":210,"line_end":210,"column_start":1,"column_end":43}},{"value":"/ * `third` The third parser to apply and discard.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213871,"byte_end":213923,"line_start":211,"line_end":211,"column_start":1,"column_end":53}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213924,"byte_end":213935,"line_start":212,"line_end":212,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213936,"byte_end":213983,"line_start":213,"line_end":213,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":213984,"byte_end":214012,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214013,"byte_end":214046,"line_start":215,"line_end":215,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214047,"byte_end":214081,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214082,"byte_end":214085,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let mut parser = delimited(tag(\"(\"), tag(\"abc\"), tag(\")\"));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214086,"byte_end":214149,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214150,"byte_end":214153,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"(abc)\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214154,"byte_end":214203,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"(abc)def\"), Ok((\"def\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214204,"byte_end":214259,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214260,"byte_end":214326,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214327,"byte_end":214399,"line_start":223,"line_end":223,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214400,"byte_end":214407,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":214881,"byte_end":214891,"line_start":244,"line_end":244,"column_start":8,"column_end":18},"name":"delimitedc","qualname":"::sequence::delimitedc","value":"pub fn delimitedc<I, O1, O2, O3, E: ParseError<I>, F, G, H>(I, F, G, H)\n-> IResult<I, O2, E> where F: Fn(I) -> IResult<I, O1, E>, G: Fn(I) ->\nIResult<I, O2, E>, H: Fn(I) -> IResult<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215289,"byte_end":215294,"line_start":261,"line_end":261,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::sequence::Tuple","value":"Tuple<I, O, E>","parent":null,"children":[{"krate":0,"index":1466}],"decl_id":null,"docs":" Helper trait for the tuple combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the tuple combinator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215158,"byte_end":215200,"line_start":258,"line_end":258,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215201,"byte_end":215204,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of parsers of up to 21 elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215205,"byte_end":215278,"line_start":260,"line_end":260,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215381,"byte_end":215386,"line_start":263,"line_end":263,"column_start":6,"column_end":11},"name":"parse","qualname":"::sequence::Tuple::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1462},"children":[],"decl_id":null,"docs":" Parses the input and returns a tuple of results of each parser.\n","sig":null,"attributes":[{"value":"/ Parses the input and returns a tuple of results of each parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":215308,"byte_end":215375,"line_start":262,"line_end":262,"column_start":3,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217871,"byte_end":217876,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"tuple","qualname":"::sequence::tuple","value":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"Applies a tuple of parsers one by one and returns their results as a tuple.","sig":null,"attributes":[{"value":"/Applies a tuple of parsers one by one and returns their results as a tuple.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217430,"byte_end":217508,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217509,"byte_end":217512,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217513,"byte_end":217524,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217525,"byte_end":217564,"line_start":327,"line_end":327,"column_start":1,"column_end":40}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217565,"byte_end":217594,"line_start":328,"line_end":328,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217595,"byte_end":217646,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/ let mut parser = tuple((alpha1, digit1, alpha1));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217647,"byte_end":217700,"line_start":330,"line_end":330,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217701,"byte_end":217704,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217705,"byte_end":217774,"line_start":332,"line_end":332,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217775,"byte_end":217855,"line_start":333,"line_end":333,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/sequence/mod.rs","byte_start":217856,"byte_end":217863,"line_start":334,"line_end":334,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1543},{"krate":0,"index":1548},{"krate":0,"index":1555},{"krate":0,"index":1560},{"krate":0,"index":1569},{"krate":0,"index":1576},{"krate":0,"index":1585},{"krate":0,"index":1592},{"krate":0,"index":1601},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1620},{"krate":0,"index":1627},{"krate":0,"index":1632},{"krate":0,"index":1639},{"krate":0,"index":1644},{"krate":0,"index":1651},{"krate":0,"index":1659},{"krate":0,"index":1668},{"krate":0,"index":1675},{"krate":0,"index":1684},{"krate":0,"index":1691},{"krate":0,"index":1700},{"krate":0,"index":1707},{"krate":0,"index":1714},{"krate":0,"index":1723},{"krate":0,"index":1730}],"decl_id":null,"docs":" Combinators applying their child parser multiple times\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16729,"byte_end":16741,"line_start":502,"line_end":502,"column_start":1,"column_end":13}},{"value":"/ Combinators applying their child parser multiple times","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245515,"byte_end":245573,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246726,"byte_end":246731,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"many0","qualname":"::multi::many0","value":"pub fn many0<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + PartialEq,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the results in a `Vec`.","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245854,"byte_end":245900,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ and returns the results in a `Vec`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245901,"byte_end":245940,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245941,"byte_end":245944,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245945,"byte_end":245960,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245961,"byte_end":245991,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245992,"byte_end":245995,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *Note*: if the parser passed to `many0` accepts empty inputs","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":245996,"byte_end":246060,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many0` will return an error,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246061,"byte_end":246123,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246124,"byte_end":246166,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246167,"byte_end":246170,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246171,"byte_end":246182,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246183,"byte_end":246239,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246240,"byte_end":246266,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246267,"byte_end":246301,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246302,"byte_end":246305,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246306,"byte_end":246358,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/   many0(tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246359,"byte_end":246385,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246386,"byte_end":246391,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246392,"byte_end":246395,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246396,"byte_end":246459,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246460,"byte_end":246519,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246520,"byte_end":246577,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246578,"byte_end":246623,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246624,"byte_end":246631,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":246632,"byte_end":246657,"line_start":38,"line_end":38,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247466,"byte_end":247472,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"many0c","qualname":"::multi::many0c","value":"pub fn many0c<I, O, E, F>(I, F) -> IResult<I, Vec<O>, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247372,"byte_end":247397,"line_start":66,"line_end":66,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248647,"byte_end":248652,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"many1","qualname":"::multi::many1","value":"pub fn many1<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + PartialEq,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser until it fails and\n returns the results in a `Vec`. Fails if\n the embedded parser does not produce at least\n one result.","sig":null,"attributes":[{"value":"/ Runs the embedded parser until it fails and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247631,"byte_end":247678,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/ returns the results in a `Vec`. Fails if","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247679,"byte_end":247723,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ the embedded parser does not produce at least","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247724,"byte_end":247773,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ one result.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247774,"byte_end":247789,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247790,"byte_end":247793,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247794,"byte_end":247809,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247810,"byte_end":247840,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247841,"byte_end":247844,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ *Note*: If the parser passed to `many1` accepts empty inputs","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247845,"byte_end":247909,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many1` will return an error,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247910,"byte_end":247972,"line_start":86,"line_end":86,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":247973,"byte_end":248016,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248017,"byte_end":248020,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248021,"byte_end":248032,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248033,"byte_end":248098,"line_start":90,"line_end":90,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248099,"byte_end":248125,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248126,"byte_end":248160,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248161,"byte_end":248164,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248165,"byte_end":248217,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/   many1(tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248218,"byte_end":248244,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248245,"byte_end":248250,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248251,"byte_end":248254,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248255,"byte_end":248318,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248319,"byte_end":248378,"line_start":99,"line_end":99,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248379,"byte_end":248467,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248468,"byte_end":248544,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248545,"byte_end":248552,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":248553,"byte_end":248578,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249606,"byte_end":249612,"line_start":141,"line_end":141,"column_start":8,"column_end":14},"name":"many1c","qualname":"::multi::many1c","value":"pub fn many1c<I, O, E, F>(I, F) -> IResult<I, Vec<O>, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249512,"byte_end":249537,"line_start":139,"line_end":139,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250705,"byte_end":250714,"line_start":170,"line_end":170,"column_start":8,"column_end":17},"name":"many_till","qualname":"::multi::many_till","value":"pub fn many_till<I, O, P, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, G: Parser<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies the parser `f` until the parser `g` produces\n a result. Returns a pair consisting of the results of\n `f` in a `Vec` and the result of `g`.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many_till;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies the parser `f` until the parser `g` produces","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249771,"byte_end":249827,"line_start":150,"line_end":150,"column_start":1,"column_end":57}},{"value":"/ a result. Returns a pair consisting of the results of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249828,"byte_end":249885,"line_start":151,"line_end":151,"column_start":1,"column_end":58}},{"value":"/ `f` in a `Vec` and the result of `g`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249886,"byte_end":249927,"line_start":152,"line_end":152,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249928,"byte_end":249939,"line_start":153,"line_end":153,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":249940,"byte_end":250005,"line_start":154,"line_end":154,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many_till;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250006,"byte_end":250036,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250037,"byte_end":250071,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250072,"byte_end":250075,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, (Vec<&str>, &str)> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250076,"byte_end":250136,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/   many_till(tag(\"abc\"), tag(\"end\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250137,"byte_end":250179,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250180,"byte_end":250186,"line_start":160,"line_end":160,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250187,"byte_end":250190,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabcend\"), Ok((\"\", (vec![\"abc\", \"abc\"], \"end\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250191,"byte_end":250266,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123end\"), Err(Err::Error(Error::new(\"123end\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250267,"byte_end":250358,"line_start":163,"line_end":163,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"123123end\"), Err(Err::Error(Error::new(\"123123end\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250359,"byte_end":250453,"line_start":164,"line_end":164,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250454,"byte_end":250530,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcendefg\"), Ok((\"efg\", (vec![\"abc\"], \"end\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250531,"byte_end":250602,"line_start":166,"line_end":166,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250603,"byte_end":250610,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":250611,"byte_end":250636,"line_start":168,"line_end":168,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":251822,"byte_end":251832,"line_start":210,"line_end":210,"column_start":8,"column_end":18},"name":"many_tillc","qualname":"::multi::many_tillc","value":"pub fn many_tillc<I, O, P, E, F, G>(I, F, G) -> IResult<I, (Vec<O>, P), E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":251728,"byte_end":251753,"line_start":208,"line_end":208,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252895,"byte_end":252910,"line_start":243,"line_end":243,"column_start":8,"column_end":23},"name":"separated_list0","qualname":"::multi::separated_list0","value":"pub fn separated_list0<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252039,"byte_end":252084,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"/ a list of elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252085,"byte_end":252108,"line_start":221,"line_end":221,"column_start":1,"column_end":24}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252109,"byte_end":252124,"line_start":222,"line_end":222,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252125,"byte_end":252180,"line_start":223,"line_end":223,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252181,"byte_end":252223,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252224,"byte_end":252227,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252228,"byte_end":252239,"line_start":226,"line_end":226,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252240,"byte_end":252296,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::separated_list0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252297,"byte_end":252333,"line_start":228,"line_end":228,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252334,"byte_end":252368,"line_start":229,"line_end":229,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252369,"byte_end":252372,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252373,"byte_end":252425,"line_start":231,"line_end":231,"column_start":1,"column_end":53}},{"value":"/   separated_list0(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252426,"byte_end":252472,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252473,"byte_end":252478,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252479,"byte_end":252482,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252483,"byte_end":252558,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252559,"byte_end":252624,"line_start":236,"line_end":236,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252625,"byte_end":252686,"line_start":237,"line_end":237,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252687,"byte_end":252732,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"def|abc\"), Ok((\"def|abc\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252733,"byte_end":252792,"line_start":239,"line_end":239,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252793,"byte_end":252800,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":252801,"byte_end":252826,"line_start":241,"line_end":241,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254053,"byte_end":254069,"line_start":292,"line_end":292,"column_start":8,"column_end":24},"name":"separated_list0c","qualname":"::multi::separated_list0c","value":"pub fn separated_list0c<I, O, O2, E, F, G>(I, G, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, O2, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":253959,"byte_end":253984,"line_start":290,"line_end":290,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":255314,"byte_end":255329,"line_start":326,"line_end":326,"column_start":8,"column_end":23},"name":"separated_list1","qualname":"::multi::separated_list1","value":"pub fn separated_list1<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements. Fails if the element\n parser does not produce at least one element.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::separated_list1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254283,"byte_end":254328,"line_start":302,"line_end":302,"column_start":1,"column_end":46}},{"value":"/ a list of elements. Fails if the element","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254329,"byte_end":254373,"line_start":303,"line_end":303,"column_start":1,"column_end":45}},{"value":"/ parser does not produce at least one element.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254374,"byte_end":254423,"line_start":304,"line_end":304,"column_start":1,"column_end":50}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254424,"byte_end":254439,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254440,"byte_end":254495,"line_start":306,"line_end":306,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254496,"byte_end":254538,"line_start":307,"line_end":307,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254539,"byte_end":254550,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254551,"byte_end":254587,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254588,"byte_end":254653,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::separated_list1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254654,"byte_end":254690,"line_start":311,"line_end":311,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254691,"byte_end":254725,"line_start":312,"line_end":312,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254726,"byte_end":254729,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254730,"byte_end":254782,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/   separated_list1(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254783,"byte_end":254829,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254830,"byte_end":254835,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254836,"byte_end":254839,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254840,"byte_end":254915,"line_start":318,"line_end":318,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254916,"byte_end":254981,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":254982,"byte_end":255043,"line_start":320,"line_end":320,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":255044,"byte_end":255120,"line_start":321,"line_end":321,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"def|abc\"), Err(Err::Error(Error::new(\"def|abc\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":255121,"byte_end":255211,"line_start":322,"line_end":322,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":255212,"byte_end":255219,"line_start":323,"line_end":323,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":255220,"byte_end":255245,"line_start":324,"line_end":324,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256454,"byte_end":256470,"line_start":375,"line_end":375,"column_start":8,"column_end":24},"name":"separated_list1c","qualname":"::multi::separated_list1c","value":"pub fn separated_list1c<I, O, O2, E, F, G>(I, G, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: Fn(I) ->\nIResult<I, O2, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256360,"byte_end":256385,"line_start":373,"line_end":373,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257663,"byte_end":257671,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"many_m_n","qualname":"::multi::many_m_n","value":"pub fn many_m_n<I, O, E, F>(usize, usize, F) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser `n` times or until it fails\n and returns the results in a `Vec`. Fails if the\n embedded parser does not succeed at least `m` times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser `n` times or until it fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256684,"byte_end":256743,"line_start":385,"line_end":385,"column_start":1,"column_end":60}},{"value":"/ and returns the results in a `Vec`. Fails if the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256744,"byte_end":256796,"line_start":386,"line_end":386,"column_start":1,"column_end":53}},{"value":"/ embedded parser does not succeed at least `m` times.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256797,"byte_end":256853,"line_start":387,"line_end":387,"column_start":1,"column_end":57}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256854,"byte_end":256869,"line_start":388,"line_end":388,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256870,"byte_end":256913,"line_start":389,"line_end":389,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256914,"byte_end":256957,"line_start":390,"line_end":390,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256958,"byte_end":256988,"line_start":391,"line_end":391,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":256989,"byte_end":257000,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257001,"byte_end":257037,"line_start":393,"line_end":393,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257038,"byte_end":257094,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many_m_n;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257095,"byte_end":257124,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257125,"byte_end":257159,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257160,"byte_end":257163,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257164,"byte_end":257216,"line_start":398,"line_end":398,"column_start":1,"column_end":53}},{"value":"/   many_m_n(0, 2, tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257217,"byte_end":257252,"line_start":399,"line_end":399,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257253,"byte_end":257258,"line_start":400,"line_end":400,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257259,"byte_end":257262,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257263,"byte_end":257326,"line_start":402,"line_end":402,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257327,"byte_end":257386,"line_start":403,"line_end":403,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257387,"byte_end":257444,"line_start":404,"line_end":404,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257445,"byte_end":257490,"line_start":405,"line_end":405,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257491,"byte_end":257560,"line_start":406,"line_end":406,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257561,"byte_end":257568,"line_start":407,"line_end":407,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":257569,"byte_end":257594,"line_start":408,"line_end":408,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":258730,"byte_end":258739,"line_start":454,"line_end":454,"column_start":8,"column_end":17},"name":"many_m_nc","qualname":"::multi::many_m_nc","value":"pub fn many_m_nc<I, O, E, F>(I, usize, usize, F) -> IResult<I, Vec<O>, E>\nwhere I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":258697,"byte_end":258722,"line_start":453,"line_end":453,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259542,"byte_end":259553,"line_start":482,"line_end":482,"column_start":8,"column_end":19},"name":"many0_count","qualname":"::multi::many0_count","value":"pub fn many0_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many0_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":258919,"byte_end":258965,"line_start":463,"line_end":463,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":258966,"byte_end":259018,"line_start":464,"line_end":464,"column_start":1,"column_end":53}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259019,"byte_end":259034,"line_start":465,"line_end":465,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259035,"byte_end":259065,"line_start":466,"line_end":466,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259066,"byte_end":259077,"line_start":467,"line_end":467,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259078,"byte_end":259114,"line_start":468,"line_end":468,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259115,"byte_end":259171,"line_start":469,"line_end":469,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0_count;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259172,"byte_end":259204,"line_start":470,"line_end":470,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259205,"byte_end":259239,"line_start":471,"line_end":471,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259240,"byte_end":259243,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259244,"byte_end":259292,"line_start":473,"line_end":473,"column_start":1,"column_end":49}},{"value":"/   many0_count(tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259293,"byte_end":259325,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259326,"byte_end":259331,"line_start":475,"line_end":475,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259332,"byte_end":259335,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259336,"byte_end":259382,"line_start":477,"line_end":477,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259383,"byte_end":259432,"line_start":478,"line_end":478,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259433,"byte_end":259485,"line_start":479,"line_end":479,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", 0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259486,"byte_end":259526,"line_start":480,"line_end":480,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":259527,"byte_end":259534,"line_start":481,"line_end":481,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260237,"byte_end":260249,"line_start":514,"line_end":514,"column_start":8,"column_end":20},"name":"many0_countc","qualname":"::multi::many0_countc","value":"pub fn many0_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":261192,"byte_end":261203,"line_start":544,"line_end":544,"column_start":8,"column_end":19},"name":"many1_count","qualname":"::multi::many1_count","value":"pub fn many1_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n Fails if the embedded parser does not succeed\n at least once.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many1_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260405,"byte_end":260451,"line_start":523,"line_end":523,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260452,"byte_end":260504,"line_start":524,"line_end":524,"column_start":1,"column_end":53}},{"value":"/ Fails if the embedded parser does not succeed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260505,"byte_end":260554,"line_start":525,"line_end":525,"column_start":1,"column_end":50}},{"value":"/ at least once.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260555,"byte_end":260573,"line_start":526,"line_end":526,"column_start":1,"column_end":19}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260574,"byte_end":260589,"line_start":527,"line_end":527,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260590,"byte_end":260620,"line_start":528,"line_end":528,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260621,"byte_end":260632,"line_start":529,"line_end":529,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260633,"byte_end":260669,"line_start":530,"line_end":530,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260670,"byte_end":260735,"line_start":531,"line_end":531,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1_count;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260736,"byte_end":260768,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260769,"byte_end":260803,"line_start":533,"line_end":533,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260804,"byte_end":260807,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260808,"byte_end":260856,"line_start":535,"line_end":535,"column_start":1,"column_end":49}},{"value":"/   many1_count(tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260857,"byte_end":260889,"line_start":536,"line_end":536,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260890,"byte_end":260895,"line_start":537,"line_end":537,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260896,"byte_end":260899,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260900,"byte_end":260946,"line_start":539,"line_end":539,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260947,"byte_end":260996,"line_start":540,"line_end":540,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":260997,"byte_end":261092,"line_start":541,"line_end":541,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":261093,"byte_end":261176,"line_start":542,"line_end":542,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":261177,"byte_end":261184,"line_start":543,"line_end":543,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262075,"byte_end":262087,"line_start":580,"line_end":580,"column_start":8,"column_end":20},"name":"many1_countc","qualname":"::multi::many1_countc","value":"pub fn many1_countc<I, O, E, F>(I, F) -> IResult<I, usize, E> where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263191,"byte_end":263196,"line_start":612,"line_end":612,"column_start":8,"column_end":13},"name":"count","qualname":"::multi::count","value":"pub fn count<I, O, E, F>(F, usize) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser a specified number\n of times. Returns the results in a `Vec`.\n # Arguments\n * `f` The parser to apply.\n * `count` How often to apply the parser.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser a specified number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262243,"byte_end":262290,"line_start":589,"line_end":589,"column_start":1,"column_end":48}},{"value":"/ of times. Returns the results in a `Vec`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262291,"byte_end":262336,"line_start":590,"line_end":590,"column_start":1,"column_end":46}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262337,"byte_end":262352,"line_start":591,"line_end":591,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262353,"byte_end":262383,"line_start":592,"line_end":592,"column_start":1,"column_end":31}},{"value":"/ * `count` How often to apply the parser.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262384,"byte_end":262428,"line_start":593,"line_end":593,"column_start":1,"column_end":45}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262429,"byte_end":262440,"line_start":594,"line_end":594,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262441,"byte_end":262477,"line_start":595,"line_end":595,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262478,"byte_end":262543,"line_start":596,"line_end":596,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::count;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262544,"byte_end":262570,"line_start":597,"line_end":597,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262571,"byte_end":262605,"line_start":598,"line_end":598,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262606,"byte_end":262609,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262610,"byte_end":262662,"line_start":600,"line_end":600,"column_start":1,"column_end":53}},{"value":"/   count(tag(\"abc\"), 2)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262663,"byte_end":262692,"line_start":601,"line_end":601,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262693,"byte_end":262698,"line_start":602,"line_end":602,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262699,"byte_end":262702,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262703,"byte_end":262766,"line_start":604,"line_end":604,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262767,"byte_end":262852,"line_start":605,"line_end":605,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262853,"byte_end":262941,"line_start":606,"line_end":606,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":262942,"byte_end":263018,"line_start":607,"line_end":607,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263019,"byte_end":263088,"line_start":608,"line_end":608,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263089,"byte_end":263096,"line_start":609,"line_end":609,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263097,"byte_end":263122,"line_start":610,"line_end":610,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264814,"byte_end":264818,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fill","qualname":"::multi::fill","value":"pub fn fill<'a, I, O, E, F>(F, &'a mut [O]) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E> + 'a, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\n the input runs out before the given slice is full.\n # Arguments\n * `f` The parser to apply.\n * `buf` The slice to fill\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fill;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263839,"byte_end":263938,"line_start":642,"line_end":642,"column_start":1,"column_end":100}},{"value":"/ the input runs out before the given slice is full.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263939,"byte_end":263993,"line_start":643,"line_end":643,"column_start":1,"column_end":55}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":263994,"byte_end":264009,"line_start":644,"line_end":644,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264010,"byte_end":264040,"line_start":645,"line_end":645,"column_start":1,"column_end":31}},{"value":"/ * `buf` The slice to fill","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264041,"byte_end":264070,"line_start":646,"line_end":646,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264071,"byte_end":264082,"line_start":647,"line_end":647,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264083,"byte_end":264119,"line_start":648,"line_end":648,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264120,"byte_end":264185,"line_start":649,"line_end":649,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fill;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264186,"byte_end":264211,"line_start":650,"line_end":650,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264212,"byte_end":264246,"line_start":651,"line_end":651,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264247,"byte_end":264250,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, [&str; 2]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264251,"byte_end":264303,"line_start":653,"line_end":653,"column_start":1,"column_end":53}},{"value":"/   let mut buf = [\"\", \"\"];","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264304,"byte_end":264333,"line_start":654,"line_end":654,"column_start":1,"column_end":30}},{"value":"/   let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264334,"byte_end":264388,"line_start":655,"line_end":655,"column_start":1,"column_end":55}},{"value":"/   Ok((rest, buf))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264389,"byte_end":264410,"line_start":656,"line_end":656,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264411,"byte_end":264416,"line_start":657,"line_end":657,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264417,"byte_end":264420,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264421,"byte_end":264480,"line_start":659,"line_end":659,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264481,"byte_end":264566,"line_start":660,"line_end":660,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264567,"byte_end":264655,"line_start":661,"line_end":661,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264656,"byte_end":264732,"line_start":662,"line_end":662,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264733,"byte_end":264798,"line_start":663,"line_end":663,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":264799,"byte_end":264806,"line_start":664,"line_end":664,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266332,"byte_end":266342,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"fold_many0","qualname":"::multi::fold_many0","value":"pub fn fold_many0<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many0;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265414,"byte_end":265465,"line_start":694,"line_end":694,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265466,"byte_end":265523,"line_start":695,"line_end":695,"column_start":1,"column_end":58}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265524,"byte_end":265539,"line_start":696,"line_end":696,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265540,"byte_end":265570,"line_start":697,"line_end":697,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265571,"byte_end":265602,"line_start":698,"line_end":698,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265603,"byte_end":265660,"line_start":699,"line_end":699,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265661,"byte_end":265695,"line_start":700,"line_end":700,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265696,"byte_end":265707,"line_start":701,"line_end":701,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265708,"byte_end":265744,"line_start":702,"line_end":702,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265745,"byte_end":265801,"line_start":703,"line_end":703,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265802,"byte_end":265833,"line_start":704,"line_end":704,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265834,"byte_end":265868,"line_start":705,"line_end":705,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265869,"byte_end":265872,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265873,"byte_end":265925,"line_start":707,"line_end":707,"column_start":1,"column_end":53}},{"value":"/   fold_many0(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265926,"byte_end":265943,"line_start":708,"line_end":708,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265944,"byte_end":265963,"line_start":709,"line_end":709,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265964,"byte_end":265983,"line_start":710,"line_end":710,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":265984,"byte_end":266017,"line_start":711,"line_end":711,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266018,"byte_end":266043,"line_start":712,"line_end":712,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266044,"byte_end":266057,"line_start":713,"line_end":713,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266058,"byte_end":266067,"line_start":714,"line_end":714,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266068,"byte_end":266078,"line_start":715,"line_end":715,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266079,"byte_end":266084,"line_start":716,"line_end":716,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266085,"byte_end":266088,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266089,"byte_end":266152,"line_start":718,"line_end":718,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266153,"byte_end":266212,"line_start":719,"line_end":719,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266213,"byte_end":266270,"line_start":720,"line_end":720,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266271,"byte_end":266316,"line_start":721,"line_end":721,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":266317,"byte_end":266324,"line_start":722,"line_end":722,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267131,"byte_end":267142,"line_start":763,"line_end":763,"column_start":8,"column_end":19},"name":"fold_many0c","qualname":"::multi::fold_many0c","value":"pub fn fold_many0c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268420,"byte_end":268430,"line_start":805,"line_end":805,"column_start":8,"column_end":18},"name":"fold_many1","qualname":"::multi::fold_many1","value":"pub fn fold_many1<I, O, E, F, G, R>(F, R, G) -> /*impl Trait*/ where\nI: Clone + PartialEq, F: Parser<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least\n once.\n # Arguments\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fold_many1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267358,"byte_end":267409,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267410,"byte_end":267467,"line_start":775,"line_end":775,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267468,"byte_end":267526,"line_start":776,"line_end":776,"column_start":1,"column_end":59}},{"value":"/ once.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267527,"byte_end":267536,"line_start":777,"line_end":777,"column_start":1,"column_end":10}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267537,"byte_end":267552,"line_start":778,"line_end":778,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267553,"byte_end":267583,"line_start":779,"line_end":779,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267584,"byte_end":267615,"line_start":780,"line_end":780,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267616,"byte_end":267673,"line_start":781,"line_end":781,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267674,"byte_end":267708,"line_start":782,"line_end":782,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267709,"byte_end":267720,"line_start":783,"line_end":783,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267721,"byte_end":267757,"line_start":784,"line_end":784,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267758,"byte_end":267823,"line_start":785,"line_end":785,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fold_many1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267824,"byte_end":267855,"line_start":786,"line_end":786,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267856,"byte_end":267890,"line_start":787,"line_end":787,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267891,"byte_end":267894,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267895,"byte_end":267947,"line_start":789,"line_end":789,"column_start":1,"column_end":53}},{"value":"/   fold_many1(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267948,"byte_end":267965,"line_start":790,"line_end":790,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267966,"byte_end":267985,"line_start":791,"line_end":791,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":267986,"byte_end":268005,"line_start":792,"line_end":792,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268006,"byte_end":268039,"line_start":793,"line_end":793,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268040,"byte_end":268065,"line_start":794,"line_end":794,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268066,"byte_end":268079,"line_start":795,"line_end":795,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268080,"byte_end":268089,"line_start":796,"line_end":796,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268090,"byte_end":268100,"line_start":797,"line_end":797,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268101,"byte_end":268106,"line_start":798,"line_end":798,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268107,"byte_end":268110,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268111,"byte_end":268174,"line_start":800,"line_end":800,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268175,"byte_end":268234,"line_start":801,"line_end":801,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268235,"byte_end":268325,"line_start":802,"line_end":802,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268326,"byte_end":268404,"line_start":803,"line_end":803,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":268405,"byte_end":268412,"line_start":804,"line_end":804,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269438,"byte_end":269449,"line_start":852,"line_end":852,"column_start":8,"column_end":19},"name":"fold_many1c","qualname":"::multi::fold_many1c","value":"pub fn fold_many1c<I, O, E, F, G, R>(I, F, R, G) -> IResult<I, R, E> where\nI: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>, G: FnMut(R, O) -> R,\nE: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270856,"byte_end":270869,"line_start":899,"line_end":899,"column_start":8,"column_end":21},"name":"fold_many_m_n","qualname":"::multi::fold_many_m_n","value":"pub fn fold_many_m_n<I, O, E, F, G, R>(usize, usize, F, R, G)\n-> /*impl Trait*/ where I: Clone + PartialEq, F: Parser<I, O, E>,\nG: FnMut(R, O) -> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser `n` times or until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least `m`\n times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n * `init` The initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser `n` times or until it fails and accumulates","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269665,"byte_end":269729,"line_start":863,"line_end":863,"column_start":1,"column_end":65}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269730,"byte_end":269787,"line_start":864,"line_end":864,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least `m`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269788,"byte_end":269850,"line_start":865,"line_end":865,"column_start":1,"column_end":63}},{"value":"/ times.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269851,"byte_end":269861,"line_start":866,"line_end":866,"column_start":1,"column_end":11}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269862,"byte_end":269877,"line_start":867,"line_end":867,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269878,"byte_end":269921,"line_start":868,"line_end":868,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269922,"byte_end":269965,"line_start":869,"line_end":869,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269966,"byte_end":269996,"line_start":870,"line_end":870,"column_start":1,"column_end":31}},{"value":"/ * `init` The initial value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":269997,"byte_end":270028,"line_start":871,"line_end":871,"column_start":1,"column_end":32}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270029,"byte_end":270086,"line_start":872,"line_end":872,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270087,"byte_end":270121,"line_start":873,"line_end":873,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270122,"byte_end":270133,"line_start":874,"line_end":874,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270134,"byte_end":270170,"line_start":875,"line_end":875,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270171,"byte_end":270227,"line_start":876,"line_end":876,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many_m_n;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270228,"byte_end":270262,"line_start":877,"line_end":877,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270263,"byte_end":270297,"line_start":878,"line_end":878,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270298,"byte_end":270301,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270302,"byte_end":270354,"line_start":880,"line_end":880,"column_start":1,"column_end":53}},{"value":"/   fold_many_m_n(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270355,"byte_end":270375,"line_start":881,"line_end":881,"column_start":1,"column_end":21}},{"value":"/     0,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270376,"byte_end":270386,"line_start":882,"line_end":882,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270387,"byte_end":270397,"line_start":883,"line_end":883,"column_start":1,"column_end":11}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270398,"byte_end":270417,"line_start":884,"line_end":884,"column_start":1,"column_end":20}},{"value":"/     Vec::new(),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270418,"byte_end":270437,"line_start":885,"line_end":885,"column_start":1,"column_end":20}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270438,"byte_end":270471,"line_start":886,"line_end":886,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270472,"byte_end":270497,"line_start":887,"line_end":887,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270498,"byte_end":270511,"line_start":888,"line_end":888,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270512,"byte_end":270521,"line_start":889,"line_end":889,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270522,"byte_end":270532,"line_start":890,"line_end":890,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270533,"byte_end":270538,"line_start":891,"line_end":891,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270539,"byte_end":270542,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270543,"byte_end":270606,"line_start":893,"line_end":893,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270607,"byte_end":270666,"line_start":894,"line_end":894,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270667,"byte_end":270724,"line_start":895,"line_end":895,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270725,"byte_end":270770,"line_start":896,"line_end":896,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270771,"byte_end":270840,"line_start":897,"line_end":897,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":270841,"byte_end":270848,"line_start":898,"line_end":898,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":271882,"byte_end":271896,"line_start":943,"line_end":943,"column_start":8,"column_end":22},"name":"fold_many_m_nc","qualname":"::multi::fold_many_m_nc","value":"pub fn fold_many_m_nc<I, O, E, F, G, R>(I, usize, usize, F, R, G)\n-> IResult<I, R, E> where I: Clone + PartialEq, F: Fn(I) -> IResult<I, O, E>,\nG: Fn(R, O) -> R, E: ParseError<I>, R: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272871,"byte_end":272882,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"length_data","qualname":"::multi::length_data","value":"pub fn length_data<I, N, E, F>(F) -> /*impl Trait*/ where I: InputLength +\nInputTake, N: ToUsize, F: Parser<I, N, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the parser and returns a\n subslice of the input of that size.\n If the parser returns `Incomplete`,\n `length_data` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_data;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the parser and returns a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272183,"byte_end":272230,"line_start":961,"line_end":961,"column_start":1,"column_end":48}},{"value":"/ subslice of the input of that size.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272231,"byte_end":272270,"line_start":962,"line_end":962,"column_start":1,"column_end":40}},{"value":"/ If the parser returns `Incomplete`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272271,"byte_end":272310,"line_start":963,"line_end":963,"column_start":1,"column_end":40}},{"value":"/ `length_data` will return an error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272311,"byte_end":272350,"line_start":964,"line_end":964,"column_start":1,"column_end":40}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272351,"byte_end":272366,"line_start":965,"line_end":965,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272367,"byte_end":272397,"line_start":966,"line_end":966,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272398,"byte_end":272409,"line_start":967,"line_end":967,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272410,"byte_end":272446,"line_start":968,"line_end":968,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272447,"byte_end":272503,"line_start":969,"line_end":969,"column_start":1,"column_end":57}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272504,"byte_end":272542,"line_start":970,"line_end":970,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_data;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272543,"byte_end":272575,"line_start":971,"line_end":971,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272576,"byte_end":272610,"line_start":972,"line_end":972,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272611,"byte_end":272614,"line_start":973,"line_end":973,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272615,"byte_end":272665,"line_start":974,"line_end":974,"column_start":1,"column_end":51}},{"value":"/   length_data(be_u16)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272666,"byte_end":272694,"line_start":975,"line_end":975,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272695,"byte_end":272700,"line_start":976,"line_end":976,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272701,"byte_end":272704,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272705,"byte_end":272779,"line_start":978,"line_end":978,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272780,"byte_end":272855,"line_start":979,"line_end":979,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":272856,"byte_end":272863,"line_start":980,"line_end":980,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":274220,"byte_end":274232,"line_start":1026,"line_end":1026,"column_start":8,"column_end":20},"name":"length_value","qualname":"::multi::length_value","value":"pub fn length_value<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength + InputTake, N: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n takes a subslice of the input of that size,\n then applies the second parser on that subslice.\n If the second parser returns `Incomplete`,\n `length_value` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_value;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273346,"byte_end":273386,"line_start":1004,"line_end":1004,"column_start":1,"column_end":41}},{"value":"/ takes a subslice of the input of that size,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273387,"byte_end":273434,"line_start":1005,"line_end":1005,"column_start":1,"column_end":48}},{"value":"/ then applies the second parser on that subslice.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273435,"byte_end":273487,"line_start":1006,"line_end":1006,"column_start":1,"column_end":53}},{"value":"/ If the second parser returns `Incomplete`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273488,"byte_end":273534,"line_start":1007,"line_end":1007,"column_start":1,"column_end":47}},{"value":"/ `length_value` will return an error.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273535,"byte_end":273575,"line_start":1008,"line_end":1008,"column_start":1,"column_end":41}},{"value":"/ # Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273576,"byte_end":273591,"line_start":1009,"line_end":1009,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273592,"byte_end":273622,"line_start":1010,"line_end":1010,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273623,"byte_end":273634,"line_start":1011,"line_end":1011,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273635,"byte_end":273671,"line_start":1012,"line_end":1012,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273672,"byte_end":273737,"line_start":1013,"line_end":1013,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273738,"byte_end":273776,"line_start":1014,"line_end":1014,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_value;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273777,"byte_end":273810,"line_start":1015,"line_end":1015,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273811,"byte_end":273845,"line_start":1016,"line_end":1016,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273846,"byte_end":273849,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273850,"byte_end":273900,"line_start":1018,"line_end":1018,"column_start":1,"column_end":51}},{"value":"/   length_value(be_u16, tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273901,"byte_end":273942,"line_start":1019,"line_end":1019,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273943,"byte_end":273948,"line_start":1020,"line_end":1020,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273949,"byte_end":273952,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":273953,"byte_end":274027,"line_start":1022,"line_end":1022,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":274028,"byte_end":274128,"line_start":1023,"line_end":1023,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":274129,"byte_end":274204,"line_start":1024,"line_end":1024,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":274205,"byte_end":274212,"line_start":1025,"line_end":1025,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":274977,"byte_end":274990,"line_start":1056,"line_end":1056,"column_start":8,"column_end":21},"name":"length_valuec","qualname":"::multi::length_valuec","value":"pub fn length_valuec<I, O, N, E, F, G>(I, F, G) -> IResult<I, O, E> where\nI: Clone + InputLength + InputTake, N: ToUsize, F: Fn(I) -> IResult<I, N, E>,\nG: Fn(I) -> IResult<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":276093,"byte_end":276105,"line_start":1091,"line_end":1091,"column_start":8,"column_end":20},"name":"length_count","qualname":"::multi::length_count","value":"pub fn length_count<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone,\nN: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n then applies the second parser that many times.\n Arguments\n * `f` The parser to apply to obtain the count.\n * `g` The parser to apply repeatedly.\n ```rust\n # #[macro_use] extern crate nom;\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::u8;\n use nom::multi::length_count;\n use nom::bytes::complete::tag;\n use nom::combinator::map;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275218,"byte_end":275258,"line_start":1067,"line_end":1067,"column_start":1,"column_end":41}},{"value":"/ then applies the second parser that many times.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275259,"byte_end":275310,"line_start":1068,"line_end":1068,"column_start":1,"column_end":52}},{"value":"/ Arguments","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275311,"byte_end":275324,"line_start":1069,"line_end":1069,"column_start":1,"column_end":14}},{"value":"/ * `f` The parser to apply to obtain the count.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275325,"byte_end":275375,"line_start":1070,"line_end":1070,"column_start":1,"column_end":51}},{"value":"/ * `g` The parser to apply repeatedly.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275376,"byte_end":275417,"line_start":1071,"line_end":1071,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275418,"byte_end":275429,"line_start":1072,"line_end":1072,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275430,"byte_end":275466,"line_start":1073,"line_end":1073,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275467,"byte_end":275532,"line_start":1074,"line_end":1074,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275533,"byte_end":275567,"line_start":1075,"line_end":1075,"column_start":1,"column_end":35}},{"value":"/ use nom::multi::length_count;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275568,"byte_end":275601,"line_start":1076,"line_end":1076,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275602,"byte_end":275636,"line_start":1077,"line_end":1077,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275637,"byte_end":275666,"line_start":1078,"line_end":1078,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275667,"byte_end":275670,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], Vec<&[u8]>> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275671,"byte_end":275726,"line_start":1080,"line_end":1080,"column_start":1,"column_end":56}},{"value":"/   length_count(map(u8, |i| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275727,"byte_end":275759,"line_start":1081,"line_end":1081,"column_start":1,"column_end":33}},{"value":"/      println!(\"got number: {}\", i);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275760,"byte_end":275799,"line_start":1082,"line_end":1082,"column_start":1,"column_end":40}},{"value":"/      i","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275800,"byte_end":275810,"line_start":1083,"line_end":1083,"column_start":1,"column_end":11}},{"value":"/   }), tag(\"abc\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275811,"byte_end":275835,"line_start":1084,"line_end":1084,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275836,"byte_end":275841,"line_start":1085,"line_end":1085,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275842,"byte_end":275845,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x02abcabcabc\"[..]), Ok(((&b\"abc\"[..], vec![&b\"abc\"[..], &b\"abc\"[..]]))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275846,"byte_end":275945,"line_start":1087,"line_end":1087,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(parser(b\"\\x03123123123\"), Err(Err::Error(Error::new(&b\"123123123\"[..], ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":275946,"byte_end":276051,"line_start":1088,"line_end":1088,"column_start":1,"column_end":106}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":276052,"byte_end":276059,"line_start":1089,"line_end":1089,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/multi/mod.rs","byte_start":276060,"byte_end":276085,"line_start":1090,"line_end":1090,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::bytes","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/mod.rs","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1756},{"krate":0,"index":1924}],"decl_id":null,"docs":" Parsers recognizing bytes streams\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16758,"byte_end":16770,"line_start":505,"line_end":505,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing bytes streams","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/mod.rs","byte_start":310623,"byte_end":310660,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bytes::complete","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1814},{"krate":0,"index":1820},{"krate":0,"index":1827},{"krate":0,"index":1834},{"krate":0,"index":1841},{"krate":0,"index":1848},{"krate":0,"index":1855},{"krate":0,"index":1862},{"krate":0,"index":1869},{"krate":0,"index":1875},{"krate":0,"index":1881},{"krate":0,"index":1894},{"krate":0,"index":1901},{"krate":0,"index":1915}],"decl_id":null,"docs":" Parsers recognizing bytes streams, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, complete input version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341014,"byte_end":341075,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342179,"byte_end":342182,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::complete::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern","sig":null,"attributes":[{"value":"/ Recognizes a pattern","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341409,"byte_end":341433,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341434,"byte_end":341437,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341438,"byte_end":341534,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341535,"byte_end":341574,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341575,"byte_end":341578,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341579,"byte_end":341675,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341676,"byte_end":341689,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341690,"byte_end":341701,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341702,"byte_end":341738,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341739,"byte_end":341804,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341805,"byte_end":341839,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341840,"byte_end":341843,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341844,"byte_end":341891,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341892,"byte_end":341913,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341914,"byte_end":341919,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341920,"byte_end":341923,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341924,"byte_end":341991,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":341992,"byte_end":342086,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342087,"byte_end":342163,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342164,"byte_end":342171,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343645,"byte_end":343656,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::complete::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342680,"byte_end":342722,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342723,"byte_end":342726,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342727,"byte_end":342823,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342824,"byte_end":342887,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342888,"byte_end":342891,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342892,"byte_end":342989,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":342990,"byte_end":343003,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343004,"byte_end":343015,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343016,"byte_end":343052,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343053,"byte_end":343118,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag_no_case;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343119,"byte_end":343161,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343162,"byte_end":343165,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343166,"byte_end":343213,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343214,"byte_end":343243,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343244,"byte_end":343249,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343250,"byte_end":343253,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343254,"byte_end":343321,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343322,"byte_end":343389,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343390,"byte_end":343457,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343458,"byte_end":343552,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343553,"byte_end":343629,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":343630,"byte_end":343637,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345014,"byte_end":345020,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::complete::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344165,"byte_end":344207,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344208,"byte_end":344211,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344212,"byte_end":344321,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344322,"byte_end":344325,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344326,"byte_end":344371,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344372,"byte_end":344375,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344376,"byte_end":344460,"line_start":104,"line_end":104,"column_start":1,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344461,"byte_end":344474,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344475,"byte_end":344486,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344487,"byte_end":344523,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344524,"byte_end":344589,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_not;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344590,"byte_end":344627,"line_start":109,"line_end":109,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344628,"byte_end":344631,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344632,"byte_end":344682,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344683,"byte_end":344709,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344710,"byte_end":344715,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344716,"byte_end":344719,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344720,"byte_end":344790,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344791,"byte_end":344857,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344858,"byte_end":344916,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344917,"byte_end":344998,"line_start":118,"line_end":118,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":344999,"byte_end":345006,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346226,"byte_end":346230,"line_start":155,"line_end":155,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::complete::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345340,"byte_end":345397,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345398,"byte_end":345401,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345402,"byte_end":345494,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345495,"byte_end":345521,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345522,"byte_end":345525,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345526,"byte_end":345612,"line_start":138,"line_end":138,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345613,"byte_end":345626,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345627,"byte_end":345638,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345639,"byte_end":345675,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345676,"byte_end":345741,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_a;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345742,"byte_end":345777,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345778,"byte_end":345781,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345782,"byte_end":345826,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345827,"byte_end":345860,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345861,"byte_end":345866,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345867,"byte_end":345870,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345871,"byte_end":345935,"line_start":149,"line_end":149,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":345936,"byte_end":346012,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346013,"byte_end":346083,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346084,"byte_end":346136,"line_start":152,"line_end":152,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346137,"byte_end":346210,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346211,"byte_end":346218,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347331,"byte_end":347341,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::complete::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346549,"byte_end":346621,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346622,"byte_end":346625,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346626,"byte_end":346721,"line_start":170,"line_end":170,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346722,"byte_end":346763,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346764,"byte_end":346777,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346778,"byte_end":346789,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346790,"byte_end":346826,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346827,"byte_end":346883,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_while;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346884,"byte_end":346925,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346926,"byte_end":346964,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346965,"byte_end":346968,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":346969,"byte_end":347018,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347019,"byte_end":347053,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347054,"byte_end":347059,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347060,"byte_end":347063,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347064,"byte_end":347133,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347134,"byte_end":347197,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347198,"byte_end":347261,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347262,"byte_end":347315,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347316,"byte_end":347323,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348477,"byte_end":348488,"line_start":219,"line_end":219,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::complete::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347599,"byte_end":347675,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347676,"byte_end":347679,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347680,"byte_end":347775,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347776,"byte_end":347817,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347818,"byte_end":347821,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347822,"byte_end":347916,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347917,"byte_end":347930,"line_start":204,"line_end":204,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347931,"byte_end":347942,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347943,"byte_end":347979,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":347980,"byte_end":348045,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348046,"byte_end":348088,"line_start":208,"line_end":208,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348089,"byte_end":348127,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348128,"byte_end":348131,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348132,"byte_end":348181,"line_start":211,"line_end":211,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348182,"byte_end":348217,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348218,"byte_end":348223,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348224,"byte_end":348227,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348228,"byte_end":348297,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348298,"byte_end":348361,"line_start":216,"line_end":216,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348362,"byte_end":348461,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348462,"byte_end":348469,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349935,"byte_end":349949,"line_start":256,"line_end":256,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::complete::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength +\nSlice<RangeFrom<usize>>, F: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348806,"byte_end":348886,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348887,"byte_end":348890,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348891,"byte_end":348986,"line_start":234,"line_end":234,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":348987,"byte_end":349028,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349029,"byte_end":349032,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349033,"byte_end":349132,"line_start":237,"line_end":237,"column_start":1,"column_end":100}},{"value":"/ of range (m <= len <= n).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349133,"byte_end":349162,"line_start":238,"line_end":238,"column_start":1,"column_end":30}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349163,"byte_end":349176,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349177,"byte_end":349188,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349189,"byte_end":349225,"line_start":241,"line_end":241,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349226,"byte_end":349291,"line_start":242,"line_end":242,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while_m_n;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349292,"byte_end":349337,"line_start":243,"line_end":243,"column_start":1,"column_end":46}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349338,"byte_end":349376,"line_start":244,"line_end":244,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349377,"byte_end":349380,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349381,"byte_end":349436,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349437,"byte_end":349481,"line_start":247,"line_end":247,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349482,"byte_end":349487,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349488,"byte_end":349491,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349492,"byte_end":349567,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349568,"byte_end":349641,"line_start":251,"line_end":251,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349642,"byte_end":349711,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349712,"byte_end":349812,"line_start":253,"line_end":253,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349813,"byte_end":349919,"line_start":254,"line_end":254,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":349920,"byte_end":349927,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352477,"byte_end":352486,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::complete::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351748,"byte_end":351817,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351818,"byte_end":351821,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351822,"byte_end":351909,"line_start":321,"line_end":321,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351910,"byte_end":351951,"line_start":322,"line_end":322,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351952,"byte_end":351965,"line_start":323,"line_end":323,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351966,"byte_end":351977,"line_start":324,"line_end":324,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":351978,"byte_end":352014,"line_start":325,"line_end":325,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352015,"byte_end":352071,"line_start":326,"line_end":326,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_till;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352072,"byte_end":352112,"line_start":327,"line_end":327,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352113,"byte_end":352116,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352117,"byte_end":352168,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352169,"byte_end":352201,"line_start":330,"line_end":330,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352202,"byte_end":352207,"line_start":331,"line_end":331,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352208,"byte_end":352211,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352212,"byte_end":352275,"line_start":333,"line_end":333,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352276,"byte_end":352359,"line_start":334,"line_end":334,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352360,"byte_end":352415,"line_start":335,"line_end":335,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352416,"byte_end":352461,"line_start":336,"line_end":336,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352462,"byte_end":352469,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353695,"byte_end":353705,"line_start":370,"line_end":370,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::complete::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352743,"byte_end":352816,"line_start":348,"line_end":348,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352817,"byte_end":352820,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352821,"byte_end":352908,"line_start":350,"line_end":350,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352909,"byte_end":352950,"line_start":351,"line_end":351,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352951,"byte_end":352954,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":352955,"byte_end":353047,"line_start":353,"line_end":353,"column_start":1,"column_end":93}},{"value":"/ predicate matches the first input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353048,"byte_end":353086,"line_start":354,"line_end":354,"column_start":1,"column_end":39}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353087,"byte_end":353100,"line_start":355,"line_end":355,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353101,"byte_end":353112,"line_start":356,"line_end":356,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353113,"byte_end":353149,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353150,"byte_end":353215,"line_start":358,"line_end":358,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_till1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353216,"byte_end":353257,"line_start":359,"line_end":359,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353258,"byte_end":353261,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353262,"byte_end":353313,"line_start":361,"line_end":361,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353314,"byte_end":353347,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353348,"byte_end":353353,"line_start":363,"line_end":363,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353354,"byte_end":353357,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353358,"byte_end":353421,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353422,"byte_end":353536,"line_start":366,"line_end":366,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353537,"byte_end":353592,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353593,"byte_end":353679,"line_start":368,"line_end":368,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":353680,"byte_end":353687,"line_start":369,"line_end":369,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354738,"byte_end":354742,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::complete::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354021,"byte_end":354099,"line_start":383,"line_end":383,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354100,"byte_end":354103,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354104,"byte_end":354204,"line_start":385,"line_end":385,"column_start":1,"column_end":101}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354205,"byte_end":354218,"line_start":386,"line_end":386,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354219,"byte_end":354230,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354231,"byte_end":354267,"line_start":388,"line_end":388,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354268,"byte_end":354333,"line_start":389,"line_end":389,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354334,"byte_end":354369,"line_start":390,"line_end":390,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354370,"byte_end":354373,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354374,"byte_end":354420,"line_start":392,"line_end":392,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354421,"byte_end":354442,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354443,"byte_end":354448,"line_start":394,"line_end":394,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354449,"byte_end":354452,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354453,"byte_end":354507,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354508,"byte_end":354560,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354561,"byte_end":354646,"line_start":398,"line_end":398,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354647,"byte_end":354722,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":354723,"byte_end":354730,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355910,"byte_end":355920,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::complete::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355098,"byte_end":355168,"line_start":415,"line_end":415,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355169,"byte_end":355172,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355173,"byte_end":355268,"line_start":417,"line_end":417,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355269,"byte_end":355299,"line_start":418,"line_end":418,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355300,"byte_end":355313,"line_start":419,"line_end":419,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355314,"byte_end":355325,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355326,"byte_end":355362,"line_start":421,"line_end":421,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355363,"byte_end":355428,"line_start":422,"line_end":422,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355429,"byte_end":355470,"line_start":423,"line_end":423,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355471,"byte_end":355474,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355475,"byte_end":355525,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355526,"byte_end":355552,"line_start":426,"line_end":426,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355553,"byte_end":355558,"line_start":427,"line_end":427,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355559,"byte_end":355562,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355563,"byte_end":355637,"line_start":429,"line_end":429,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355638,"byte_end":355747,"line_start":430,"line_end":430,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355748,"byte_end":355833,"line_start":431,"line_end":431,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355834,"byte_end":355894,"line_start":432,"line_end":432,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":355895,"byte_end":355902,"line_start":433,"line_end":433,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":357113,"byte_end":357120,"line_start":472,"line_end":472,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::complete::escaped","value":"pub fn escaped<'a, Input: 'a, Error, F, G, O1, O2>(F, char, G)\n-> /*impl Trait*/ where Input: Clone + crate::traits::Offset + InputLength +\nInputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356350,"byte_end":356400,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356401,"byte_end":356404,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356405,"byte_end":356502,"line_start":453,"line_end":453,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356503,"byte_end":356582,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356583,"byte_end":356638,"line_start":455,"line_end":455,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356639,"byte_end":356652,"line_start":456,"line_end":456,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356653,"byte_end":356660,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356661,"byte_end":356697,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356698,"byte_end":356754,"line_start":459,"line_end":459,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356755,"byte_end":356798,"line_start":460,"line_end":460,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::complete::escaped;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356799,"byte_end":356837,"line_start":461,"line_end":461,"column_start":1,"column_end":39}},{"value":"/ use nom::character::complete::one_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356838,"byte_end":356879,"line_start":462,"line_end":462,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356880,"byte_end":356883,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356884,"byte_end":356928,"line_start":464,"line_end":464,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356929,"byte_end":356977,"line_start":465,"line_end":465,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356978,"byte_end":356983,"line_start":466,"line_end":466,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356984,"byte_end":356987,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":356988,"byte_end":357034,"line_start":468,"line_end":468,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":357035,"byte_end":357093,"line_start":469,"line_end":469,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":357094,"byte_end":357101,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":357102,"byte_end":357105,"line_start":471,"line_end":471,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359167,"byte_end":359175,"line_start":547,"line_end":547,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::complete::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360893,"byte_end":360910,"line_start":603,"line_end":603,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::complete::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359680,"byte_end":359730,"line_start":569,"line_end":569,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359731,"byte_end":359734,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359735,"byte_end":359831,"line_start":571,"line_end":571,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359832,"byte_end":359911,"line_start":572,"line_end":572,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359912,"byte_end":359987,"line_start":573,"line_end":573,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359988,"byte_end":359991,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":359992,"byte_end":360094,"line_start":575,"line_end":575,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360095,"byte_end":360098,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360099,"byte_end":360106,"line_start":577,"line_end":577,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360107,"byte_end":360143,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360144,"byte_end":360200,"line_start":579,"line_end":579,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360201,"byte_end":360231,"line_start":580,"line_end":580,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::{escaped_transform, tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360232,"byte_end":360287,"line_start":581,"line_end":581,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360288,"byte_end":360329,"line_start":582,"line_end":582,"column_start":1,"column_end":42}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360330,"byte_end":360355,"line_start":583,"line_end":583,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360356,"byte_end":360387,"line_start":584,"line_end":584,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360388,"byte_end":360391,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360392,"byte_end":360445,"line_start":586,"line_end":586,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360446,"byte_end":360470,"line_start":587,"line_end":587,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360471,"byte_end":360486,"line_start":588,"line_end":588,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360487,"byte_end":360500,"line_start":589,"line_end":589,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360501,"byte_end":360514,"line_start":590,"line_end":590,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360515,"byte_end":360548,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360549,"byte_end":360582,"line_start":592,"line_end":592,"column_start":1,"column_end":34}},{"value":"/       value(\"\\n\", tag(\"n\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360583,"byte_end":360615,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360616,"byte_end":360626,"line_start":594,"line_end":594,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360627,"byte_end":360641,"line_start":595,"line_end":595,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360642,"byte_end":360647,"line_start":596,"line_end":596,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360648,"byte_end":360651,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\"), Ok((\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360652,"byte_end":360721,"line_start":598,"line_end":598,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"ab\\\\ncd\"), Ok((\"\", String::from(\"ab\\ncd\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360722,"byte_end":360790,"line_start":599,"line_end":599,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360791,"byte_end":360798,"line_start":600,"line_end":600,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":360799,"byte_end":360824,"line_start":601,"line_end":601,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":363480,"byte_end":363498,"line_start":687,"line_end":687,"column_start":8,"column_end":26},"name":"escaped_transformc","qualname":"::bytes::complete::escaped_transformc","value":"pub fn escaped_transformc<Input, Error, F, G, O1, O2, ExtendItem,\n                          Output>(Input, F, char, G)\n-> IResult<Input, Output, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, Input: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O1: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O2: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input)\n-> IResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/complete.rs","byte_start":363386,"byte_end":363411,"line_start":685,"line_end":685,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bytes::streaming","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","parent":null,"children":[{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1985},{"krate":0,"index":1991},{"krate":0,"index":1998},{"krate":0,"index":2005},{"krate":0,"index":2012},{"krate":0,"index":2019},{"krate":0,"index":2026},{"krate":0,"index":2033},{"krate":0,"index":2040},{"krate":0,"index":2046},{"krate":0,"index":2052},{"krate":0,"index":2064},{"krate":0,"index":2071},{"krate":0,"index":2085}],"decl_id":null,"docs":" Parsers recognizing bytes streams, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, streaming version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":364736,"byte_end":364792,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365875,"byte_end":365878,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::streaming::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern.","sig":null,"attributes":[{"value":"/ Recognizes a pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365134,"byte_end":365159,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365160,"byte_end":365163,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365164,"byte_end":365260,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365261,"byte_end":365301,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365302,"byte_end":365315,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365316,"byte_end":365327,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365328,"byte_end":365364,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365365,"byte_end":365430,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365431,"byte_end":365466,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365467,"byte_end":365470,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365471,"byte_end":365518,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365519,"byte_end":365540,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365541,"byte_end":365546,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365547,"byte_end":365550,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365551,"byte_end":365618,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365619,"byte_end":365713,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365714,"byte_end":365792,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365793,"byte_end":365859,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":365860,"byte_end":365867,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367358,"byte_end":367369,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::streaming::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366505,"byte_end":366547,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366548,"byte_end":366551,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366552,"byte_end":366648,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366649,"byte_end":366712,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366713,"byte_end":366726,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366727,"byte_end":366738,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366739,"byte_end":366775,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366776,"byte_end":366841,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag_no_case;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366842,"byte_end":366885,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366886,"byte_end":366889,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366890,"byte_end":366937,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366938,"byte_end":366967,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366968,"byte_end":366973,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366974,"byte_end":366977,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":366978,"byte_end":367045,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367046,"byte_end":367113,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367114,"byte_end":367181,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367182,"byte_end":367276,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367277,"byte_end":367342,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":367343,"byte_end":367350,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368848,"byte_end":368854,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::streaming::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368006,"byte_end":368048,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368049,"byte_end":368052,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368053,"byte_end":368162,"line_start":100,"line_end":100,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368163,"byte_end":368166,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368167,"byte_end":368212,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368213,"byte_end":368216,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368217,"byte_end":368298,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368299,"byte_end":368312,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368313,"byte_end":368324,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368325,"byte_end":368361,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368362,"byte_end":368418,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_not;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368419,"byte_end":368457,"line_start":109,"line_end":109,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368458,"byte_end":368461,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368462,"byte_end":368512,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368513,"byte_end":368539,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368540,"byte_end":368545,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368546,"byte_end":368549,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368550,"byte_end":368620,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368621,"byte_end":368687,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368688,"byte_end":368763,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368764,"byte_end":368832,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":368833,"byte_end":368840,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370137,"byte_end":370141,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::streaming::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369165,"byte_end":369222,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369223,"byte_end":369226,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369227,"byte_end":369319,"line_start":135,"line_end":135,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369320,"byte_end":369346,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369347,"byte_end":369350,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Streaming specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369351,"byte_end":369375,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369376,"byte_end":369473,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ or if the pattern reaches the end of the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369474,"byte_end":369525,"line_start":140,"line_end":140,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369526,"byte_end":369539,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369540,"byte_end":369551,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369552,"byte_end":369588,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369589,"byte_end":369645,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_a;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369646,"byte_end":369682,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369683,"byte_end":369686,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369687,"byte_end":369731,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369732,"byte_end":369765,"line_start":148,"line_end":148,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369766,"byte_end":369771,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369772,"byte_end":369775,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369776,"byte_end":369840,"line_start":151,"line_end":151,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369841,"byte_end":369917,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369918,"byte_end":369988,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":369989,"byte_end":370058,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370059,"byte_end":370121,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370122,"byte_end":370129,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371399,"byte_end":371409,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::streaming::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370451,"byte_end":370523,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370524,"byte_end":370527,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370528,"byte_end":370623,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370624,"byte_end":370665,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370666,"byte_end":370669,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370670,"byte_end":370694,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370695,"byte_end":370811,"line_start":176,"line_end":176,"column_start":1,"column_end":117}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370812,"byte_end":370825,"line_start":177,"line_end":177,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370826,"byte_end":370837,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370838,"byte_end":370874,"line_start":179,"line_end":179,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370875,"byte_end":370931,"line_start":180,"line_end":180,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_while;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370932,"byte_end":370974,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":370975,"byte_end":371013,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371014,"byte_end":371017,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371018,"byte_end":371067,"line_start":184,"line_end":184,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371068,"byte_end":371102,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371103,"byte_end":371108,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371109,"byte_end":371112,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371113,"byte_end":371182,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371183,"byte_end":371246,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371247,"byte_end":371317,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371318,"byte_end":371383,"line_start":191,"line_end":191,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371384,"byte_end":371391,"line_start":192,"line_end":192,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372697,"byte_end":372708,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::streaming::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371658,"byte_end":371734,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371735,"byte_end":371738,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371739,"byte_end":371834,"line_start":205,"line_end":205,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371835,"byte_end":371876,"line_start":206,"line_end":206,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371877,"byte_end":371880,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371881,"byte_end":371975,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371976,"byte_end":371979,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":371980,"byte_end":372004,"line_start":210,"line_end":210,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372005,"byte_end":372124,"line_start":211,"line_end":211,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372125,"byte_end":372128,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372129,"byte_end":372142,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372143,"byte_end":372154,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372155,"byte_end":372191,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372192,"byte_end":372257,"line_start":216,"line_end":216,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372258,"byte_end":372301,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372302,"byte_end":372340,"line_start":218,"line_end":218,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372341,"byte_end":372344,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372345,"byte_end":372394,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372395,"byte_end":372430,"line_start":221,"line_end":221,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372431,"byte_end":372436,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372437,"byte_end":372440,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372441,"byte_end":372510,"line_start":224,"line_end":224,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372511,"byte_end":372581,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372582,"byte_end":372681,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":372682,"byte_end":372689,"line_start":227,"line_end":227,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":374251,"byte_end":374265,"line_start":267,"line_end":267,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::streaming::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength,\nF: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373017,"byte_end":373097,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373098,"byte_end":373101,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373102,"byte_end":373197,"line_start":243,"line_end":243,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373198,"byte_end":373239,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373240,"byte_end":373243,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373244,"byte_end":373334,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373335,"byte_end":373359,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373360,"byte_end":373493,"line_start":248,"line_end":248,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373494,"byte_end":373497,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373498,"byte_end":373511,"line_start":250,"line_end":250,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373512,"byte_end":373523,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373524,"byte_end":373560,"line_start":252,"line_end":252,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373561,"byte_end":373626,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while_m_n;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373627,"byte_end":373673,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373674,"byte_end":373712,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373713,"byte_end":373716,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373717,"byte_end":373772,"line_start":257,"line_end":257,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373773,"byte_end":373817,"line_start":258,"line_end":258,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373818,"byte_end":373823,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373824,"byte_end":373827,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373828,"byte_end":373903,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373904,"byte_end":373977,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":373978,"byte_end":374054,"line_start":263,"line_end":263,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":374055,"byte_end":374128,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":374129,"byte_end":374235,"line_start":265,"line_end":265,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":374236,"byte_end":374243,"line_start":266,"line_end":266,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376863,"byte_end":376872,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::streaming::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":375916,"byte_end":375985,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":375986,"byte_end":375989,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":375990,"byte_end":376077,"line_start":329,"line_end":329,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376078,"byte_end":376119,"line_start":330,"line_end":330,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376120,"byte_end":376123,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376124,"byte_end":376148,"line_start":332,"line_end":332,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376149,"byte_end":376245,"line_start":333,"line_end":333,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376246,"byte_end":376289,"line_start":334,"line_end":334,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376290,"byte_end":376293,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376294,"byte_end":376307,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376308,"byte_end":376319,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376320,"byte_end":376356,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376357,"byte_end":376413,"line_start":339,"line_end":339,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_till;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376414,"byte_end":376455,"line_start":340,"line_end":340,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376456,"byte_end":376459,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376460,"byte_end":376511,"line_start":342,"line_end":342,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376512,"byte_end":376544,"line_start":343,"line_end":343,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376545,"byte_end":376550,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376551,"byte_end":376554,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376555,"byte_end":376618,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376619,"byte_end":376702,"line_start":347,"line_end":347,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376703,"byte_end":376777,"line_start":348,"line_end":348,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376778,"byte_end":376847,"line_start":349,"line_end":349,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":376848,"byte_end":376855,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378109,"byte_end":378119,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::streaming::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377120,"byte_end":377193,"line_start":361,"line_end":361,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377194,"byte_end":377197,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377198,"byte_end":377285,"line_start":363,"line_end":363,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377286,"byte_end":377327,"line_start":364,"line_end":364,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377328,"byte_end":377331,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377332,"byte_end":377356,"line_start":366,"line_end":366,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377357,"byte_end":377453,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377454,"byte_end":377497,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377498,"byte_end":377511,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377512,"byte_end":377523,"line_start":370,"line_end":370,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377524,"byte_end":377560,"line_start":371,"line_end":371,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377561,"byte_end":377626,"line_start":372,"line_end":372,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_till1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377627,"byte_end":377669,"line_start":373,"line_end":373,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377670,"byte_end":377673,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377674,"byte_end":377725,"line_start":375,"line_end":375,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377726,"byte_end":377759,"line_start":376,"line_end":376,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377760,"byte_end":377765,"line_start":377,"line_end":377,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377766,"byte_end":377769,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377770,"byte_end":377833,"line_start":379,"line_end":379,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377834,"byte_end":377948,"line_start":380,"line_end":380,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":377949,"byte_end":378023,"line_start":381,"line_end":381,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378024,"byte_end":378093,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378094,"byte_end":378101,"line_start":383,"line_end":383,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379410,"byte_end":379414,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::streaming::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake + InputLength, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378426,"byte_end":378504,"line_start":397,"line_end":397,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378505,"byte_end":378508,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378509,"byte_end":378533,"line_start":399,"line_end":399,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* if the input has less than N elements, `take` will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378534,"byte_end":378608,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ return a `Err::Incomplete(Needed::new(M))` where M is the number of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378609,"byte_end":378680,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/ additional bytes the parser would need to succeed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378681,"byte_end":378735,"line_start":402,"line_end":402,"column_start":1,"column_end":55}},{"value":"/ It is well defined for `&[u8]` as the number of elements is the byte size,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378736,"byte_end":378814,"line_start":403,"line_end":403,"column_start":1,"column_end":79}},{"value":"/ but for types like `&str`, we cannot know how many bytes correspond for","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378815,"byte_end":378890,"line_start":404,"line_end":404,"column_start":1,"column_end":76}},{"value":"/ the next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378891,"byte_end":378971,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378972,"byte_end":378975,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378976,"byte_end":378989,"line_start":407,"line_end":407,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":378990,"byte_end":379001,"line_start":408,"line_end":408,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379002,"byte_end":379038,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379039,"byte_end":379095,"line_start":410,"line_end":410,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379096,"byte_end":379132,"line_start":411,"line_end":411,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379133,"byte_end":379136,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379137,"byte_end":379183,"line_start":413,"line_end":413,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379184,"byte_end":379205,"line_start":414,"line_end":414,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379206,"byte_end":379211,"line_start":415,"line_end":415,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379212,"byte_end":379215,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379216,"byte_end":379270,"line_start":417,"line_end":417,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379271,"byte_end":379323,"line_start":418,"line_end":418,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379324,"byte_end":379394,"line_start":419,"line_end":419,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379395,"byte_end":379402,"line_start":420,"line_end":420,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380617,"byte_end":380627,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::streaming::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379743,"byte_end":379813,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379814,"byte_end":379817,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379818,"byte_end":379853,"line_start":437,"line_end":437,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379854,"byte_end":379857,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379858,"byte_end":379882,"line_start":439,"line_end":439,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379883,"byte_end":379975,"line_start":440,"line_end":440,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":379976,"byte_end":380044,"line_start":441,"line_end":441,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380045,"byte_end":380058,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380059,"byte_end":380070,"line_start":443,"line_end":443,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380071,"byte_end":380107,"line_start":444,"line_end":444,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380108,"byte_end":380164,"line_start":445,"line_end":445,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_until;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380165,"byte_end":380207,"line_start":446,"line_end":446,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380208,"byte_end":380211,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380212,"byte_end":380262,"line_start":448,"line_end":448,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380263,"byte_end":380289,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380290,"byte_end":380295,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380296,"byte_end":380299,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380300,"byte_end":380374,"line_start":452,"line_end":452,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380375,"byte_end":380456,"line_start":453,"line_end":453,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380457,"byte_end":380540,"line_start":454,"line_end":454,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380541,"byte_end":380601,"line_start":455,"line_end":455,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":380602,"byte_end":380609,"line_start":456,"line_end":456,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381793,"byte_end":381800,"line_start":496,"line_end":496,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::streaming::escaped","value":"pub fn escaped<Input, Error, F, G, O1, O2>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381031,"byte_end":381081,"line_start":475,"line_end":475,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381082,"byte_end":381085,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381086,"byte_end":381183,"line_start":477,"line_end":477,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381184,"byte_end":381263,"line_start":478,"line_end":478,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381264,"byte_end":381319,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381320,"byte_end":381333,"line_start":480,"line_end":480,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381334,"byte_end":381341,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381342,"byte_end":381378,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381379,"byte_end":381435,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381436,"byte_end":381479,"line_start":484,"line_end":484,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::streaming::escaped;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381480,"byte_end":381519,"line_start":485,"line_end":485,"column_start":1,"column_end":40}},{"value":"/ use nom::character::streaming::one_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381520,"byte_end":381562,"line_start":486,"line_end":486,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381563,"byte_end":381566,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381567,"byte_end":381611,"line_start":488,"line_end":488,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381612,"byte_end":381659,"line_start":489,"line_end":489,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381660,"byte_end":381665,"line_start":490,"line_end":490,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381666,"byte_end":381669,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381670,"byte_end":381716,"line_start":492,"line_end":492,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381717,"byte_end":381773,"line_start":493,"line_end":493,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381774,"byte_end":381781,"line_start":494,"line_end":494,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":381782,"byte_end":381785,"line_start":495,"line_end":495,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":383556,"byte_end":383564,"line_start":562,"line_end":562,"column_start":8,"column_end":16},"name":"escapedc","qualname":"::bytes::streaming::escapedc","value":"pub fn escapedc<Input, Error, F, G, O1, O2>(Input, F, char, G)\n-> IResult<Input, Input, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input) ->\nIResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385219,"byte_end":385236,"line_start":617,"line_end":617,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::streaming::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384069,"byte_end":384119,"line_start":584,"line_end":584,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384120,"byte_end":384123,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384124,"byte_end":384220,"line_start":586,"line_end":586,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384221,"byte_end":384300,"line_start":587,"line_end":587,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384301,"byte_end":384376,"line_start":588,"line_end":588,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384377,"byte_end":384380,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384381,"byte_end":384483,"line_start":590,"line_end":590,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384484,"byte_end":384487,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384488,"byte_end":384495,"line_start":592,"line_end":592,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nom;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384496,"byte_end":384532,"line_start":593,"line_end":593,"column_start":1,"column_end":37}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384533,"byte_end":384589,"line_start":594,"line_end":594,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384590,"byte_end":384620,"line_start":595,"line_end":595,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::streaming::{escaped_transform, tag};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384621,"byte_end":384677,"line_start":596,"line_end":596,"column_start":1,"column_end":57}},{"value":"/ use nom::character::streaming::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384678,"byte_end":384720,"line_start":597,"line_end":597,"column_start":1,"column_end":43}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384721,"byte_end":384746,"line_start":598,"line_end":598,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384747,"byte_end":384778,"line_start":599,"line_end":599,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384779,"byte_end":384782,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384783,"byte_end":384836,"line_start":601,"line_end":601,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384837,"byte_end":384861,"line_start":602,"line_end":602,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384862,"byte_end":384877,"line_start":603,"line_end":603,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384878,"byte_end":384891,"line_start":604,"line_end":604,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384892,"byte_end":384905,"line_start":605,"line_end":605,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384906,"byte_end":384939,"line_start":606,"line_end":606,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384940,"byte_end":384973,"line_start":607,"line_end":607,"column_start":1,"column_end":34}},{"value":"/       value(\"n\", tag(\"\\n\")),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":384974,"byte_end":385006,"line_start":608,"line_end":608,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385007,"byte_end":385017,"line_start":609,"line_end":609,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385018,"byte_end":385032,"line_start":610,"line_end":610,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385033,"byte_end":385038,"line_start":611,"line_end":611,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385039,"byte_end":385042,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\\\"\"), Ok((\"\\\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385043,"byte_end":385116,"line_start":613,"line_end":613,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385117,"byte_end":385124,"line_start":614,"line_end":614,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":385125,"byte_end":385150,"line_start":615,"line_end":615,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":387532,"byte_end":387550,"line_start":692,"line_end":692,"column_start":8,"column_end":26},"name":"escaped_transformc","qualname":"::bytes::streaming::escaped_transformc","value":"pub fn escaped_transformc<Input, Error, F, G, O1, O2, ExtendItem,\n                          Output>(Input, F, char, G)\n-> IResult<Input, Output, Error> where Input: Clone + crate::traits::Offset +\nInputLength + InputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> +\nInputIter, Input: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O1: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, O2: crate::traits::ExtendInto<Item = ExtendItem, Extender =\nExtendItem>, <Input as InputIter>::Item: crate::traits::AsChar, F: Fn(Input)\n-> IResult<Input, O1, Error>, G: Fn(Input) -> IResult<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/streaming.rs","byte_start":387438,"byte_end":387463,"line_start":690,"line_end":690,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2100},{"krate":0,"index":2159},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2257},{"krate":0,"index":2263},{"krate":0,"index":2271}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16786,"byte_end":16798,"line_start":507,"line_end":507,"column_start":1,"column_end":13}},{"value":"/ Bit level parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388302,"byte_end":388323,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388324,"byte_end":388327,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bits::complete","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2151}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":403123,"byte_end":403144,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":403145,"byte_end":403148,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":403407,"byte_end":403411,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::complete::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":403357,"byte_end":403399,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":404963,"byte_end":404966,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::complete::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/complete.rs","byte_start":404881,"byte_end":404955,"line_start":61,"line_end":61,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bits::streaming","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2213}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":405550,"byte_end":405571,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":405572,"byte_end":405575,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":405842,"byte_end":405846,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::streaming::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":405792,"byte_end":405834,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":407344,"byte_end":407347,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::streaming::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/streaming.rs","byte_start":407262,"byte_end":407336,"line_start":58,"line_end":58,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389500,"byte_end":389504,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"bits","qualname":"::bits::bits","value":"pub fn bits<I, O, E1, E2, P>(P) -> /*impl Trait*/ where\nE1: ParseError<(I, usize)> + ErrorConvert<E2>, E2: ParseError<I>,\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","sig":null,"attributes":[{"value":"/ Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388561,"byte_end":388658,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388659,"byte_end":388662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Afterwards, the input is converted back to a byte-level parser, with any remaining bits thrown","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388663,"byte_end":388761,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ away.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388762,"byte_end":388771,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388772,"byte_end":388775,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388776,"byte_end":388789,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388790,"byte_end":388797,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, streaming::take};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388798,"byte_end":388841,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ use nom::error::Error;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388842,"byte_end":388868,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388869,"byte_end":388898,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388899,"byte_end":388920,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388921,"byte_end":388924,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8)> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388925,"byte_end":388981,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/     bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((take(4usize), take(8usize))))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388982,"byte_end":389075,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389076,"byte_end":389081,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389082,"byte_end":389085,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389086,"byte_end":389128,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389129,"byte_end":389132,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let output = parse(input).expect(\"We take 1.5 bytes and the input is longer than 2 bytes\");","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389133,"byte_end":389228,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389229,"byte_end":389232,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // The first byte is consumed, the second byte is partially consumed and dropped.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389233,"byte_end":389318,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ let remaining = output.0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389319,"byte_end":389348,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(remaining, [0xff, 0xff]);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389349,"byte_end":389389,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389390,"byte_end":389393,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parsed = output.1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389394,"byte_end":389420,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(parsed.0, 0x01);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389421,"byte_end":389452,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parsed.1, 0x23);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389453,"byte_end":389484,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":389485,"byte_end":389492,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390424,"byte_end":390429,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"bitsc","qualname":"::bits::bitsc","value":"pub fn bitsc<I, O, E1: ParseError<(I, usize)> + ErrorConvert<E2>,\n             E2: ParseError<I>, P>(I, P) -> IResult<I, O, E2> where\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391528,"byte_end":391533,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"bytes","qualname":"::bits::bytes","value":"pub fn bytes<I, O, E1, E2, P>(P) -> /*impl Trait*/ where E1: ParseError<I> +\nErrorConvert<E2>, E2: ParseError<(I, usize)>, I: Slice<RangeFrom<usize>> +\nClone, P: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\n parser, allowing byte-slice parsers to work on bit streams.","sig":null,"attributes":[{"value":"/ Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390671,"byte_end":390774,"line_start":76,"line_end":76,"column_start":1,"column_end":104}},{"value":"/ parser, allowing byte-slice parsers to work on bit streams.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390775,"byte_end":390838,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390839,"byte_end":390842,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ A partial byte remaining in the input will be ignored and the given parser will start parsing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390843,"byte_end":390940,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ at the next full byte.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390941,"byte_end":390967,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390968,"byte_end":390971,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390972,"byte_end":390979,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, bytes, streaming::take};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":390980,"byte_end":391030,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391031,"byte_end":391061,"line_start":84,"line_end":84,"column_start":1,"column_end":31}},{"value":"/ use nom::error::Error;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391062,"byte_end":391088,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391089,"byte_end":391118,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391119,"byte_end":391140,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391141,"byte_end":391144,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391145,"byte_end":391208,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/   bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391209,"byte_end":391264,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/     take(4usize),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391265,"byte_end":391286,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     take(8usize),","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391287,"byte_end":391308,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/     bytes::<_, _, Error<&[u8]>, _, _>(rest)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391309,"byte_end":391356,"line_start":93,"line_end":93,"column_start":1,"column_end":48}},{"value":"/   )))(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391357,"byte_end":391373,"line_start":94,"line_end":94,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391374,"byte_end":391379,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391380,"byte_end":391383,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391384,"byte_end":391426,"line_start":97,"line_end":97,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391427,"byte_end":391430,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse( input ), Ok(( &[][..], (0x01, 0x23, &[0xff, 0xff][..]) )));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391431,"byte_end":391512,"line_start":99,"line_end":99,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":391513,"byte_end":391520,"line_start":100,"line_end":100,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":392506,"byte_end":392512,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"bytesc","qualname":"::bits::bytesc","value":"pub fn bytesc<I, O, E1: ParseError<I> + ErrorConvert<E2>,\n              E2: ParseError<(I, usize)>, P>((I, usize), P)\n-> IResult<(I, usize), O, E2> where I: Slice<RangeFrom<usize>> + Clone,\nP: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"character","qualname":"::character","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2282},{"krate":0,"index":2434},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595}],"decl_id":null,"docs":" Character specific parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16814,"byte_end":16826,"line_start":510,"line_end":510,"column_start":1,"column_end":13}},{"value":"/ Character specific parsers and combinators","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":407931,"byte_end":407977,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":407978,"byte_end":407981,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":407982,"byte_end":408027,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::character::complete","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2338},{"krate":0,"index":2345},{"krate":0,"index":2352},{"krate":0,"index":2359},{"krate":0,"index":2362},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2382},{"krate":0,"index":2386},{"krate":0,"index":2390},{"krate":0,"index":2394},{"krate":0,"index":2398},{"krate":0,"index":2402},{"krate":0,"index":2406},{"krate":0,"index":2410},{"krate":0,"index":2414},{"krate":0,"index":2418},{"krate":0,"index":2422},{"krate":0,"index":2426},{"krate":0,"index":2430}],"decl_id":null,"docs":" Character specific parsers and combinators, complete input version.","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, complete input version.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413482,"byte_end":413553,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413554,"byte_end":413557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413558,"byte_end":413604,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414518,"byte_end":414522,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::complete::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413895,"byte_end":413924,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413925,"byte_end":413928,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":413929,"byte_end":414007,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414008,"byte_end":414021,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414022,"byte_end":414025,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414026,"byte_end":414033,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414034,"byte_end":414091,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::char;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414092,"byte_end":414133,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414134,"byte_end":414181,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414182,"byte_end":414202,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414203,"byte_end":414208,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414209,"byte_end":414256,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414257,"byte_end":414342,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414343,"byte_end":414424,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414425,"byte_end":414502,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414503,"byte_end":414510,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415525,"byte_end":415532,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::complete::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414907,"byte_end":414976,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414977,"byte_end":414980,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":414981,"byte_end":415059,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415060,"byte_end":415073,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415074,"byte_end":415077,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415078,"byte_end":415085,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415086,"byte_end":415151,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::satisfy;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415152,"byte_end":415196,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415197,"byte_end":415244,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415245,"byte_end":415289,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415290,"byte_end":415295,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415296,"byte_end":415343,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415344,"byte_end":415428,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415429,"byte_end":415509,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415510,"byte_end":415517,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416510,"byte_end":416516,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::complete::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":415971,"byte_end":416017,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416018,"byte_end":416021,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416022,"byte_end":416100,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416101,"byte_end":416114,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416115,"byte_end":416118,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416119,"byte_end":416126,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416127,"byte_end":416166,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::one_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416167,"byte_end":416210,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416211,"byte_end":416288,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416289,"byte_end":416393,"line_start":82,"line_end":82,"column_start":1,"column_end":105}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416394,"byte_end":416494,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416495,"byte_end":416502,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417512,"byte_end":417519,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::complete::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":416948,"byte_end":417014,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417015,"byte_end":417018,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417019,"byte_end":417097,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417098,"byte_end":417111,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417112,"byte_end":417115,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417116,"byte_end":417123,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417124,"byte_end":417163,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::none_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417164,"byte_end":417208,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417209,"byte_end":417287,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417288,"byte_end":417393,"line_start":106,"line_end":106,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417394,"byte_end":417496,"line_start":107,"line_end":107,"column_start":1,"column_end":103}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417497,"byte_end":417504,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418515,"byte_end":418519,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::complete::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>>, T: InputIter,\nT: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417953,"byte_end":417986,"line_start":121,"line_end":121,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417987,"byte_end":417990,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":417991,"byte_end":418069,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418070,"byte_end":418083,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418084,"byte_end":418087,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418088,"byte_end":418095,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418096,"byte_end":418153,"line_start":127,"line_end":127,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::crlf;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418154,"byte_end":418195,"line_start":128,"line_end":128,"column_start":1,"column_end":42}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418196,"byte_end":418247,"line_start":129,"line_end":129,"column_start":1,"column_end":52}},{"value":"/     crlf(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418248,"byte_end":418267,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418268,"byte_end":418273,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418274,"byte_end":418277,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418278,"byte_end":418329,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418330,"byte_end":418421,"line_start":134,"line_end":134,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418422,"byte_end":418499,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418500,"byte_end":418507,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419761,"byte_end":419776,"line_start":173,"line_end":173,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::complete::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":418968,"byte_end":419026,"line_start":154,"line_end":154,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419027,"byte_end":419030,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419031,"byte_end":419109,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419110,"byte_end":419123,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419124,"byte_end":419127,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419128,"byte_end":419135,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419136,"byte_end":419201,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::not_line_ending;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419202,"byte_end":419254,"line_start":161,"line_end":161,"column_start":1,"column_end":53}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419255,"byte_end":419306,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/     not_line_ending(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419307,"byte_end":419337,"line_start":163,"line_end":163,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419338,"byte_end":419343,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419344,"byte_end":419347,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419348,"byte_end":419403,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"ab\\nc\"), Ok((\"\\nc\", \"ab\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419404,"byte_end":419455,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419456,"byte_end":419503,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419504,"byte_end":419545,"line_start":169,"line_end":169,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(parser(\"a\\rb\\nc\"), Err(Err::Error(Error { input: \"a\\rb\\nc\", code: ErrorKind::Tag })));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419546,"byte_end":419647,"line_start":170,"line_end":170,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(parser(\"a\\rbc\"), Err(Err::Error(Error { input: \"a\\rbc\", code: ErrorKind::Tag })));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419648,"byte_end":419745,"line_start":171,"line_end":171,"column_start":1,"column_end":98}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":419746,"byte_end":419753,"line_start":172,"line_end":172,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421412,"byte_end":421423,"line_start":223,"line_end":223,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::complete::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420808,"byte_end":420861,"line_start":207,"line_end":207,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420862,"byte_end":420865,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420866,"byte_end":420944,"line_start":209,"line_end":209,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420945,"byte_end":420958,"line_start":210,"line_end":210,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420959,"byte_end":420962,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420963,"byte_end":420970,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":420971,"byte_end":421036,"line_start":213,"line_end":213,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::line_ending;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421037,"byte_end":421085,"line_start":214,"line_end":214,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421086,"byte_end":421137,"line_start":215,"line_end":215,"column_start":1,"column_end":52}},{"value":"/     line_ending(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421138,"byte_end":421164,"line_start":216,"line_end":216,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421165,"byte_end":421170,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421171,"byte_end":421174,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421175,"byte_end":421226,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421227,"byte_end":421318,"line_start":220,"line_end":220,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421319,"byte_end":421396,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":421397,"byte_end":421404,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422656,"byte_end":422663,"line_start":258,"line_end":258,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::complete::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\n'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422084,"byte_end":422121,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422122,"byte_end":422125,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422126,"byte_end":422204,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422205,"byte_end":422218,"line_start":245,"line_end":245,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422219,"byte_end":422222,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422223,"byte_end":422230,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422231,"byte_end":422296,"line_start":248,"line_end":248,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::newline;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422297,"byte_end":422341,"line_start":249,"line_end":249,"column_start":1,"column_end":45}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422342,"byte_end":422393,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"/     newline(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422394,"byte_end":422416,"line_start":251,"line_end":251,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422417,"byte_end":422422,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422423,"byte_end":422426,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422427,"byte_end":422474,"line_start":254,"line_end":254,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422475,"byte_end":422562,"line_start":255,"line_end":255,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422563,"byte_end":422640,"line_start":256,"line_end":256,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422641,"byte_end":422648,"line_start":257,"line_end":257,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423393,"byte_end":423396,"line_start":282,"line_end":282,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::complete::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422833,"byte_end":422866,"line_start":266,"line_end":266,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422867,"byte_end":422870,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422871,"byte_end":422949,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422950,"byte_end":422963,"line_start":269,"line_end":269,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422964,"byte_end":422967,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422968,"byte_end":422975,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":422976,"byte_end":423041,"line_start":272,"line_end":272,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::tab;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423042,"byte_end":423082,"line_start":273,"line_end":273,"column_start":1,"column_end":41}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423083,"byte_end":423134,"line_start":274,"line_end":274,"column_start":1,"column_end":52}},{"value":"/     tab(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423135,"byte_end":423153,"line_start":275,"line_end":275,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423154,"byte_end":423159,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423160,"byte_end":423163,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423164,"byte_end":423211,"line_start":278,"line_end":278,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423212,"byte_end":423299,"line_start":279,"line_end":279,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423300,"byte_end":423377,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423378,"byte_end":423385,"line_start":281,"line_end":281,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424124,"byte_end":424131,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::complete::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423566,"byte_end":423632,"line_start":290,"line_end":290,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423633,"byte_end":423702,"line_start":291,"line_end":291,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423703,"byte_end":423706,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423707,"byte_end":423785,"line_start":293,"line_end":293,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423786,"byte_end":423799,"line_start":294,"line_end":294,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423800,"byte_end":423803,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423804,"byte_end":423811,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423812,"byte_end":423899,"line_start":297,"line_end":297,"column_start":1,"column_end":88}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423900,"byte_end":423951,"line_start":298,"line_end":298,"column_start":1,"column_end":52}},{"value":"/     anychar(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423952,"byte_end":423974,"line_start":299,"line_end":299,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423975,"byte_end":423980,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423981,"byte_end":423984,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":423985,"byte_end":424031,"line_start":302,"line_end":302,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424032,"byte_end":424108,"line_start":303,"line_end":303,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424109,"byte_end":424116,"line_start":304,"line_end":304,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425172,"byte_end":425178,"line_start":337,"line_end":337,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::complete::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424595,"byte_end":424684,"line_start":320,"line_end":320,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424685,"byte_end":424688,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424689,"byte_end":424780,"line_start":322,"line_end":322,"column_start":1,"column_end":92}},{"value":"/ alphabetic character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424781,"byte_end":424807,"line_start":323,"line_end":323,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424808,"byte_end":424821,"line_start":324,"line_end":324,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424822,"byte_end":424825,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424826,"byte_end":424833,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424834,"byte_end":424890,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alpha0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424891,"byte_end":424934,"line_start":328,"line_end":328,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424935,"byte_end":424986,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/     alpha0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":424987,"byte_end":425008,"line_start":330,"line_end":330,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425009,"byte_end":425014,"line_start":331,"line_end":331,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425015,"byte_end":425018,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425019,"byte_end":425068,"line_start":333,"line_end":333,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425069,"byte_end":425114,"line_start":334,"line_end":334,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425115,"byte_end":425156,"line_start":335,"line_end":335,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425157,"byte_end":425164,"line_start":336,"line_end":336,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426077,"byte_end":426083,"line_start":362,"line_end":362,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::complete::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425371,"byte_end":425459,"line_start":345,"line_end":345,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425460,"byte_end":425463,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425464,"byte_end":425542,"line_start":347,"line_end":347,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found  (a non alphabetic character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425543,"byte_end":425629,"line_start":348,"line_end":348,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425630,"byte_end":425643,"line_start":349,"line_end":349,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425644,"byte_end":425647,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425648,"byte_end":425655,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425656,"byte_end":425721,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425722,"byte_end":425765,"line_start":353,"line_end":353,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425766,"byte_end":425817,"line_start":354,"line_end":354,"column_start":1,"column_end":52}},{"value":"/     alpha1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425818,"byte_end":425839,"line_start":355,"line_end":355,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425840,"byte_end":425845,"line_start":356,"line_end":356,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425846,"byte_end":425849,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425850,"byte_end":425899,"line_start":358,"line_end":358,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425900,"byte_end":425982,"line_start":359,"line_end":359,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":425983,"byte_end":426061,"line_start":360,"line_end":360,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426062,"byte_end":426069,"line_start":361,"line_end":361,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426931,"byte_end":426937,"line_start":388,"line_end":388,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::complete::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426295,"byte_end":426354,"line_start":370,"line_end":370,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426355,"byte_end":426358,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426359,"byte_end":426437,"line_start":372,"line_end":372,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426438,"byte_end":426518,"line_start":373,"line_end":373,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426519,"byte_end":426532,"line_start":374,"line_end":374,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426533,"byte_end":426536,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426537,"byte_end":426544,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426545,"byte_end":426601,"line_start":377,"line_end":377,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426602,"byte_end":426645,"line_start":378,"line_end":378,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426646,"byte_end":426697,"line_start":379,"line_end":379,"column_start":1,"column_end":52}},{"value":"/     digit0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426698,"byte_end":426719,"line_start":380,"line_end":380,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426720,"byte_end":426725,"line_start":381,"line_end":381,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426726,"byte_end":426729,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426730,"byte_end":426777,"line_start":383,"line_end":383,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"21\"), Ok((\"\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426778,"byte_end":426823,"line_start":384,"line_end":384,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426824,"byte_end":426873,"line_start":385,"line_end":385,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426874,"byte_end":426915,"line_start":386,"line_end":386,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":426916,"byte_end":426923,"line_start":387,"line_end":387,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427802,"byte_end":427808,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::complete::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427134,"byte_end":427192,"line_start":396,"line_end":396,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427193,"byte_end":427196,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427197,"byte_end":427275,"line_start":398,"line_end":398,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427276,"byte_end":427356,"line_start":399,"line_end":399,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427357,"byte_end":427370,"line_start":400,"line_end":400,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427371,"byte_end":427374,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427375,"byte_end":427382,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427383,"byte_end":427448,"line_start":403,"line_end":403,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427449,"byte_end":427492,"line_start":404,"line_end":404,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427493,"byte_end":427544,"line_start":405,"line_end":405,"column_start":1,"column_end":52}},{"value":"/     digit1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427545,"byte_end":427566,"line_start":406,"line_end":406,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427567,"byte_end":427572,"line_start":407,"line_end":407,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427573,"byte_end":427576,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427577,"byte_end":427624,"line_start":409,"line_end":409,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427625,"byte_end":427707,"line_start":410,"line_end":410,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427708,"byte_end":427786,"line_start":411,"line_end":411,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":427787,"byte_end":427794,"line_start":412,"line_end":412,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428608,"byte_end":428618,"line_start":437,"line_end":437,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::complete::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428024,"byte_end":428105,"line_start":421,"line_end":421,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428106,"byte_end":428109,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428110,"byte_end":428231,"line_start":423,"line_end":423,"column_start":1,"column_end":122}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428232,"byte_end":428245,"line_start":424,"line_end":424,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428246,"byte_end":428249,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428250,"byte_end":428257,"line_start":426,"line_end":426,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428258,"byte_end":428314,"line_start":427,"line_end":427,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::hex_digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428315,"byte_end":428362,"line_start":428,"line_end":428,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428363,"byte_end":428414,"line_start":429,"line_end":429,"column_start":1,"column_end":52}},{"value":"/     hex_digit0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428415,"byte_end":428440,"line_start":430,"line_end":430,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428441,"byte_end":428446,"line_start":431,"line_end":431,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428447,"byte_end":428450,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428451,"byte_end":428500,"line_start":433,"line_end":433,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428501,"byte_end":428550,"line_start":434,"line_end":434,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428551,"byte_end":428592,"line_start":435,"line_end":435,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428593,"byte_end":428600,"line_start":436,"line_end":436,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429532,"byte_end":429542,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::complete::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428814,"byte_end":428894,"line_start":444,"line_end":444,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428895,"byte_end":428898,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428899,"byte_end":428977,"line_start":446,"line_end":446,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":428978,"byte_end":429070,"line_start":447,"line_end":447,"column_start":1,"column_end":93}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429071,"byte_end":429084,"line_start":448,"line_end":448,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429085,"byte_end":429088,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429089,"byte_end":429096,"line_start":450,"line_end":450,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429097,"byte_end":429162,"line_start":451,"line_end":451,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::hex_digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429163,"byte_end":429210,"line_start":452,"line_end":452,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429211,"byte_end":429262,"line_start":453,"line_end":453,"column_start":1,"column_end":52}},{"value":"/     hex_digit1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429263,"byte_end":429288,"line_start":454,"line_end":454,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429289,"byte_end":429294,"line_start":455,"line_end":455,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429295,"byte_end":429298,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429299,"byte_end":429348,"line_start":457,"line_end":457,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429349,"byte_end":429434,"line_start":458,"line_end":458,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429435,"byte_end":429516,"line_start":459,"line_end":459,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429517,"byte_end":429524,"line_start":460,"line_end":460,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430311,"byte_end":430321,"line_start":486,"line_end":486,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::complete::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429761,"byte_end":429810,"line_start":469,"line_end":469,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429811,"byte_end":429814,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non octal","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429815,"byte_end":429912,"line_start":471,"line_end":471,"column_start":1,"column_end":98}},{"value":"/ digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429913,"byte_end":429934,"line_start":472,"line_end":472,"column_start":1,"column_end":22}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429935,"byte_end":429948,"line_start":473,"line_end":473,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429949,"byte_end":429952,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429953,"byte_end":429960,"line_start":475,"line_end":475,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":429961,"byte_end":430017,"line_start":476,"line_end":476,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::oct_digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430018,"byte_end":430065,"line_start":477,"line_end":477,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430066,"byte_end":430117,"line_start":478,"line_end":478,"column_start":1,"column_end":52}},{"value":"/     oct_digit0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430118,"byte_end":430143,"line_start":479,"line_end":479,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430144,"byte_end":430149,"line_start":480,"line_end":480,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430150,"byte_end":430153,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430154,"byte_end":430203,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430204,"byte_end":430253,"line_start":483,"line_end":483,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430254,"byte_end":430295,"line_start":484,"line_end":484,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430296,"byte_end":430303,"line_start":485,"line_end":485,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431198,"byte_end":431208,"line_start":511,"line_end":511,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::complete::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430518,"byte_end":430566,"line_start":494,"line_end":494,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430567,"byte_end":430570,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430571,"byte_end":430649,"line_start":496,"line_end":496,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430650,"byte_end":430736,"line_start":497,"line_end":497,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430737,"byte_end":430750,"line_start":498,"line_end":498,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430751,"byte_end":430754,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430755,"byte_end":430762,"line_start":500,"line_end":500,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430763,"byte_end":430828,"line_start":501,"line_end":501,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::oct_digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430829,"byte_end":430876,"line_start":502,"line_end":502,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430877,"byte_end":430928,"line_start":503,"line_end":503,"column_start":1,"column_end":52}},{"value":"/     oct_digit1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430929,"byte_end":430954,"line_start":504,"line_end":504,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430955,"byte_end":430960,"line_start":505,"line_end":505,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430961,"byte_end":430964,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":430965,"byte_end":431014,"line_start":507,"line_end":507,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431015,"byte_end":431100,"line_start":508,"line_end":508,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431101,"byte_end":431182,"line_start":509,"line_end":509,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431183,"byte_end":431190,"line_start":510,"line_end":510,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432027,"byte_end":432040,"line_start":536,"line_end":536,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::complete::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431427,"byte_end":431511,"line_start":519,"line_end":519,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431512,"byte_end":431515,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431516,"byte_end":431607,"line_start":521,"line_end":521,"column_start":1,"column_end":92}},{"value":"/ alphanumerical character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431608,"byte_end":431638,"line_start":522,"line_end":522,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431639,"byte_end":431652,"line_start":523,"line_end":523,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431653,"byte_end":431656,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431657,"byte_end":431664,"line_start":525,"line_end":525,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431665,"byte_end":431721,"line_start":526,"line_end":526,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alphanumeric0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431722,"byte_end":431772,"line_start":527,"line_end":527,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431773,"byte_end":431824,"line_start":528,"line_end":528,"column_start":1,"column_end":52}},{"value":"/     alphanumeric0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431825,"byte_end":431853,"line_start":529,"line_end":529,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431854,"byte_end":431859,"line_start":530,"line_end":530,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431860,"byte_end":431863,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431864,"byte_end":431917,"line_start":532,"line_end":532,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431918,"byte_end":431969,"line_start":533,"line_end":533,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":431970,"byte_end":432011,"line_start":534,"line_end":534,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432012,"byte_end":432019,"line_start":535,"line_end":535,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432974,"byte_end":432987,"line_start":561,"line_end":561,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::complete::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432236,"byte_end":432319,"line_start":544,"line_end":544,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432320,"byte_end":432323,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432324,"byte_end":432402,"line_start":546,"line_end":546,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432403,"byte_end":432492,"line_start":547,"line_end":547,"column_start":1,"column_end":90}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432493,"byte_end":432506,"line_start":548,"line_end":548,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432507,"byte_end":432510,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432511,"byte_end":432518,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432519,"byte_end":432584,"line_start":551,"line_end":551,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alphanumeric1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432585,"byte_end":432635,"line_start":552,"line_end":552,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432636,"byte_end":432687,"line_start":553,"line_end":553,"column_start":1,"column_end":52}},{"value":"/     alphanumeric1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432688,"byte_end":432716,"line_start":554,"line_end":554,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432717,"byte_end":432722,"line_start":555,"line_end":555,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432723,"byte_end":432726,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432727,"byte_end":432780,"line_start":557,"line_end":557,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432781,"byte_end":432872,"line_start":558,"line_end":558,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432873,"byte_end":432958,"line_start":559,"line_end":559,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":432959,"byte_end":432966,"line_start":560,"line_end":560,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433744,"byte_end":433750,"line_start":586,"line_end":586,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::complete::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433209,"byte_end":433253,"line_start":569,"line_end":569,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433254,"byte_end":433257,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non space","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433258,"byte_end":433355,"line_start":571,"line_end":571,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433356,"byte_end":433371,"line_start":572,"line_end":572,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433372,"byte_end":433385,"line_start":573,"line_end":573,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433386,"byte_end":433389,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433390,"byte_end":433397,"line_start":575,"line_end":575,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433398,"byte_end":433454,"line_start":576,"line_end":576,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::space0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433455,"byte_end":433498,"line_start":577,"line_end":577,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433499,"byte_end":433550,"line_start":578,"line_end":578,"column_start":1,"column_end":52}},{"value":"/     space0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433551,"byte_end":433572,"line_start":579,"line_end":579,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433573,"byte_end":433578,"line_start":580,"line_end":580,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433579,"byte_end":433582,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433583,"byte_end":433636,"line_start":582,"line_end":582,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433637,"byte_end":433686,"line_start":583,"line_end":583,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433687,"byte_end":433728,"line_start":584,"line_end":584,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433729,"byte_end":433736,"line_start":585,"line_end":585,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434656,"byte_end":434662,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::complete::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":433997,"byte_end":434040,"line_start":597,"line_end":597,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434041,"byte_end":434044,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434045,"byte_end":434123,"line_start":599,"line_end":599,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434124,"byte_end":434204,"line_start":600,"line_end":600,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434205,"byte_end":434218,"line_start":601,"line_end":601,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434219,"byte_end":434222,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434223,"byte_end":434230,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434231,"byte_end":434296,"line_start":604,"line_end":604,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::space1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434297,"byte_end":434340,"line_start":605,"line_end":605,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434341,"byte_end":434392,"line_start":606,"line_end":606,"column_start":1,"column_end":52}},{"value":"/     space1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434393,"byte_end":434414,"line_start":607,"line_end":607,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434415,"byte_end":434420,"line_start":608,"line_end":608,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434421,"byte_end":434424,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434425,"byte_end":434478,"line_start":610,"line_end":610,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434479,"byte_end":434561,"line_start":611,"line_end":611,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434562,"byte_end":434640,"line_start":612,"line_end":612,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434641,"byte_end":434648,"line_start":613,"line_end":613,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435530,"byte_end":435541,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::complete::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":434947,"byte_end":435021,"line_start":628,"line_end":628,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435022,"byte_end":435025,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return the whole input if no terminating token is found (a non space","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435026,"byte_end":435123,"line_start":630,"line_end":630,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435124,"byte_end":435139,"line_start":631,"line_end":631,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435140,"byte_end":435153,"line_start":632,"line_end":632,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435154,"byte_end":435157,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435158,"byte_end":435165,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435166,"byte_end":435222,"line_start":635,"line_end":635,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::multispace0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435223,"byte_end":435271,"line_start":636,"line_end":636,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435272,"byte_end":435323,"line_start":637,"line_end":637,"column_start":1,"column_end":52}},{"value":"/     multispace0(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435324,"byte_end":435350,"line_start":638,"line_end":638,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435351,"byte_end":435356,"line_start":639,"line_end":639,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435357,"byte_end":435360,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435361,"byte_end":435422,"line_start":641,"line_end":641,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435423,"byte_end":435472,"line_start":642,"line_end":642,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435473,"byte_end":435514,"line_start":643,"line_end":643,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435515,"byte_end":435522,"line_start":644,"line_end":644,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436531,"byte_end":436542,"line_start":673,"line_end":673,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::complete::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435814,"byte_end":435887,"line_start":656,"line_end":656,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435888,"byte_end":435891,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return an error if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435892,"byte_end":435970,"line_start":658,"line_end":658,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":435971,"byte_end":436051,"line_start":659,"line_end":659,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436052,"byte_end":436065,"line_start":660,"line_end":660,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436066,"byte_end":436069,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436070,"byte_end":436077,"line_start":662,"line_end":662,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436078,"byte_end":436143,"line_start":663,"line_end":663,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::multispace1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436144,"byte_end":436192,"line_start":664,"line_end":664,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436193,"byte_end":436244,"line_start":665,"line_end":665,"column_start":1,"column_end":52}},{"value":"/     multispace1(input)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436245,"byte_end":436271,"line_start":666,"line_end":666,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436272,"byte_end":436277,"line_start":667,"line_end":667,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436278,"byte_end":436281,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436282,"byte_end":436343,"line_start":669,"line_end":669,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436344,"byte_end":436431,"line_start":670,"line_end":670,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436432,"byte_end":436515,"line_start":671,"line_end":671,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/complete.rs","byte_start":436516,"byte_end":436523,"line_start":672,"line_end":672,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::character::streaming","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2493},{"krate":0,"index":2500},{"krate":0,"index":2507},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2537},{"krate":0,"index":2541},{"krate":0,"index":2545},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2557},{"krate":0,"index":2561},{"krate":0,"index":2565},{"krate":0,"index":2569},{"krate":0,"index":2573},{"krate":0,"index":2577},{"krate":0,"index":2581},{"krate":0,"index":2585}],"decl_id":null,"docs":" Character specific parsers and combinators, streaming version","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, streaming version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448325,"byte_end":448390,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448391,"byte_end":448394,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448395,"byte_end":448440,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449297,"byte_end":449301,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"char","qualname":"::character::streaming::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448740,"byte_end":448769,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448770,"byte_end":448773,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448774,"byte_end":448875,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448876,"byte_end":448889,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448890,"byte_end":448893,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448894,"byte_end":448901,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448902,"byte_end":448967,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::char;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":448968,"byte_end":449010,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449011,"byte_end":449058,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449059,"byte_end":449079,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449080,"byte_end":449085,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449086,"byte_end":449133,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449134,"byte_end":449215,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449216,"byte_end":449281,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449282,"byte_end":449289,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450415,"byte_end":450422,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::streaming::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449787,"byte_end":449856,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449857,"byte_end":449860,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449861,"byte_end":449962,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449963,"byte_end":449976,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449977,"byte_end":449980,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449981,"byte_end":449988,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":449989,"byte_end":450054,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::satisfy;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450055,"byte_end":450100,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450101,"byte_end":450148,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450149,"byte_end":450193,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450194,"byte_end":450199,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450200,"byte_end":450247,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450248,"byte_end":450332,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450333,"byte_end":450399,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450400,"byte_end":450407,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451486,"byte_end":451492,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::streaming::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450927,"byte_end":450973,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450974,"byte_end":450977,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":450978,"byte_end":451079,"line_start":77,"line_end":77,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451080,"byte_end":451093,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451094,"byte_end":451097,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451098,"byte_end":451105,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451106,"byte_end":451153,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::one_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451154,"byte_end":451198,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451199,"byte_end":451273,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451274,"byte_end":451375,"line_start":84,"line_end":84,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451376,"byte_end":451470,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451471,"byte_end":451478,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452572,"byte_end":452579,"line_start":112,"line_end":112,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::streaming::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":451989,"byte_end":452055,"line_start":100,"line_end":100,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452056,"byte_end":452059,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452060,"byte_end":452161,"line_start":102,"line_end":102,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452162,"byte_end":452175,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452176,"byte_end":452179,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452180,"byte_end":452187,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452188,"byte_end":452235,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::none_of;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452236,"byte_end":452281,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452282,"byte_end":452357,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452358,"byte_end":452460,"line_start":109,"line_end":109,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452461,"byte_end":452556,"line_start":110,"line_end":110,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":452557,"byte_end":452564,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453616,"byte_end":453620,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::streaming::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453078,"byte_end":453111,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453112,"byte_end":453115,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453116,"byte_end":453217,"line_start":127,"line_end":127,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453218,"byte_end":453231,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453232,"byte_end":453235,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453236,"byte_end":453243,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453244,"byte_end":453300,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::crlf;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453301,"byte_end":453343,"line_start":132,"line_end":132,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453344,"byte_end":453414,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453415,"byte_end":453515,"line_start":134,"line_end":134,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453516,"byte_end":453600,"line_start":135,"line_end":135,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":453601,"byte_end":453608,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454975,"byte_end":454990,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::streaming::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454146,"byte_end":454204,"line_start":154,"line_end":154,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454205,"byte_end":454208,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454209,"byte_end":454310,"line_start":156,"line_end":156,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454311,"byte_end":454324,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454325,"byte_end":454328,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454329,"byte_end":454336,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454337,"byte_end":454402,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::not_line_ending;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454403,"byte_end":454456,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454457,"byte_end":454542,"line_start":162,"line_end":162,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454543,"byte_end":454642,"line_start":163,"line_end":163,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454643,"byte_end":454739,"line_start":164,"line_end":164,"column_start":1,"column_end":97}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rb\\nc\"), Err(Err::Error((\"a\\rb\\nc\", ErrorKind::Tag ))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454740,"byte_end":454851,"line_start":165,"line_end":165,"column_start":1,"column_end":112}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rbc\"), Err(Err::Error((\"a\\rbc\", ErrorKind::Tag ))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454852,"byte_end":454959,"line_start":166,"line_end":166,"column_start":1,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":454960,"byte_end":454967,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456697,"byte_end":456708,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::streaming::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456111,"byte_end":456164,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456165,"byte_end":456168,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456169,"byte_end":456270,"line_start":205,"line_end":205,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456271,"byte_end":456284,"line_start":206,"line_end":206,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456285,"byte_end":456288,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456289,"byte_end":456296,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456297,"byte_end":456353,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::line_ending;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456354,"byte_end":456403,"line_start":210,"line_end":210,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456404,"byte_end":456481,"line_start":211,"line_end":211,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456482,"byte_end":456589,"line_start":212,"line_end":212,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456590,"byte_end":456681,"line_start":213,"line_end":213,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":456682,"byte_end":456689,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457987,"byte_end":457994,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::streaming::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\\\n'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457440,"byte_end":457478,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457479,"byte_end":457482,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457483,"byte_end":457584,"line_start":237,"line_end":237,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457585,"byte_end":457598,"line_start":238,"line_end":238,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457599,"byte_end":457602,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457603,"byte_end":457610,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457611,"byte_end":457667,"line_start":241,"line_end":241,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::newline;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457668,"byte_end":457713,"line_start":242,"line_end":242,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457714,"byte_end":457783,"line_start":243,"line_end":243,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457784,"byte_end":457883,"line_start":244,"line_end":244,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457884,"byte_end":457971,"line_start":245,"line_end":245,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":457972,"byte_end":457979,"line_start":246,"line_end":246,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458704,"byte_end":458707,"line_start":267,"line_end":267,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::streaming::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458178,"byte_end":458211,"line_start":255,"line_end":255,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458212,"byte_end":458215,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458216,"byte_end":458317,"line_start":257,"line_end":257,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458318,"byte_end":458331,"line_start":258,"line_end":258,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458332,"byte_end":458335,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458336,"byte_end":458343,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458344,"byte_end":458400,"line_start":261,"line_end":261,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::tab;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458401,"byte_end":458442,"line_start":262,"line_end":262,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458443,"byte_end":458508,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458509,"byte_end":458604,"line_start":264,"line_end":264,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458605,"byte_end":458688,"line_start":265,"line_end":265,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458689,"byte_end":458696,"line_start":266,"line_end":266,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459420,"byte_end":459427,"line_start":286,"line_end":286,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::streaming::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458891,"byte_end":458957,"line_start":275,"line_end":275,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":458958,"byte_end":459027,"line_start":276,"line_end":276,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459028,"byte_end":459031,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459032,"byte_end":459133,"line_start":278,"line_end":278,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459134,"byte_end":459147,"line_start":279,"line_end":279,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459148,"byte_end":459151,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459152,"byte_end":459159,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459160,"byte_end":459247,"line_start":282,"line_end":282,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459248,"byte_end":459316,"line_start":283,"line_end":283,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459317,"byte_end":459404,"line_start":284,"line_end":284,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459405,"byte_end":459412,"line_start":285,"line_end":285,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460503,"byte_end":460509,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::streaming::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459869,"byte_end":459958,"line_start":301,"line_end":301,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459959,"byte_end":459962,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":459963,"byte_end":460064,"line_start":303,"line_end":303,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460065,"byte_end":460134,"line_start":304,"line_end":304,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460135,"byte_end":460148,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460149,"byte_end":460152,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460153,"byte_end":460160,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460161,"byte_end":460217,"line_start":308,"line_end":308,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460218,"byte_end":460262,"line_start":309,"line_end":309,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460263,"byte_end":460333,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460334,"byte_end":460400,"line_start":311,"line_end":311,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460401,"byte_end":460487,"line_start":312,"line_end":312,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460488,"byte_end":460495,"line_start":313,"line_end":313,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461353,"byte_end":461359,"line_start":335,"line_end":335,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::streaming::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460693,"byte_end":460781,"line_start":322,"line_end":322,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460782,"byte_end":460785,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460786,"byte_end":460887,"line_start":324,"line_end":324,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460888,"byte_end":460957,"line_start":325,"line_end":325,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460958,"byte_end":460971,"line_start":326,"line_end":326,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460972,"byte_end":460975,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460976,"byte_end":460983,"line_start":328,"line_end":328,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":460984,"byte_end":461040,"line_start":329,"line_end":329,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461041,"byte_end":461085,"line_start":330,"line_end":330,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461086,"byte_end":461156,"line_start":331,"line_end":331,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461157,"byte_end":461250,"line_start":332,"line_end":332,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461251,"byte_end":461337,"line_start":333,"line_end":333,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461338,"byte_end":461345,"line_start":334,"line_end":334,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462163,"byte_end":462169,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::streaming::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461562,"byte_end":461621,"line_start":343,"line_end":343,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461622,"byte_end":461625,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461626,"byte_end":461727,"line_start":345,"line_end":345,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461728,"byte_end":461792,"line_start":346,"line_end":346,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461793,"byte_end":461806,"line_start":347,"line_end":347,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461807,"byte_end":461810,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461811,"byte_end":461818,"line_start":349,"line_end":349,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461819,"byte_end":461875,"line_start":350,"line_end":350,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461876,"byte_end":461920,"line_start":351,"line_end":351,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461921,"byte_end":461989,"line_start":352,"line_end":352,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":461990,"byte_end":462060,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462061,"byte_end":462147,"line_start":354,"line_end":354,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462148,"byte_end":462155,"line_start":355,"line_end":355,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462980,"byte_end":462986,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::streaming::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462357,"byte_end":462415,"line_start":364,"line_end":364,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462416,"byte_end":462419,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462420,"byte_end":462521,"line_start":366,"line_end":366,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462522,"byte_end":462586,"line_start":367,"line_end":367,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462587,"byte_end":462600,"line_start":368,"line_end":368,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462601,"byte_end":462604,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462605,"byte_end":462612,"line_start":370,"line_end":370,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462613,"byte_end":462669,"line_start":371,"line_end":371,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462670,"byte_end":462714,"line_start":372,"line_end":372,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462715,"byte_end":462783,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462784,"byte_end":462877,"line_start":374,"line_end":374,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462878,"byte_end":462964,"line_start":375,"line_end":375,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":462965,"byte_end":462972,"line_start":376,"line_end":376,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463846,"byte_end":463856,"line_start":398,"line_end":398,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::streaming::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463193,"byte_end":463274,"line_start":385,"line_end":385,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463275,"byte_end":463278,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463279,"byte_end":463380,"line_start":387,"line_end":387,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463381,"byte_end":463457,"line_start":388,"line_end":388,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463458,"byte_end":463471,"line_start":389,"line_end":389,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463472,"byte_end":463475,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463476,"byte_end":463483,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463484,"byte_end":463540,"line_start":392,"line_end":392,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463541,"byte_end":463589,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463590,"byte_end":463664,"line_start":394,"line_end":394,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463665,"byte_end":463739,"line_start":395,"line_end":395,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463740,"byte_end":463830,"line_start":396,"line_end":396,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":463831,"byte_end":463838,"line_start":397,"line_end":397,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464722,"byte_end":464732,"line_start":419,"line_end":419,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::streaming::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464044,"byte_end":464124,"line_start":406,"line_end":406,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464125,"byte_end":464128,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464129,"byte_end":464230,"line_start":408,"line_end":408,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464231,"byte_end":464307,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464308,"byte_end":464321,"line_start":410,"line_end":410,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464322,"byte_end":464325,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464326,"byte_end":464333,"line_start":412,"line_end":412,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464334,"byte_end":464390,"line_start":413,"line_end":413,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464391,"byte_end":464439,"line_start":414,"line_end":414,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464440,"byte_end":464514,"line_start":415,"line_end":415,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464515,"byte_end":464615,"line_start":416,"line_end":416,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464616,"byte_end":464706,"line_start":417,"line_end":417,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464707,"byte_end":464714,"line_start":418,"line_end":418,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465557,"byte_end":465567,"line_start":440,"line_end":440,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::streaming::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464942,"byte_end":464991,"line_start":427,"line_end":427,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464992,"byte_end":464995,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":464996,"byte_end":465097,"line_start":429,"line_end":429,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465098,"byte_end":465168,"line_start":430,"line_end":430,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465169,"byte_end":465182,"line_start":431,"line_end":431,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465183,"byte_end":465186,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465187,"byte_end":465194,"line_start":433,"line_end":433,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465195,"byte_end":465251,"line_start":434,"line_end":434,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465252,"byte_end":465300,"line_start":435,"line_end":435,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465301,"byte_end":465375,"line_start":436,"line_end":436,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465376,"byte_end":465450,"line_start":437,"line_end":437,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465451,"byte_end":465541,"line_start":438,"line_end":438,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465542,"byte_end":465549,"line_start":439,"line_end":439,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466395,"byte_end":466405,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::streaming::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465755,"byte_end":465803,"line_start":448,"line_end":448,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465804,"byte_end":465807,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465808,"byte_end":465909,"line_start":450,"line_end":450,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465910,"byte_end":465980,"line_start":451,"line_end":451,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465981,"byte_end":465994,"line_start":452,"line_end":452,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465995,"byte_end":465998,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":465999,"byte_end":466006,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466007,"byte_end":466063,"line_start":455,"line_end":455,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466064,"byte_end":466112,"line_start":456,"line_end":456,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466113,"byte_end":466187,"line_start":457,"line_end":457,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466188,"byte_end":466288,"line_start":458,"line_end":458,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466289,"byte_end":466379,"line_start":459,"line_end":459,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466380,"byte_end":466387,"line_start":460,"line_end":460,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467286,"byte_end":467299,"line_start":482,"line_end":482,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::streaming::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466615,"byte_end":466699,"line_start":469,"line_end":469,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466700,"byte_end":466703,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466704,"byte_end":466805,"line_start":471,"line_end":471,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466806,"byte_end":466879,"line_start":472,"line_end":472,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466880,"byte_end":466893,"line_start":473,"line_end":473,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466894,"byte_end":466897,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466898,"byte_end":466905,"line_start":475,"line_end":475,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466906,"byte_end":466962,"line_start":476,"line_end":476,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":466963,"byte_end":467014,"line_start":477,"line_end":477,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467015,"byte_end":467096,"line_start":478,"line_end":478,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467097,"byte_end":467176,"line_start":479,"line_end":479,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467177,"byte_end":467270,"line_start":480,"line_end":480,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467271,"byte_end":467278,"line_start":481,"line_end":481,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468186,"byte_end":468199,"line_start":503,"line_end":503,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::streaming::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467486,"byte_end":467569,"line_start":490,"line_end":490,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467570,"byte_end":467573,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467574,"byte_end":467675,"line_start":492,"line_end":492,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467676,"byte_end":467749,"line_start":493,"line_end":493,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467750,"byte_end":467763,"line_start":494,"line_end":494,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467764,"byte_end":467767,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467768,"byte_end":467775,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467776,"byte_end":467832,"line_start":497,"line_end":497,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467833,"byte_end":467884,"line_start":498,"line_end":498,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467885,"byte_end":467966,"line_start":499,"line_end":499,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":467967,"byte_end":468076,"line_start":500,"line_end":500,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468077,"byte_end":468170,"line_start":501,"line_end":501,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468171,"byte_end":468178,"line_start":502,"line_end":502,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469004,"byte_end":469010,"line_start":524,"line_end":524,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::streaming::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468412,"byte_end":468456,"line_start":511,"line_end":511,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468457,"byte_end":468460,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468461,"byte_end":468562,"line_start":513,"line_end":513,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468563,"byte_end":468627,"line_start":514,"line_end":514,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468628,"byte_end":468641,"line_start":515,"line_end":515,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468642,"byte_end":468645,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468646,"byte_end":468653,"line_start":517,"line_end":517,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468654,"byte_end":468710,"line_start":518,"line_end":518,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468711,"byte_end":468755,"line_start":519,"line_end":519,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468756,"byte_end":468830,"line_start":520,"line_end":520,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468831,"byte_end":468901,"line_start":521,"line_end":521,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468902,"byte_end":468988,"line_start":522,"line_end":522,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":468989,"byte_end":468996,"line_start":523,"line_end":523,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469861,"byte_end":469867,"line_start":547,"line_end":547,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::streaming::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469247,"byte_end":469290,"line_start":534,"line_end":534,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469291,"byte_end":469294,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469295,"byte_end":469396,"line_start":536,"line_end":536,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469397,"byte_end":469461,"line_start":537,"line_end":537,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469462,"byte_end":469475,"line_start":538,"line_end":538,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469476,"byte_end":469479,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469480,"byte_end":469487,"line_start":540,"line_end":540,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469488,"byte_end":469544,"line_start":541,"line_end":541,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469545,"byte_end":469589,"line_start":542,"line_end":542,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469590,"byte_end":469664,"line_start":543,"line_end":543,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469665,"byte_end":469758,"line_start":544,"line_end":544,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469759,"byte_end":469845,"line_start":545,"line_end":545,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":469846,"byte_end":469853,"line_start":546,"line_end":546,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470793,"byte_end":470804,"line_start":574,"line_end":574,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::streaming::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470143,"byte_end":470217,"line_start":561,"line_end":561,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470218,"byte_end":470221,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470222,"byte_end":470323,"line_start":563,"line_end":563,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470324,"byte_end":470388,"line_start":564,"line_end":564,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470389,"byte_end":470402,"line_start":565,"line_end":565,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470403,"byte_end":470406,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470407,"byte_end":470414,"line_start":567,"line_end":567,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470415,"byte_end":470471,"line_start":568,"line_end":568,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace0;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470472,"byte_end":470521,"line_start":569,"line_end":569,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470522,"byte_end":470609,"line_start":570,"line_end":570,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470610,"byte_end":470685,"line_start":571,"line_end":571,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470686,"byte_end":470777,"line_start":572,"line_end":572,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":470778,"byte_end":470785,"line_start":573,"line_end":573,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471745,"byte_end":471756,"line_start":598,"line_end":598,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::streaming::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471068,"byte_end":471141,"line_start":585,"line_end":585,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471142,"byte_end":471145,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471146,"byte_end":471247,"line_start":587,"line_end":587,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471248,"byte_end":471312,"line_start":588,"line_end":588,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471313,"byte_end":471326,"line_start":589,"line_end":589,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471327,"byte_end":471330,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471331,"byte_end":471338,"line_start":591,"line_end":591,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471339,"byte_end":471395,"line_start":592,"line_end":592,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace1;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471396,"byte_end":471445,"line_start":593,"line_end":593,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471446,"byte_end":471533,"line_start":594,"line_end":594,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471534,"byte_end":471637,"line_start":595,"line_end":595,"column_start":1,"column_end":104}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471638,"byte_end":471729,"line_start":596,"line_end":596,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/streaming.rs","byte_start":471730,"byte_end":471737,"line_start":597,"line_end":597,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408324,"byte_end":408337,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::character::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408093,"byte_end":408140,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408141,"byte_end":408144,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408145,"byte_end":408158,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408159,"byte_end":408162,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408163,"byte_end":408170,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphabetic;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408171,"byte_end":408211,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_alphabetic(b'9'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408212,"byte_end":408255,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(is_alphabetic(b'a'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408256,"byte_end":408298,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408299,"byte_end":408306,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408307,"byte_end":408316,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408629,"byte_end":408637,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::character::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408423,"byte_end":408460,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408461,"byte_end":408464,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408465,"byte_end":408478,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408479,"byte_end":408482,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408483,"byte_end":408490,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_digit;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408491,"byte_end":408526,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_digit(b'a'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408527,"byte_end":408565,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(is_digit(b'9'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408566,"byte_end":408603,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408604,"byte_end":408611,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408612,"byte_end":408621,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409005,"byte_end":409017,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::character::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408689,"byte_end":408740,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408741,"byte_end":408744,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408745,"byte_end":408758,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408759,"byte_end":408762,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408763,"byte_end":408770,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_hex_digit;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408771,"byte_end":408810,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_hex_digit(b'a'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408811,"byte_end":408852,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'9'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408853,"byte_end":408894,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'A'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408895,"byte_end":408936,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'x'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408937,"byte_end":408979,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408980,"byte_end":408987,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408988,"byte_end":408997,"line_start":50,"line_end":50,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409402,"byte_end":409414,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::character::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409135,"byte_end":409178,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409179,"byte_end":409182,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409183,"byte_end":409196,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409197,"byte_end":409200,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409201,"byte_end":409208,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_oct_digit;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409209,"byte_end":409248,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_oct_digit(b'a'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409249,"byte_end":409291,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'9'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409292,"byte_end":409334,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'6'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409335,"byte_end":409376,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409377,"byte_end":409384,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409385,"byte_end":409394,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409800,"byte_end":409815,"line_start":82,"line_end":82,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::character::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409466,"byte_end":409520,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409521,"byte_end":409524,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409525,"byte_end":409538,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409539,"byte_end":409542,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409543,"byte_end":409550,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphanumeric;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409551,"byte_end":409593,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_alphanumeric(b'-'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409594,"byte_end":409639,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(is_alphanumeric(b'a'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409640,"byte_end":409684,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'9'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409685,"byte_end":409729,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'A'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409730,"byte_end":409774,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409775,"byte_end":409782,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409783,"byte_end":409792,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410164,"byte_end":410172,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_space","qualname":"::character::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409876,"byte_end":409915,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409916,"byte_end":409919,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409920,"byte_end":409933,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409934,"byte_end":409937,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409938,"byte_end":409945,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_space;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409946,"byte_end":409981,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_space(b'\\n'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":409982,"byte_end":410021,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b'\\r'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410022,"byte_end":410061,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b' '), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410062,"byte_end":410099,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_space(b'\\t'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410100,"byte_end":410138,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410139,"byte_end":410146,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410147,"byte_end":410156,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410523,"byte_end":410533,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"is_newline","qualname":"::character::is_newline","value":"pub fn is_newline(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII newline: \\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII newline: \\n","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410225,"byte_end":410263,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410264,"byte_end":410267,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410268,"byte_end":410281,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410282,"byte_end":410285,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410286,"byte_end":410293,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_newline;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410294,"byte_end":410331,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_newline(b'\\n'), true);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410332,"byte_end":410372,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\r'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410373,"byte_end":410414,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_newline(b' '), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410415,"byte_end":410455,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\t'), false);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410456,"byte_end":410497,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410498,"byte_end":410505,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":410506,"byte_end":410515,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2607},{"krate":0,"index":2812},{"krate":0,"index":6604},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6619},{"krate":0,"index":6621}],"decl_id":null,"docs":" Parsers recognizing numbers\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16976,"byte_end":16988,"line_start":520,"line_end":520,"column_start":1,"column_end":13}},{"value":"/ Parsers recognizing numbers","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497189,"byte_end":497220,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::number::complete","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2778},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":6568},{"krate":0,"index":2806},{"krate":0,"index":2809}],"decl_id":null,"docs":" Parsers recognizing numbers, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, complete input version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":507441,"byte_end":507496,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508399,"byte_end":508404,"line_start":30,"line_end":30,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::complete::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":507913,"byte_end":507955,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":507956,"byte_end":507959,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":507960,"byte_end":508035,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508036,"byte_end":508047,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508048,"byte_end":508095,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508096,"byte_end":508124,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508125,"byte_end":508162,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508163,"byte_end":508166,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508167,"byte_end":508189,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/   be_u8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508190,"byte_end":508204,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508205,"byte_end":508211,"line_start":24,"line_end":24,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508212,"byte_end":508215,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508216,"byte_end":508295,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508296,"byte_end":508373,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508374,"byte_end":508381,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508382,"byte_end":508391,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509257,"byte_end":509263,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::complete::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508752,"byte_end":508805,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508806,"byte_end":508809,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508810,"byte_end":508885,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508886,"byte_end":508897,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508898,"byte_end":508945,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508946,"byte_end":508974,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":508975,"byte_end":509013,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509014,"byte_end":509017,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509018,"byte_end":509040,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/   be_u16(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509041,"byte_end":509056,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509057,"byte_end":509063,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509064,"byte_end":509067,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509068,"byte_end":509145,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509146,"byte_end":509231,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509232,"byte_end":509239,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509240,"byte_end":509249,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510189,"byte_end":510195,"line_start":93,"line_end":93,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::complete::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509679,"byte_end":509731,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509732,"byte_end":509735,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509736,"byte_end":509811,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509812,"byte_end":509823,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509824,"byte_end":509871,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509872,"byte_end":509900,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509901,"byte_end":509939,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509940,"byte_end":509943,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509944,"byte_end":509966,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/   be_u24(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509967,"byte_end":509982,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509983,"byte_end":509989,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509990,"byte_end":509993,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":509994,"byte_end":510077,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510078,"byte_end":510163,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510164,"byte_end":510171,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510172,"byte_end":510181,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511128,"byte_end":511134,"line_start":126,"line_end":126,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::complete::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510611,"byte_end":510664,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510665,"byte_end":510668,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510669,"byte_end":510744,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510745,"byte_end":510756,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510757,"byte_end":510804,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510805,"byte_end":510833,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510834,"byte_end":510872,"line_start":116,"line_end":116,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510873,"byte_end":510876,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510877,"byte_end":510899,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/   be_u32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510900,"byte_end":510915,"line_start":119,"line_end":119,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510916,"byte_end":510922,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510923,"byte_end":510926,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":510927,"byte_end":511016,"line_start":122,"line_end":122,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511017,"byte_end":511102,"line_start":123,"line_end":123,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511103,"byte_end":511110,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511111,"byte_end":511120,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512091,"byte_end":512097,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::complete::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511550,"byte_end":511603,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511604,"byte_end":511607,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511608,"byte_end":511683,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511684,"byte_end":511695,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511696,"byte_end":511743,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511744,"byte_end":511772,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511773,"byte_end":511811,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511812,"byte_end":511815,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511816,"byte_end":511838,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/   be_u64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511839,"byte_end":511854,"line_start":152,"line_end":152,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511855,"byte_end":511861,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511862,"byte_end":511865,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511866,"byte_end":511979,"line_start":155,"line_end":155,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":511980,"byte_end":512065,"line_start":156,"line_end":156,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512066,"byte_end":512073,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512074,"byte_end":512083,"line_start":158,"line_end":158,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513125,"byte_end":513132,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::complete::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512513,"byte_end":512567,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512568,"byte_end":512571,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512572,"byte_end":512647,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512648,"byte_end":512659,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512660,"byte_end":512707,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512708,"byte_end":512736,"line_start":181,"line_end":181,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512737,"byte_end":512776,"line_start":182,"line_end":182,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512777,"byte_end":512780,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512781,"byte_end":512803,"line_start":184,"line_end":184,"column_start":1,"column_end":23}},{"value":"/   be_u128(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512804,"byte_end":512820,"line_start":185,"line_end":185,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512821,"byte_end":512827,"line_start":186,"line_end":186,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512828,"byte_end":512831,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512832,"byte_end":512993,"line_start":188,"line_end":188,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":512994,"byte_end":513079,"line_start":189,"line_end":189,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513080,"byte_end":513087,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513088,"byte_end":513097,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513098,"byte_end":513117,"line_start":192,"line_end":192,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514035,"byte_end":514040,"line_start":226,"line_end":226,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::complete::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513552,"byte_end":513591,"line_start":210,"line_end":210,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513592,"byte_end":513595,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513596,"byte_end":513671,"line_start":212,"line_end":212,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513672,"byte_end":513683,"line_start":213,"line_end":213,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513684,"byte_end":513731,"line_start":214,"line_end":214,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513732,"byte_end":513760,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513761,"byte_end":513798,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513799,"byte_end":513802,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513803,"byte_end":513825,"line_start":218,"line_end":218,"column_start":1,"column_end":23}},{"value":"/   be_i8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513826,"byte_end":513840,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513841,"byte_end":513847,"line_start":220,"line_end":220,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513848,"byte_end":513851,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513852,"byte_end":513931,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":513932,"byte_end":514009,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514010,"byte_end":514017,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514018,"byte_end":514027,"line_start":225,"line_end":225,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514708,"byte_end":514714,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::complete::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514205,"byte_end":514256,"line_start":233,"line_end":233,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514257,"byte_end":514260,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514261,"byte_end":514336,"line_start":235,"line_end":235,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514337,"byte_end":514348,"line_start":236,"line_end":236,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514349,"byte_end":514396,"line_start":237,"line_end":237,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514397,"byte_end":514425,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514426,"byte_end":514464,"line_start":239,"line_end":239,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514465,"byte_end":514468,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514469,"byte_end":514491,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"/   be_i16(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514492,"byte_end":514507,"line_start":242,"line_end":242,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514508,"byte_end":514514,"line_start":243,"line_end":243,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514515,"byte_end":514518,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514519,"byte_end":514596,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514597,"byte_end":514682,"line_start":246,"line_end":246,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514683,"byte_end":514690,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514691,"byte_end":514700,"line_start":248,"line_end":248,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515391,"byte_end":515397,"line_start":272,"line_end":272,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::complete::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514882,"byte_end":514933,"line_start":256,"line_end":256,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514934,"byte_end":514937,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":514938,"byte_end":515013,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515014,"byte_end":515025,"line_start":259,"line_end":259,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515026,"byte_end":515073,"line_start":260,"line_end":260,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515074,"byte_end":515102,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515103,"byte_end":515141,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515142,"byte_end":515145,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515146,"byte_end":515168,"line_start":264,"line_end":264,"column_start":1,"column_end":23}},{"value":"/   be_i24(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515169,"byte_end":515184,"line_start":265,"line_end":265,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515185,"byte_end":515191,"line_start":266,"line_end":266,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515192,"byte_end":515195,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515196,"byte_end":515279,"line_start":268,"line_end":268,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515280,"byte_end":515365,"line_start":269,"line_end":269,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515366,"byte_end":515373,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515374,"byte_end":515383,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516230,"byte_end":516236,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::complete::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515715,"byte_end":515766,"line_start":284,"line_end":284,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515767,"byte_end":515770,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Teturns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515771,"byte_end":515846,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515847,"byte_end":515858,"line_start":287,"line_end":287,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515859,"byte_end":515906,"line_start":288,"line_end":288,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515907,"byte_end":515935,"line_start":289,"line_end":289,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515936,"byte_end":515974,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515975,"byte_end":515978,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":515979,"byte_end":516001,"line_start":292,"line_end":292,"column_start":1,"column_end":23}},{"value":"/   be_i32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516002,"byte_end":516017,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516018,"byte_end":516024,"line_start":294,"line_end":294,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516025,"byte_end":516028,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516029,"byte_end":516118,"line_start":296,"line_end":296,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516119,"byte_end":516204,"line_start":297,"line_end":297,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516205,"byte_end":516212,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516213,"byte_end":516222,"line_start":299,"line_end":299,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516943,"byte_end":516949,"line_start":323,"line_end":323,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::complete::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516404,"byte_end":516455,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516456,"byte_end":516459,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516460,"byte_end":516535,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516536,"byte_end":516547,"line_start":310,"line_end":310,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516548,"byte_end":516595,"line_start":311,"line_end":311,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516596,"byte_end":516624,"line_start":312,"line_end":312,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516625,"byte_end":516663,"line_start":313,"line_end":313,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516664,"byte_end":516667,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516668,"byte_end":516690,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/   be_i64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516691,"byte_end":516706,"line_start":316,"line_end":316,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516707,"byte_end":516713,"line_start":317,"line_end":317,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516714,"byte_end":516717,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516718,"byte_end":516831,"line_start":319,"line_end":319,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516832,"byte_end":516917,"line_start":320,"line_end":320,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516918,"byte_end":516925,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":516926,"byte_end":516935,"line_start":322,"line_end":322,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517727,"byte_end":517734,"line_start":347,"line_end":347,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::complete::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517117,"byte_end":517169,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517170,"byte_end":517173,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517174,"byte_end":517249,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517250,"byte_end":517261,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517262,"byte_end":517309,"line_start":334,"line_end":334,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517310,"byte_end":517338,"line_start":335,"line_end":335,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517339,"byte_end":517378,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517379,"byte_end":517382,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517383,"byte_end":517405,"line_start":338,"line_end":338,"column_start":1,"column_end":23}},{"value":"/   be_i128(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517406,"byte_end":517422,"line_start":339,"line_end":339,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517423,"byte_end":517429,"line_start":340,"line_end":340,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517430,"byte_end":517433,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517434,"byte_end":517595,"line_start":342,"line_end":342,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517596,"byte_end":517681,"line_start":343,"line_end":343,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517682,"byte_end":517689,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517690,"byte_end":517699,"line_start":345,"line_end":345,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517700,"byte_end":517719,"line_start":346,"line_end":346,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518391,"byte_end":518396,"line_start":370,"line_end":370,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::complete::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517905,"byte_end":517947,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517948,"byte_end":517951,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":517952,"byte_end":518027,"line_start":356,"line_end":356,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518028,"byte_end":518039,"line_start":357,"line_end":357,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518040,"byte_end":518087,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518088,"byte_end":518116,"line_start":359,"line_end":359,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518117,"byte_end":518154,"line_start":360,"line_end":360,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518155,"byte_end":518158,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518159,"byte_end":518181,"line_start":362,"line_end":362,"column_start":1,"column_end":23}},{"value":"/   le_u8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518182,"byte_end":518196,"line_start":363,"line_end":363,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518197,"byte_end":518203,"line_start":364,"line_end":364,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518204,"byte_end":518207,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518208,"byte_end":518287,"line_start":366,"line_end":366,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518288,"byte_end":518365,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518366,"byte_end":518373,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518374,"byte_end":518383,"line_start":369,"line_end":369,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519252,"byte_end":519258,"line_start":400,"line_end":400,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::complete::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518744,"byte_end":518800,"line_start":384,"line_end":384,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518801,"byte_end":518804,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518805,"byte_end":518880,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518881,"byte_end":518892,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518893,"byte_end":518940,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518941,"byte_end":518969,"line_start":389,"line_end":389,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":518970,"byte_end":519008,"line_start":390,"line_end":390,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519009,"byte_end":519012,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519013,"byte_end":519035,"line_start":392,"line_end":392,"column_start":1,"column_end":23}},{"value":"/   le_u16(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519036,"byte_end":519051,"line_start":393,"line_end":393,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519052,"byte_end":519058,"line_start":394,"line_end":394,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519059,"byte_end":519062,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519063,"byte_end":519140,"line_start":396,"line_end":396,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519141,"byte_end":519226,"line_start":397,"line_end":397,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519227,"byte_end":519234,"line_start":398,"line_end":398,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519235,"byte_end":519244,"line_start":399,"line_end":399,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520200,"byte_end":520206,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::complete::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519687,"byte_end":519742,"line_start":417,"line_end":417,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519743,"byte_end":519746,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519747,"byte_end":519822,"line_start":419,"line_end":419,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519823,"byte_end":519834,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519835,"byte_end":519882,"line_start":421,"line_end":421,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519883,"byte_end":519911,"line_start":422,"line_end":422,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519912,"byte_end":519950,"line_start":423,"line_end":423,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519951,"byte_end":519954,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519955,"byte_end":519977,"line_start":425,"line_end":425,"column_start":1,"column_end":23}},{"value":"/   le_u24(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519978,"byte_end":519993,"line_start":426,"line_end":426,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":519994,"byte_end":520000,"line_start":427,"line_end":427,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520001,"byte_end":520004,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520005,"byte_end":520088,"line_start":429,"line_end":429,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520089,"byte_end":520174,"line_start":430,"line_end":430,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520175,"byte_end":520182,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520183,"byte_end":520192,"line_start":432,"line_end":432,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521155,"byte_end":521161,"line_start":466,"line_end":466,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::complete::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520635,"byte_end":520691,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520692,"byte_end":520695,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520696,"byte_end":520771,"line_start":452,"line_end":452,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520772,"byte_end":520783,"line_start":453,"line_end":453,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520784,"byte_end":520831,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520832,"byte_end":520860,"line_start":455,"line_end":455,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520861,"byte_end":520899,"line_start":456,"line_end":456,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520900,"byte_end":520903,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520904,"byte_end":520926,"line_start":458,"line_end":458,"column_start":1,"column_end":23}},{"value":"/   le_u32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520927,"byte_end":520942,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520943,"byte_end":520949,"line_start":460,"line_end":460,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520950,"byte_end":520953,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":520954,"byte_end":521043,"line_start":462,"line_end":462,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521044,"byte_end":521129,"line_start":463,"line_end":463,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521130,"byte_end":521137,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521138,"byte_end":521147,"line_start":465,"line_end":465,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522134,"byte_end":522140,"line_start":499,"line_end":499,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::complete::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521590,"byte_end":521646,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521647,"byte_end":521650,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521651,"byte_end":521726,"line_start":485,"line_end":485,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521727,"byte_end":521738,"line_start":486,"line_end":486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521739,"byte_end":521786,"line_start":487,"line_end":487,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521787,"byte_end":521815,"line_start":488,"line_end":488,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521816,"byte_end":521854,"line_start":489,"line_end":489,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521855,"byte_end":521858,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521859,"byte_end":521881,"line_start":491,"line_end":491,"column_start":1,"column_end":23}},{"value":"/   le_u64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521882,"byte_end":521897,"line_start":492,"line_end":492,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521898,"byte_end":521904,"line_start":493,"line_end":493,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521905,"byte_end":521908,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":521909,"byte_end":522022,"line_start":495,"line_end":495,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522023,"byte_end":522108,"line_start":496,"line_end":496,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522109,"byte_end":522116,"line_start":497,"line_end":497,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522117,"byte_end":522126,"line_start":498,"line_end":498,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523184,"byte_end":523191,"line_start":533,"line_end":533,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::complete::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522569,"byte_end":522626,"line_start":516,"line_end":516,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522627,"byte_end":522630,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522631,"byte_end":522706,"line_start":518,"line_end":518,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522707,"byte_end":522718,"line_start":519,"line_end":519,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522719,"byte_end":522766,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522767,"byte_end":522795,"line_start":521,"line_end":521,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522796,"byte_end":522835,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522836,"byte_end":522839,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522840,"byte_end":522862,"line_start":524,"line_end":524,"column_start":1,"column_end":23}},{"value":"/   le_u128(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522863,"byte_end":522879,"line_start":525,"line_end":525,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522880,"byte_end":522886,"line_start":526,"line_end":526,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522887,"byte_end":522890,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":522891,"byte_end":523052,"line_start":528,"line_end":528,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523053,"byte_end":523138,"line_start":529,"line_end":529,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523139,"byte_end":523146,"line_start":530,"line_end":530,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523147,"byte_end":523156,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523157,"byte_end":523176,"line_start":532,"line_end":532,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524107,"byte_end":524112,"line_start":566,"line_end":566,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::complete::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523624,"byte_end":523663,"line_start":550,"line_end":550,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523664,"byte_end":523667,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523668,"byte_end":523743,"line_start":552,"line_end":552,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523744,"byte_end":523755,"line_start":553,"line_end":553,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523756,"byte_end":523803,"line_start":554,"line_end":554,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523804,"byte_end":523832,"line_start":555,"line_end":555,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523833,"byte_end":523870,"line_start":556,"line_end":556,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523871,"byte_end":523874,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523875,"byte_end":523897,"line_start":558,"line_end":558,"column_start":1,"column_end":23}},{"value":"/   le_i8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523898,"byte_end":523912,"line_start":559,"line_end":559,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523913,"byte_end":523919,"line_start":560,"line_end":560,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523920,"byte_end":523923,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":523924,"byte_end":524003,"line_start":562,"line_end":562,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524004,"byte_end":524081,"line_start":563,"line_end":563,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524082,"byte_end":524089,"line_start":564,"line_end":564,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524090,"byte_end":524099,"line_start":565,"line_end":565,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524783,"byte_end":524789,"line_start":589,"line_end":589,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::complete::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524277,"byte_end":524331,"line_start":573,"line_end":573,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524332,"byte_end":524335,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524336,"byte_end":524411,"line_start":575,"line_end":575,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524412,"byte_end":524423,"line_start":576,"line_end":576,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524424,"byte_end":524471,"line_start":577,"line_end":577,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524472,"byte_end":524500,"line_start":578,"line_end":578,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524501,"byte_end":524539,"line_start":579,"line_end":579,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524540,"byte_end":524543,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524544,"byte_end":524566,"line_start":581,"line_end":581,"column_start":1,"column_end":23}},{"value":"/   le_i16(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524567,"byte_end":524582,"line_start":582,"line_end":582,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524583,"byte_end":524589,"line_start":583,"line_end":583,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524590,"byte_end":524593,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524594,"byte_end":524671,"line_start":585,"line_end":585,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524672,"byte_end":524757,"line_start":586,"line_end":586,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524758,"byte_end":524765,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524766,"byte_end":524775,"line_start":588,"line_end":588,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525469,"byte_end":525475,"line_start":612,"line_end":612,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::complete::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":524957,"byte_end":525011,"line_start":596,"line_end":596,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525012,"byte_end":525015,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525016,"byte_end":525091,"line_start":598,"line_end":598,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525092,"byte_end":525103,"line_start":599,"line_end":599,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525104,"byte_end":525151,"line_start":600,"line_end":600,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525152,"byte_end":525180,"line_start":601,"line_end":601,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525181,"byte_end":525219,"line_start":602,"line_end":602,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525220,"byte_end":525223,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525224,"byte_end":525246,"line_start":604,"line_end":604,"column_start":1,"column_end":23}},{"value":"/   le_i24(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525247,"byte_end":525262,"line_start":605,"line_end":605,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525263,"byte_end":525269,"line_start":606,"line_end":606,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525270,"byte_end":525273,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525274,"byte_end":525357,"line_start":608,"line_end":608,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525358,"byte_end":525443,"line_start":609,"line_end":609,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525444,"byte_end":525451,"line_start":610,"line_end":610,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525452,"byte_end":525461,"line_start":611,"line_end":611,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526311,"byte_end":526317,"line_start":640,"line_end":640,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::complete::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525793,"byte_end":525847,"line_start":624,"line_end":624,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525848,"byte_end":525851,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525852,"byte_end":525927,"line_start":626,"line_end":626,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525928,"byte_end":525939,"line_start":627,"line_end":627,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525940,"byte_end":525987,"line_start":628,"line_end":628,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":525988,"byte_end":526016,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526017,"byte_end":526055,"line_start":630,"line_end":630,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526056,"byte_end":526059,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526060,"byte_end":526082,"line_start":632,"line_end":632,"column_start":1,"column_end":23}},{"value":"/   le_i32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526083,"byte_end":526098,"line_start":633,"line_end":633,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526099,"byte_end":526105,"line_start":634,"line_end":634,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526106,"byte_end":526109,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526110,"byte_end":526199,"line_start":636,"line_end":636,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526200,"byte_end":526285,"line_start":637,"line_end":637,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526286,"byte_end":526293,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526294,"byte_end":526303,"line_start":639,"line_end":639,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527027,"byte_end":527033,"line_start":663,"line_end":663,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::complete::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526485,"byte_end":526539,"line_start":647,"line_end":647,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526540,"byte_end":526543,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526544,"byte_end":526619,"line_start":649,"line_end":649,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526620,"byte_end":526631,"line_start":650,"line_end":650,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526632,"byte_end":526679,"line_start":651,"line_end":651,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526680,"byte_end":526708,"line_start":652,"line_end":652,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526709,"byte_end":526747,"line_start":653,"line_end":653,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526748,"byte_end":526751,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526752,"byte_end":526774,"line_start":655,"line_end":655,"column_start":1,"column_end":23}},{"value":"/   le_i64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526775,"byte_end":526790,"line_start":656,"line_end":656,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526791,"byte_end":526797,"line_start":657,"line_end":657,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526798,"byte_end":526801,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526802,"byte_end":526915,"line_start":659,"line_end":659,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":526916,"byte_end":527001,"line_start":660,"line_end":660,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527002,"byte_end":527009,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527010,"byte_end":527019,"line_start":662,"line_end":662,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527814,"byte_end":527821,"line_start":687,"line_end":687,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::complete::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527201,"byte_end":527256,"line_start":670,"line_end":670,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527257,"byte_end":527260,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527261,"byte_end":527336,"line_start":672,"line_end":672,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527337,"byte_end":527348,"line_start":673,"line_end":673,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527349,"byte_end":527396,"line_start":674,"line_end":674,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527397,"byte_end":527425,"line_start":675,"line_end":675,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527426,"byte_end":527465,"line_start":676,"line_end":676,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527466,"byte_end":527469,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527470,"byte_end":527492,"line_start":678,"line_end":678,"column_start":1,"column_end":23}},{"value":"/   le_i128(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527493,"byte_end":527509,"line_start":679,"line_end":679,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527510,"byte_end":527516,"line_start":680,"line_end":680,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527517,"byte_end":527520,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527521,"byte_end":527682,"line_start":682,"line_end":682,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527683,"byte_end":527768,"line_start":683,"line_end":683,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527769,"byte_end":527776,"line_start":684,"line_end":684,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527777,"byte_end":527786,"line_start":685,"line_end":685,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527787,"byte_end":527806,"line_start":686,"line_end":686,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528529,"byte_end":528531,"line_start":711,"line_end":711,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::complete::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":527992,"byte_end":528033,"line_start":694,"line_end":694,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528034,"byte_end":528037,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528038,"byte_end":528096,"line_start":696,"line_end":696,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528097,"byte_end":528171,"line_start":697,"line_end":697,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528172,"byte_end":528183,"line_start":698,"line_end":698,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528184,"byte_end":528231,"line_start":699,"line_end":699,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528232,"byte_end":528260,"line_start":700,"line_end":700,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528261,"byte_end":528295,"line_start":701,"line_end":701,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528296,"byte_end":528299,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528300,"byte_end":528322,"line_start":703,"line_end":703,"column_start":1,"column_end":23}},{"value":"/   u8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528323,"byte_end":528334,"line_start":704,"line_end":704,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528335,"byte_end":528341,"line_start":705,"line_end":705,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528342,"byte_end":528345,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528346,"byte_end":528425,"line_start":707,"line_end":707,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528426,"byte_end":528503,"line_start":708,"line_end":708,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528504,"byte_end":528511,"line_start":709,"line_end":709,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528512,"byte_end":528521,"line_start":710,"line_end":710,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529822,"byte_end":529825,"line_start":751,"line_end":751,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::complete::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528879,"byte_end":528921,"line_start":725,"line_end":725,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528922,"byte_end":528925,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":528926,"byte_end":529013,"line_start":727,"line_end":727,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529014,"byte_end":529099,"line_start":728,"line_end":728,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529100,"byte_end":529174,"line_start":729,"line_end":729,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529175,"byte_end":529178,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529179,"byte_end":529190,"line_start":731,"line_end":731,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529191,"byte_end":529238,"line_start":732,"line_end":732,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529239,"byte_end":529267,"line_start":733,"line_end":733,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529268,"byte_end":529303,"line_start":734,"line_end":734,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529304,"byte_end":529307,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529308,"byte_end":529330,"line_start":736,"line_end":736,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529331,"byte_end":529373,"line_start":737,"line_end":737,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529374,"byte_end":529380,"line_start":738,"line_end":738,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529381,"byte_end":529384,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529385,"byte_end":529462,"line_start":740,"line_end":740,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529463,"byte_end":529548,"line_start":741,"line_end":741,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529549,"byte_end":529552,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529553,"byte_end":529575,"line_start":743,"line_end":743,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529576,"byte_end":529621,"line_start":744,"line_end":744,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529622,"byte_end":529628,"line_start":745,"line_end":745,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529629,"byte_end":529632,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529633,"byte_end":529710,"line_start":747,"line_end":747,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529711,"byte_end":529796,"line_start":748,"line_end":748,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529797,"byte_end":529804,"line_start":749,"line_end":749,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":529805,"byte_end":529814,"line_start":750,"line_end":750,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531226,"byte_end":531229,"line_start":790,"line_end":790,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::complete::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530276,"byte_end":530317,"line_start":765,"line_end":765,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530318,"byte_end":530321,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530322,"byte_end":530409,"line_start":767,"line_end":767,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530410,"byte_end":530495,"line_start":768,"line_end":768,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530496,"byte_end":530570,"line_start":769,"line_end":769,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530571,"byte_end":530582,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530583,"byte_end":530630,"line_start":771,"line_end":771,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530631,"byte_end":530659,"line_start":772,"line_end":772,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530660,"byte_end":530695,"line_start":773,"line_end":773,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530696,"byte_end":530699,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530700,"byte_end":530722,"line_start":775,"line_end":775,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530723,"byte_end":530765,"line_start":776,"line_end":776,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530766,"byte_end":530772,"line_start":777,"line_end":777,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530773,"byte_end":530776,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530777,"byte_end":530860,"line_start":779,"line_end":779,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530861,"byte_end":530946,"line_start":780,"line_end":780,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530947,"byte_end":530950,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530951,"byte_end":530973,"line_start":782,"line_end":782,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":530974,"byte_end":531019,"line_start":783,"line_end":783,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531020,"byte_end":531026,"line_start":784,"line_end":784,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531027,"byte_end":531030,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531031,"byte_end":531114,"line_start":786,"line_end":786,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531115,"byte_end":531200,"line_start":787,"line_end":787,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531201,"byte_end":531208,"line_start":788,"line_end":788,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531209,"byte_end":531218,"line_start":789,"line_end":789,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532642,"byte_end":532645,"line_start":829,"line_end":829,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::complete::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531680,"byte_end":531721,"line_start":804,"line_end":804,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531722,"byte_end":531725,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531726,"byte_end":531813,"line_start":806,"line_end":806,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531814,"byte_end":531899,"line_start":807,"line_end":807,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531900,"byte_end":531974,"line_start":808,"line_end":808,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531975,"byte_end":531986,"line_start":809,"line_end":809,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":531987,"byte_end":532034,"line_start":810,"line_end":810,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532035,"byte_end":532063,"line_start":811,"line_end":811,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532064,"byte_end":532099,"line_start":812,"line_end":812,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532100,"byte_end":532103,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532104,"byte_end":532126,"line_start":814,"line_end":814,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532127,"byte_end":532169,"line_start":815,"line_end":815,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532170,"byte_end":532176,"line_start":816,"line_end":816,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532177,"byte_end":532180,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532181,"byte_end":532270,"line_start":818,"line_end":818,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532271,"byte_end":532356,"line_start":819,"line_end":819,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532357,"byte_end":532360,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532361,"byte_end":532383,"line_start":821,"line_end":821,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532384,"byte_end":532429,"line_start":822,"line_end":822,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532430,"byte_end":532436,"line_start":823,"line_end":823,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532437,"byte_end":532440,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532441,"byte_end":532530,"line_start":825,"line_end":825,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532531,"byte_end":532616,"line_start":826,"line_end":826,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532617,"byte_end":532624,"line_start":827,"line_end":827,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":532625,"byte_end":532634,"line_start":828,"line_end":828,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534106,"byte_end":534109,"line_start":868,"line_end":868,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::complete::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533096,"byte_end":533137,"line_start":843,"line_end":843,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533138,"byte_end":533141,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533142,"byte_end":533229,"line_start":845,"line_end":845,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533230,"byte_end":533315,"line_start":846,"line_end":846,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533316,"byte_end":533390,"line_start":847,"line_end":847,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533391,"byte_end":533402,"line_start":848,"line_end":848,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533403,"byte_end":533450,"line_start":849,"line_end":849,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533451,"byte_end":533479,"line_start":850,"line_end":850,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533480,"byte_end":533515,"line_start":851,"line_end":851,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533516,"byte_end":533519,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533520,"byte_end":533542,"line_start":853,"line_end":853,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533543,"byte_end":533585,"line_start":854,"line_end":854,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533586,"byte_end":533592,"line_start":855,"line_end":855,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533593,"byte_end":533596,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533597,"byte_end":533710,"line_start":857,"line_end":857,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533711,"byte_end":533796,"line_start":858,"line_end":858,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533797,"byte_end":533800,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533801,"byte_end":533823,"line_start":860,"line_end":860,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533824,"byte_end":533869,"line_start":861,"line_end":861,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533870,"byte_end":533876,"line_start":862,"line_end":862,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533877,"byte_end":533880,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533881,"byte_end":533994,"line_start":864,"line_end":864,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":533995,"byte_end":534080,"line_start":865,"line_end":865,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534081,"byte_end":534088,"line_start":866,"line_end":866,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534089,"byte_end":534098,"line_start":867,"line_end":867,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535698,"byte_end":535702,"line_start":908,"line_end":908,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::complete::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534560,"byte_end":534602,"line_start":882,"line_end":882,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534603,"byte_end":534606,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534607,"byte_end":534695,"line_start":884,"line_end":884,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534696,"byte_end":534782,"line_start":885,"line_end":885,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534783,"byte_end":534857,"line_start":886,"line_end":886,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534858,"byte_end":534869,"line_start":887,"line_end":887,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534870,"byte_end":534917,"line_start":888,"line_end":888,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534918,"byte_end":534946,"line_start":889,"line_end":889,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534947,"byte_end":534983,"line_start":890,"line_end":890,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534984,"byte_end":534987,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":534988,"byte_end":535011,"line_start":892,"line_end":892,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535012,"byte_end":535055,"line_start":893,"line_end":893,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535056,"byte_end":535062,"line_start":894,"line_end":894,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535063,"byte_end":535066,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535067,"byte_end":535229,"line_start":896,"line_end":896,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535230,"byte_end":535316,"line_start":897,"line_end":897,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535317,"byte_end":535320,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535321,"byte_end":535344,"line_start":899,"line_end":899,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535345,"byte_end":535391,"line_start":900,"line_end":900,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535392,"byte_end":535398,"line_start":901,"line_end":901,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535399,"byte_end":535402,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535403,"byte_end":535565,"line_start":903,"line_end":903,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535566,"byte_end":535652,"line_start":904,"line_end":904,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535653,"byte_end":535660,"line_start":905,"line_end":905,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535661,"byte_end":535670,"line_start":906,"line_end":906,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":535671,"byte_end":535690,"line_start":907,"line_end":907,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536692,"byte_end":536694,"line_start":939,"line_end":939,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::complete::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536158,"byte_end":536196,"line_start":922,"line_end":922,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536197,"byte_end":536200,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536201,"byte_end":536259,"line_start":924,"line_end":924,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536260,"byte_end":536334,"line_start":925,"line_end":925,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536335,"byte_end":536346,"line_start":926,"line_end":926,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536347,"byte_end":536394,"line_start":927,"line_end":927,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536395,"byte_end":536423,"line_start":928,"line_end":928,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536424,"byte_end":536458,"line_start":929,"line_end":929,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536459,"byte_end":536462,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536463,"byte_end":536485,"line_start":931,"line_end":931,"column_start":1,"column_end":23}},{"value":"/   i8(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536486,"byte_end":536497,"line_start":932,"line_end":932,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536498,"byte_end":536504,"line_start":933,"line_end":933,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536505,"byte_end":536508,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536509,"byte_end":536588,"line_start":935,"line_end":935,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536589,"byte_end":536666,"line_start":936,"line_end":936,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536667,"byte_end":536674,"line_start":937,"line_end":937,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536675,"byte_end":536684,"line_start":938,"line_end":938,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537783,"byte_end":537786,"line_start":971,"line_end":971,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::complete::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536848,"byte_end":536886,"line_start":946,"line_end":946,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536887,"byte_end":536890,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536891,"byte_end":536978,"line_start":948,"line_end":948,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":536979,"byte_end":537064,"line_start":949,"line_end":949,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537065,"byte_end":537139,"line_start":950,"line_end":950,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537140,"byte_end":537151,"line_start":951,"line_end":951,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537152,"byte_end":537199,"line_start":952,"line_end":952,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537200,"byte_end":537228,"line_start":953,"line_end":953,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537229,"byte_end":537264,"line_start":954,"line_end":954,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537265,"byte_end":537268,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537269,"byte_end":537291,"line_start":956,"line_end":956,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537292,"byte_end":537334,"line_start":957,"line_end":957,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537335,"byte_end":537341,"line_start":958,"line_end":958,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537342,"byte_end":537345,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537346,"byte_end":537423,"line_start":960,"line_end":960,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537424,"byte_end":537509,"line_start":961,"line_end":961,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537510,"byte_end":537513,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537514,"byte_end":537536,"line_start":963,"line_end":963,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537537,"byte_end":537582,"line_start":964,"line_end":964,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537583,"byte_end":537589,"line_start":965,"line_end":965,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537590,"byte_end":537593,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537594,"byte_end":537671,"line_start":967,"line_end":967,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537672,"byte_end":537757,"line_start":968,"line_end":968,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537758,"byte_end":537765,"line_start":969,"line_end":969,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":537766,"byte_end":537775,"line_start":970,"line_end":970,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539184,"byte_end":539187,"line_start":1010,"line_end":1010,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::complete::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538237,"byte_end":538275,"line_start":985,"line_end":985,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538276,"byte_end":538279,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538280,"byte_end":538367,"line_start":987,"line_end":987,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538368,"byte_end":538453,"line_start":988,"line_end":988,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538454,"byte_end":538528,"line_start":989,"line_end":989,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538529,"byte_end":538540,"line_start":990,"line_end":990,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538541,"byte_end":538588,"line_start":991,"line_end":991,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538589,"byte_end":538617,"line_start":992,"line_end":992,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538618,"byte_end":538653,"line_start":993,"line_end":993,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538654,"byte_end":538657,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538658,"byte_end":538680,"line_start":995,"line_end":995,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538681,"byte_end":538723,"line_start":996,"line_end":996,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538724,"byte_end":538730,"line_start":997,"line_end":997,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538731,"byte_end":538734,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538735,"byte_end":538818,"line_start":999,"line_end":999,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538819,"byte_end":538904,"line_start":1000,"line_end":1000,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538905,"byte_end":538908,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538909,"byte_end":538931,"line_start":1002,"line_end":1002,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538932,"byte_end":538977,"line_start":1003,"line_end":1003,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538978,"byte_end":538984,"line_start":1004,"line_end":1004,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538985,"byte_end":538988,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":538989,"byte_end":539072,"line_start":1006,"line_end":1006,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539073,"byte_end":539158,"line_start":1007,"line_end":1007,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539159,"byte_end":539166,"line_start":1008,"line_end":1008,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539167,"byte_end":539176,"line_start":1009,"line_end":1009,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540597,"byte_end":540600,"line_start":1049,"line_end":1049,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::complete::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539638,"byte_end":539676,"line_start":1024,"line_end":1024,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539677,"byte_end":539680,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539681,"byte_end":539768,"line_start":1026,"line_end":1026,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539769,"byte_end":539854,"line_start":1027,"line_end":1027,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539855,"byte_end":539929,"line_start":1028,"line_end":1028,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539930,"byte_end":539941,"line_start":1029,"line_end":1029,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539942,"byte_end":539989,"line_start":1030,"line_end":1030,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":539990,"byte_end":540018,"line_start":1031,"line_end":1031,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540019,"byte_end":540054,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540055,"byte_end":540058,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540059,"byte_end":540081,"line_start":1034,"line_end":1034,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540082,"byte_end":540124,"line_start":1035,"line_end":1035,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540125,"byte_end":540131,"line_start":1036,"line_end":1036,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540132,"byte_end":540135,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540136,"byte_end":540225,"line_start":1038,"line_end":1038,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540226,"byte_end":540311,"line_start":1039,"line_end":1039,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540312,"byte_end":540315,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540316,"byte_end":540338,"line_start":1041,"line_end":1041,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540339,"byte_end":540384,"line_start":1042,"line_end":1042,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540385,"byte_end":540391,"line_start":1043,"line_end":1043,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540392,"byte_end":540395,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540396,"byte_end":540485,"line_start":1045,"line_end":1045,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540486,"byte_end":540571,"line_start":1046,"line_end":1046,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540572,"byte_end":540579,"line_start":1047,"line_end":1047,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":540580,"byte_end":540589,"line_start":1048,"line_end":1048,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542058,"byte_end":542061,"line_start":1088,"line_end":1088,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::complete::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541051,"byte_end":541089,"line_start":1063,"line_end":1063,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541090,"byte_end":541093,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541094,"byte_end":541181,"line_start":1065,"line_end":1065,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541182,"byte_end":541267,"line_start":1066,"line_end":1066,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541268,"byte_end":541342,"line_start":1067,"line_end":1067,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541343,"byte_end":541354,"line_start":1068,"line_end":1068,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541355,"byte_end":541402,"line_start":1069,"line_end":1069,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541403,"byte_end":541431,"line_start":1070,"line_end":1070,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541432,"byte_end":541467,"line_start":1071,"line_end":1071,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541468,"byte_end":541471,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541472,"byte_end":541494,"line_start":1073,"line_end":1073,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541495,"byte_end":541537,"line_start":1074,"line_end":1074,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541538,"byte_end":541544,"line_start":1075,"line_end":1075,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541545,"byte_end":541548,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541549,"byte_end":541662,"line_start":1077,"line_end":1077,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541663,"byte_end":541748,"line_start":1078,"line_end":1078,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541749,"byte_end":541752,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541753,"byte_end":541775,"line_start":1080,"line_end":1080,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541776,"byte_end":541821,"line_start":1081,"line_end":1081,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541822,"byte_end":541828,"line_start":1082,"line_end":1082,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541829,"byte_end":541832,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541833,"byte_end":541946,"line_start":1084,"line_end":1084,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":541947,"byte_end":542032,"line_start":1085,"line_end":1085,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542033,"byte_end":542040,"line_start":1086,"line_end":1086,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542041,"byte_end":542050,"line_start":1087,"line_end":1087,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543647,"byte_end":543651,"line_start":1128,"line_end":1128,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::complete::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542512,"byte_end":542551,"line_start":1102,"line_end":1102,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542552,"byte_end":542555,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542556,"byte_end":542644,"line_start":1104,"line_end":1104,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542645,"byte_end":542731,"line_start":1105,"line_end":1105,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542732,"byte_end":542806,"line_start":1106,"line_end":1106,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542807,"byte_end":542818,"line_start":1107,"line_end":1107,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542819,"byte_end":542866,"line_start":1108,"line_end":1108,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542867,"byte_end":542895,"line_start":1109,"line_end":1109,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542896,"byte_end":542932,"line_start":1110,"line_end":1110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542933,"byte_end":542936,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542937,"byte_end":542960,"line_start":1112,"line_end":1112,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":542961,"byte_end":543004,"line_start":1113,"line_end":1113,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543005,"byte_end":543011,"line_start":1114,"line_end":1114,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543012,"byte_end":543015,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543016,"byte_end":543178,"line_start":1116,"line_end":1116,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543179,"byte_end":543265,"line_start":1117,"line_end":1117,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543266,"byte_end":543269,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543270,"byte_end":543293,"line_start":1119,"line_end":1119,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543294,"byte_end":543340,"line_start":1120,"line_end":1120,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543341,"byte_end":543347,"line_start":1121,"line_end":1121,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543348,"byte_end":543351,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543352,"byte_end":543514,"line_start":1123,"line_end":1123,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543515,"byte_end":543601,"line_start":1124,"line_end":1124,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543602,"byte_end":543609,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543610,"byte_end":543619,"line_start":1126,"line_end":1126,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":543620,"byte_end":543639,"line_start":1127,"line_end":1127,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544615,"byte_end":544621,"line_start":1158,"line_end":1158,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::complete::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544107,"byte_end":544165,"line_start":1142,"line_end":1142,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544166,"byte_end":544169,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544170,"byte_end":544245,"line_start":1144,"line_end":1144,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544246,"byte_end":544257,"line_start":1145,"line_end":1145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544258,"byte_end":544305,"line_start":1146,"line_end":1146,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544306,"byte_end":544334,"line_start":1147,"line_end":1147,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544335,"byte_end":544373,"line_start":1148,"line_end":1148,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544374,"byte_end":544377,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544378,"byte_end":544400,"line_start":1150,"line_end":1150,"column_start":1,"column_end":23}},{"value":"/   be_f32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544401,"byte_end":544416,"line_start":1151,"line_end":1151,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544417,"byte_end":544423,"line_start":1152,"line_end":1152,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544424,"byte_end":544427,"line_start":1153,"line_end":1153,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544428,"byte_end":544504,"line_start":1154,"line_end":1154,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544505,"byte_end":544589,"line_start":1155,"line_end":1155,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544590,"byte_end":544597,"line_start":1156,"line_end":1156,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544598,"byte_end":544607,"line_start":1157,"line_end":1157,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545381,"byte_end":545387,"line_start":1184,"line_end":1184,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::complete::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544849,"byte_end":544907,"line_start":1168,"line_end":1168,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544908,"byte_end":544911,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544912,"byte_end":544987,"line_start":1170,"line_end":1170,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":544988,"byte_end":544999,"line_start":1171,"line_end":1171,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545000,"byte_end":545047,"line_start":1172,"line_end":1172,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545048,"byte_end":545076,"line_start":1173,"line_end":1173,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545077,"byte_end":545115,"line_start":1174,"line_end":1174,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545116,"byte_end":545119,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545120,"byte_end":545142,"line_start":1176,"line_end":1176,"column_start":1,"column_end":23}},{"value":"/   be_f64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545143,"byte_end":545158,"line_start":1177,"line_end":1177,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545159,"byte_end":545165,"line_start":1178,"line_end":1178,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545166,"byte_end":545169,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545170,"byte_end":545270,"line_start":1180,"line_end":1180,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545271,"byte_end":545355,"line_start":1181,"line_end":1181,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545356,"byte_end":545363,"line_start":1182,"line_end":1182,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545364,"byte_end":545373,"line_start":1183,"line_end":1183,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546126,"byte_end":546132,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::complete::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545615,"byte_end":545676,"line_start":1194,"line_end":1194,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545677,"byte_end":545680,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545681,"byte_end":545756,"line_start":1196,"line_end":1196,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545757,"byte_end":545768,"line_start":1197,"line_end":1197,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545769,"byte_end":545816,"line_start":1198,"line_end":1198,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545817,"byte_end":545845,"line_start":1199,"line_end":1199,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545846,"byte_end":545884,"line_start":1200,"line_end":1200,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545885,"byte_end":545888,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545889,"byte_end":545911,"line_start":1202,"line_end":1202,"column_start":1,"column_end":23}},{"value":"/   le_f32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545912,"byte_end":545927,"line_start":1203,"line_end":1203,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545928,"byte_end":545934,"line_start":1204,"line_end":1204,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545935,"byte_end":545938,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":545939,"byte_end":546015,"line_start":1206,"line_end":1206,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546016,"byte_end":546100,"line_start":1207,"line_end":1207,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546101,"byte_end":546108,"line_start":1208,"line_end":1208,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546109,"byte_end":546118,"line_start":1209,"line_end":1209,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546895,"byte_end":546901,"line_start":1236,"line_end":1236,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::complete::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546360,"byte_end":546421,"line_start":1220,"line_end":1220,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546422,"byte_end":546425,"line_start":1221,"line_end":1221,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546426,"byte_end":546501,"line_start":1222,"line_end":1222,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546502,"byte_end":546513,"line_start":1223,"line_end":1223,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546514,"byte_end":546561,"line_start":1224,"line_end":1224,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546562,"byte_end":546590,"line_start":1225,"line_end":1225,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546591,"byte_end":546629,"line_start":1226,"line_end":1226,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546630,"byte_end":546633,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546634,"byte_end":546656,"line_start":1228,"line_end":1228,"column_start":1,"column_end":23}},{"value":"/   le_f64(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546657,"byte_end":546672,"line_start":1229,"line_end":1229,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546673,"byte_end":546679,"line_start":1230,"line_end":1230,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546680,"byte_end":546683,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546684,"byte_end":546784,"line_start":1232,"line_end":1232,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546785,"byte_end":546869,"line_start":1233,"line_end":1233,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546870,"byte_end":546877,"line_start":1234,"line_end":1234,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":546878,"byte_end":546887,"line_start":1235,"line_end":1235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2796},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548063,"byte_end":548066,"line_start":1271,"line_end":1271,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::complete::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547129,"byte_end":547174,"line_start":1246,"line_end":1246,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547175,"byte_end":547178,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547179,"byte_end":547264,"line_start":1248,"line_end":1248,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547265,"byte_end":547348,"line_start":1249,"line_end":1249,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547349,"byte_end":547423,"line_start":1250,"line_end":1250,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547424,"byte_end":547435,"line_start":1251,"line_end":1251,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547436,"byte_end":547483,"line_start":1252,"line_end":1252,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547484,"byte_end":547512,"line_start":1253,"line_end":1253,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547513,"byte_end":547548,"line_start":1254,"line_end":1254,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547549,"byte_end":547552,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547553,"byte_end":547575,"line_start":1256,"line_end":1256,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547576,"byte_end":547618,"line_start":1257,"line_end":1257,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547619,"byte_end":547625,"line_start":1258,"line_end":1258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547626,"byte_end":547629,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547630,"byte_end":547706,"line_start":1260,"line_end":1260,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547707,"byte_end":547791,"line_start":1261,"line_end":1261,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547792,"byte_end":547795,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547796,"byte_end":547818,"line_start":1263,"line_end":1263,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547819,"byte_end":547864,"line_start":1264,"line_end":1264,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547865,"byte_end":547871,"line_start":1265,"line_end":1265,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547872,"byte_end":547875,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547876,"byte_end":547952,"line_start":1267,"line_end":1267,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":547953,"byte_end":548037,"line_start":1268,"line_end":1268,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548038,"byte_end":548045,"line_start":1269,"line_end":1269,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548046,"byte_end":548055,"line_start":1270,"line_end":1270,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549500,"byte_end":549503,"line_start":1310,"line_end":1310,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::complete::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548517,"byte_end":548563,"line_start":1285,"line_end":1285,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548564,"byte_end":548567,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548568,"byte_end":548653,"line_start":1287,"line_end":1287,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548654,"byte_end":548737,"line_start":1288,"line_end":1288,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548738,"byte_end":548812,"line_start":1289,"line_end":1289,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548813,"byte_end":548824,"line_start":1290,"line_end":1290,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548825,"byte_end":548872,"line_start":1291,"line_end":1291,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548873,"byte_end":548901,"line_start":1292,"line_end":1292,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548902,"byte_end":548937,"line_start":1293,"line_end":1293,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548938,"byte_end":548941,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548942,"byte_end":548964,"line_start":1295,"line_end":1295,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":548965,"byte_end":549007,"line_start":1296,"line_end":1296,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549008,"byte_end":549014,"line_start":1297,"line_end":1297,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549015,"byte_end":549018,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549019,"byte_end":549119,"line_start":1299,"line_end":1299,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549120,"byte_end":549204,"line_start":1300,"line_end":1300,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549205,"byte_end":549208,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549209,"byte_end":549231,"line_start":1302,"line_end":1302,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549232,"byte_end":549277,"line_start":1303,"line_end":1303,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549278,"byte_end":549284,"line_start":1304,"line_end":1304,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549285,"byte_end":549288,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549289,"byte_end":549389,"line_start":1306,"line_end":1306,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549390,"byte_end":549474,"line_start":1307,"line_end":1307,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549475,"byte_end":549482,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549483,"byte_end":549492,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550500,"byte_end":550507,"line_start":1341,"line_end":1341,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::complete::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549954,"byte_end":549991,"line_start":1324,"line_end":1324,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549992,"byte_end":549995,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will parse until the end of input if it has less than 8 bytes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":549996,"byte_end":550082,"line_start":1326,"line_end":1326,"column_start":1,"column_end":87}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550083,"byte_end":550094,"line_start":1327,"line_end":1327,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550095,"byte_end":550142,"line_start":1328,"line_end":1328,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550143,"byte_end":550171,"line_start":1329,"line_end":1329,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::hex_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550172,"byte_end":550211,"line_start":1330,"line_end":1330,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550212,"byte_end":550215,"line_start":1331,"line_end":1331,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550216,"byte_end":550238,"line_start":1332,"line_end":1332,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550239,"byte_end":550255,"line_start":1333,"line_end":1333,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550256,"byte_end":550262,"line_start":1334,"line_end":1334,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550263,"byte_end":550266,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550267,"byte_end":550328,"line_start":1336,"line_end":1336,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550329,"byte_end":550389,"line_start":1337,"line_end":1337,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550390,"byte_end":550474,"line_start":1338,"line_end":1338,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550475,"byte_end":550482,"line_start":1339,"line_end":1339,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":550483,"byte_end":550492,"line_start":1340,"line_end":1340,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6568},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551682,"byte_end":551697,"line_start":1383,"line_end":1383,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::complete::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns the corresponding slice.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns the corresponding slice.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551030,"byte_end":551120,"line_start":1363,"line_end":1363,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551121,"byte_end":551124,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551125,"byte_end":551182,"line_start":1365,"line_end":1365,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551183,"byte_end":551186,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551187,"byte_end":551198,"line_start":1367,"line_end":1367,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551199,"byte_end":551246,"line_start":1368,"line_end":1368,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551247,"byte_end":551275,"line_start":1369,"line_end":1369,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::recognize_float;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551276,"byte_end":551323,"line_start":1370,"line_end":1370,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551324,"byte_end":551327,"line_start":1371,"line_end":1371,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551328,"byte_end":551350,"line_start":1372,"line_end":1372,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551351,"byte_end":551375,"line_start":1373,"line_end":1373,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551376,"byte_end":551382,"line_start":1374,"line_end":1374,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551383,"byte_end":551386,"line_start":1375,"line_end":1375,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551387,"byte_end":551438,"line_start":1376,"line_end":1376,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551439,"byte_end":551494,"line_start":1377,"line_end":1377,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551495,"byte_end":551550,"line_start":1378,"line_end":1378,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551551,"byte_end":551624,"line_start":1379,"line_end":1379,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551625,"byte_end":551632,"line_start":1380,"line_end":1380,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551633,"byte_end":551657,"line_start":1381,"line_end":1381,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":551658,"byte_end":551674,"line_start":1382,"line_end":1382,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552899,"byte_end":552904,"line_start":1426,"line_end":1426,"column_start":8,"column_end":13},"name":"float","qualname":"::number::complete::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f32>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f32.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552307,"byte_end":552379,"line_start":1408,"line_end":1408,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552380,"byte_end":552383,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552384,"byte_end":552441,"line_start":1410,"line_end":1410,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552442,"byte_end":552453,"line_start":1411,"line_end":1411,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552454,"byte_end":552501,"line_start":1412,"line_end":1412,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552502,"byte_end":552530,"line_start":1413,"line_end":1413,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552531,"byte_end":552568,"line_start":1414,"line_end":1414,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552569,"byte_end":552572,"line_start":1415,"line_end":1415,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552573,"byte_end":552595,"line_start":1416,"line_end":1416,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552596,"byte_end":552610,"line_start":1417,"line_end":1417,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552611,"byte_end":552617,"line_start":1418,"line_end":1418,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552618,"byte_end":552621,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552622,"byte_end":552669,"line_start":1420,"line_end":1420,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552670,"byte_end":552720,"line_start":1421,"line_end":1421,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552721,"byte_end":552776,"line_start":1422,"line_end":1422,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552777,"byte_end":552850,"line_start":1423,"line_end":1423,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552851,"byte_end":552858,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":552859,"byte_end":552891,"line_start":1425,"line_end":1425,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":555083,"byte_end":555089,"line_start":1493,"line_end":1493,"column_start":8,"column_end":14},"name":"double","qualname":"::number::complete::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f64>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a f64.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a f64.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554489,"byte_end":554561,"line_start":1475,"line_end":1475,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554562,"byte_end":554565,"line_start":1476,"line_end":1476,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554566,"byte_end":554623,"line_start":1477,"line_end":1477,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554624,"byte_end":554635,"line_start":1478,"line_end":1478,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554636,"byte_end":554683,"line_start":1479,"line_end":1479,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554684,"byte_end":554712,"line_start":1480,"line_end":1480,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::double;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554713,"byte_end":554751,"line_start":1481,"line_end":1481,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554752,"byte_end":554755,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554756,"byte_end":554778,"line_start":1483,"line_end":1483,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554779,"byte_end":554794,"line_start":1484,"line_end":1484,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554795,"byte_end":554801,"line_start":1485,"line_end":1485,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554802,"byte_end":554805,"line_start":1486,"line_end":1486,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554806,"byte_end":554853,"line_start":1487,"line_end":1487,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554854,"byte_end":554904,"line_start":1488,"line_end":1488,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554905,"byte_end":554960,"line_start":1489,"line_end":1489,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":554961,"byte_end":555034,"line_start":1490,"line_end":1490,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":555035,"byte_end":555042,"line_start":1491,"line_end":1491,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/complete.rs","byte_start":555043,"byte_end":555075,"line_start":1492,"line_end":1492,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::number::streaming","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","parent":null,"children":[{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2820},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":2881},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2890},{"krate":0,"index":2893},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":6599},{"krate":0,"index":3008},{"krate":0,"index":3011}],"decl_id":null,"docs":" Parsers recognizing numbers, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, streaming version","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":566666,"byte_end":566716,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567594,"byte_end":567599,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::streaming::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567104,"byte_end":567146,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567147,"byte_end":567150,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567151,"byte_end":567247,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567248,"byte_end":567259,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567260,"byte_end":567307,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567308,"byte_end":567346,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567347,"byte_end":567350,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567351,"byte_end":567373,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/   be_u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567374,"byte_end":567409,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567410,"byte_end":567416,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567417,"byte_end":567420,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567421,"byte_end":567496,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567497,"byte_end":567568,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567569,"byte_end":567576,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567577,"byte_end":567586,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568442,"byte_end":568448,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::streaming::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567933,"byte_end":567986,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567987,"byte_end":567990,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":567991,"byte_end":568087,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568088,"byte_end":568091,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568092,"byte_end":568103,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568104,"byte_end":568151,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568152,"byte_end":568191,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568192,"byte_end":568195,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568196,"byte_end":568218,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/   be_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568219,"byte_end":568255,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568256,"byte_end":568262,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568263,"byte_end":568266,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568267,"byte_end":568340,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568341,"byte_end":568416,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568417,"byte_end":568424,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568425,"byte_end":568434,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2884},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569388,"byte_end":569394,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::streaming::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568874,"byte_end":568926,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568927,"byte_end":568930,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":568931,"byte_end":569027,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569028,"byte_end":569031,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569032,"byte_end":569043,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569044,"byte_end":569091,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569092,"byte_end":569131,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569132,"byte_end":569135,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569136,"byte_end":569158,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/   be_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569159,"byte_end":569195,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569196,"byte_end":569202,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569203,"byte_end":569206,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569207,"byte_end":569286,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569287,"byte_end":569362,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569363,"byte_end":569370,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569371,"byte_end":569380,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570341,"byte_end":570347,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::streaming::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569820,"byte_end":569873,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569874,"byte_end":569877,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569878,"byte_end":569974,"line_start":110,"line_end":110,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569975,"byte_end":569978,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569979,"byte_end":569990,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":569991,"byte_end":570038,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570039,"byte_end":570078,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570079,"byte_end":570082,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570083,"byte_end":570105,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/   be_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570106,"byte_end":570142,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570143,"byte_end":570149,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570150,"byte_end":570153,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570154,"byte_end":570239,"line_start":120,"line_end":120,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570240,"byte_end":570315,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570316,"byte_end":570323,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570324,"byte_end":570333,"line_start":123,"line_end":123,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571318,"byte_end":571324,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::streaming::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570773,"byte_end":570826,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570827,"byte_end":570830,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570831,"byte_end":570927,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570928,"byte_end":570931,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570932,"byte_end":570943,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570944,"byte_end":570991,"line_start":146,"line_end":146,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":570992,"byte_end":571031,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571032,"byte_end":571035,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571036,"byte_end":571058,"line_start":149,"line_end":149,"column_start":1,"column_end":23}},{"value":"/   be_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571059,"byte_end":571095,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571096,"byte_end":571102,"line_start":151,"line_end":151,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571103,"byte_end":571106,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571107,"byte_end":571216,"line_start":153,"line_end":153,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571217,"byte_end":571292,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571293,"byte_end":571300,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571301,"byte_end":571310,"line_start":156,"line_end":156,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572363,"byte_end":572370,"line_start":190,"line_end":190,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::streaming::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571750,"byte_end":571804,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571805,"byte_end":571808,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571809,"byte_end":571905,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571906,"byte_end":571917,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571918,"byte_end":571965,"line_start":178,"line_end":178,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":571966,"byte_end":572006,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572007,"byte_end":572010,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572011,"byte_end":572033,"line_start":181,"line_end":181,"column_start":1,"column_end":23}},{"value":"/   be_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572034,"byte_end":572071,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572072,"byte_end":572078,"line_start":183,"line_end":183,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572079,"byte_end":572082,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572083,"byte_end":572240,"line_start":185,"line_end":185,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572241,"byte_end":572317,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572318,"byte_end":572325,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572326,"byte_end":572335,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572336,"byte_end":572355,"line_start":189,"line_end":189,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573266,"byte_end":573271,"line_start":220,"line_end":220,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::streaming::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572800,"byte_end":572839,"line_start":207,"line_end":207,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572840,"byte_end":572843,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572844,"byte_end":572940,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572941,"byte_end":572952,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":572953,"byte_end":573000,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573001,"byte_end":573039,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573040,"byte_end":573043,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573044,"byte_end":573088,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573089,"byte_end":573092,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573093,"byte_end":573168,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573169,"byte_end":573240,"line_start":217,"line_end":217,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573241,"byte_end":573248,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573249,"byte_end":573258,"line_start":219,"line_end":219,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573914,"byte_end":573920,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::streaming::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573436,"byte_end":573487,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573488,"byte_end":573491,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573492,"byte_end":573588,"line_start":229,"line_end":229,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573589,"byte_end":573600,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573601,"byte_end":573648,"line_start":231,"line_end":231,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573649,"byte_end":573688,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573689,"byte_end":573692,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i16::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573693,"byte_end":573738,"line_start":234,"line_end":234,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573739,"byte_end":573742,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573743,"byte_end":573816,"line_start":236,"line_end":236,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573817,"byte_end":573888,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573889,"byte_end":573896,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":573897,"byte_end":573906,"line_start":239,"line_end":239,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2902},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574572,"byte_end":574578,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::streaming::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574088,"byte_end":574139,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574140,"byte_end":574143,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574144,"byte_end":574240,"line_start":249,"line_end":249,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574241,"byte_end":574252,"line_start":250,"line_end":250,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574253,"byte_end":574300,"line_start":251,"line_end":251,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574301,"byte_end":574340,"line_start":252,"line_end":252,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574341,"byte_end":574344,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i24::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574345,"byte_end":574390,"line_start":254,"line_end":254,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574391,"byte_end":574394,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574395,"byte_end":574474,"line_start":256,"line_end":256,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574475,"byte_end":574546,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574547,"byte_end":574554,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574555,"byte_end":574564,"line_start":259,"line_end":259,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575386,"byte_end":575392,"line_start":285,"line_end":285,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::streaming::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574896,"byte_end":574947,"line_start":272,"line_end":272,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574948,"byte_end":574951,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":574952,"byte_end":575048,"line_start":274,"line_end":274,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575049,"byte_end":575060,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575061,"byte_end":575108,"line_start":276,"line_end":276,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575109,"byte_end":575148,"line_start":277,"line_end":277,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575149,"byte_end":575152,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i32::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575153,"byte_end":575198,"line_start":279,"line_end":279,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575199,"byte_end":575202,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575203,"byte_end":575288,"line_start":281,"line_end":281,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575289,"byte_end":575360,"line_start":282,"line_end":282,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575361,"byte_end":575368,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575369,"byte_end":575378,"line_start":284,"line_end":284,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576082,"byte_end":576088,"line_start":306,"line_end":306,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::streaming::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575560,"byte_end":575611,"line_start":292,"line_end":292,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575612,"byte_end":575615,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575616,"byte_end":575712,"line_start":294,"line_end":294,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575713,"byte_end":575716,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575717,"byte_end":575728,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575729,"byte_end":575776,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575777,"byte_end":575816,"line_start":298,"line_end":298,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575817,"byte_end":575820,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i64::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575821,"byte_end":575866,"line_start":300,"line_end":300,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575867,"byte_end":575870,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575871,"byte_end":575980,"line_start":302,"line_end":302,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":575981,"byte_end":576056,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576057,"byte_end":576064,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576065,"byte_end":576074,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576846,"byte_end":576853,"line_start":327,"line_end":327,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::streaming::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576256,"byte_end":576308,"line_start":313,"line_end":313,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576309,"byte_end":576312,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576313,"byte_end":576409,"line_start":315,"line_end":315,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576410,"byte_end":576421,"line_start":316,"line_end":316,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576422,"byte_end":576469,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576470,"byte_end":576510,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576511,"byte_end":576514,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i128::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576515,"byte_end":576561,"line_start":320,"line_end":320,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576562,"byte_end":576565,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576566,"byte_end":576723,"line_start":322,"line_end":322,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576724,"byte_end":576800,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576801,"byte_end":576808,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576809,"byte_end":576818,"line_start":325,"line_end":325,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":576819,"byte_end":576838,"line_start":326,"line_end":326,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577493,"byte_end":577498,"line_start":347,"line_end":347,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::streaming::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577024,"byte_end":577066,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577067,"byte_end":577070,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577071,"byte_end":577167,"line_start":336,"line_end":336,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577168,"byte_end":577179,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577180,"byte_end":577227,"line_start":338,"line_end":338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577228,"byte_end":577266,"line_start":339,"line_end":339,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577267,"byte_end":577270,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ let parser = le_u8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577271,"byte_end":577315,"line_start":341,"line_end":341,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577316,"byte_end":577319,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577320,"byte_end":577395,"line_start":343,"line_end":343,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577396,"byte_end":577467,"line_start":344,"line_end":344,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577468,"byte_end":577475,"line_start":345,"line_end":345,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577476,"byte_end":577485,"line_start":346,"line_end":346,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578344,"byte_end":578350,"line_start":377,"line_end":377,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::streaming::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577832,"byte_end":577888,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577889,"byte_end":577892,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577893,"byte_end":577989,"line_start":363,"line_end":363,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577990,"byte_end":577993,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":577994,"byte_end":578005,"line_start":365,"line_end":365,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578006,"byte_end":578053,"line_start":366,"line_end":366,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578054,"byte_end":578093,"line_start":367,"line_end":367,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578094,"byte_end":578097,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578098,"byte_end":578120,"line_start":369,"line_end":369,"column_start":1,"column_end":23}},{"value":"/   le_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578121,"byte_end":578157,"line_start":370,"line_end":370,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578158,"byte_end":578164,"line_start":371,"line_end":371,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578165,"byte_end":578168,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578169,"byte_end":578242,"line_start":373,"line_end":373,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578243,"byte_end":578318,"line_start":374,"line_end":374,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578319,"byte_end":578326,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578327,"byte_end":578336,"line_start":376,"line_end":376,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579307,"byte_end":579313,"line_start":410,"line_end":410,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::streaming::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578789,"byte_end":578845,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578846,"byte_end":578849,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578850,"byte_end":578946,"line_start":396,"line_end":396,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578947,"byte_end":578950,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578951,"byte_end":578962,"line_start":398,"line_end":398,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":578963,"byte_end":579010,"line_start":399,"line_end":399,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579011,"byte_end":579050,"line_start":400,"line_end":400,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579051,"byte_end":579054,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579055,"byte_end":579077,"line_start":402,"line_end":402,"column_start":1,"column_end":23}},{"value":"/   le_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579078,"byte_end":579114,"line_start":403,"line_end":403,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579115,"byte_end":579121,"line_start":404,"line_end":404,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579122,"byte_end":579125,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579126,"byte_end":579205,"line_start":406,"line_end":406,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579206,"byte_end":579281,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579282,"byte_end":579289,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579290,"byte_end":579299,"line_start":409,"line_end":409,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580276,"byte_end":580282,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::streaming::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579752,"byte_end":579808,"line_start":427,"line_end":427,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579809,"byte_end":579812,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579813,"byte_end":579909,"line_start":429,"line_end":429,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579910,"byte_end":579913,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579914,"byte_end":579925,"line_start":431,"line_end":431,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579926,"byte_end":579973,"line_start":432,"line_end":432,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":579974,"byte_end":580013,"line_start":433,"line_end":433,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580014,"byte_end":580017,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580018,"byte_end":580040,"line_start":435,"line_end":435,"column_start":1,"column_end":23}},{"value":"/   le_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580041,"byte_end":580077,"line_start":436,"line_end":436,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580078,"byte_end":580084,"line_start":437,"line_end":437,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580085,"byte_end":580088,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580089,"byte_end":580174,"line_start":439,"line_end":439,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580175,"byte_end":580250,"line_start":440,"line_end":440,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580251,"byte_end":580258,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580259,"byte_end":580268,"line_start":442,"line_end":442,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581269,"byte_end":581275,"line_start":476,"line_end":476,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::streaming::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580721,"byte_end":580777,"line_start":460,"line_end":460,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580778,"byte_end":580781,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580782,"byte_end":580878,"line_start":462,"line_end":462,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580879,"byte_end":580882,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580883,"byte_end":580894,"line_start":464,"line_end":464,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580895,"byte_end":580942,"line_start":465,"line_end":465,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580943,"byte_end":580982,"line_start":466,"line_end":466,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580983,"byte_end":580986,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":580987,"byte_end":581009,"line_start":468,"line_end":468,"column_start":1,"column_end":23}},{"value":"/   le_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581010,"byte_end":581046,"line_start":469,"line_end":469,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581047,"byte_end":581053,"line_start":470,"line_end":470,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581054,"byte_end":581057,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581058,"byte_end":581167,"line_start":472,"line_end":472,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581168,"byte_end":581243,"line_start":473,"line_end":473,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581244,"byte_end":581251,"line_start":474,"line_end":474,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581252,"byte_end":581261,"line_start":475,"line_end":475,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582334,"byte_end":582341,"line_start":510,"line_end":510,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::streaming::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581714,"byte_end":581771,"line_start":493,"line_end":493,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581772,"byte_end":581775,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581776,"byte_end":581872,"line_start":495,"line_end":495,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581873,"byte_end":581876,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581877,"byte_end":581888,"line_start":497,"line_end":497,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581889,"byte_end":581936,"line_start":498,"line_end":498,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581937,"byte_end":581977,"line_start":499,"line_end":499,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581978,"byte_end":581981,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":581982,"byte_end":582004,"line_start":501,"line_end":501,"column_start":1,"column_end":23}},{"value":"/   le_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582005,"byte_end":582042,"line_start":502,"line_end":502,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582043,"byte_end":582049,"line_start":503,"line_end":503,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582050,"byte_end":582053,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582054,"byte_end":582211,"line_start":505,"line_end":505,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582212,"byte_end":582288,"line_start":506,"line_end":506,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582289,"byte_end":582296,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582297,"byte_end":582306,"line_start":508,"line_end":508,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582307,"byte_end":582326,"line_start":509,"line_end":509,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2932},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583250,"byte_end":583255,"line_start":540,"line_end":540,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::streaming::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582784,"byte_end":582823,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582824,"byte_end":582827,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582828,"byte_end":582924,"line_start":529,"line_end":529,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582925,"byte_end":582936,"line_start":530,"line_end":530,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582937,"byte_end":582984,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":582985,"byte_end":583023,"line_start":532,"line_end":532,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583024,"byte_end":583027,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ let parser = le_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583028,"byte_end":583072,"line_start":534,"line_end":534,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583073,"byte_end":583076,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583077,"byte_end":583152,"line_start":536,"line_end":536,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583153,"byte_end":583224,"line_start":537,"line_end":537,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583225,"byte_end":583232,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583233,"byte_end":583242,"line_start":539,"line_end":539,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583930,"byte_end":583936,"line_start":563,"line_end":563,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::streaming::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583420,"byte_end":583474,"line_start":547,"line_end":547,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583475,"byte_end":583478,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583479,"byte_end":583575,"line_start":549,"line_end":549,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583576,"byte_end":583579,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583580,"byte_end":583591,"line_start":551,"line_end":551,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583592,"byte_end":583639,"line_start":552,"line_end":552,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583640,"byte_end":583679,"line_start":553,"line_end":553,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583680,"byte_end":583683,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583684,"byte_end":583706,"line_start":555,"line_end":555,"column_start":1,"column_end":23}},{"value":"/   le_i16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583707,"byte_end":583743,"line_start":556,"line_end":556,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583744,"byte_end":583750,"line_start":557,"line_end":557,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583751,"byte_end":583754,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583755,"byte_end":583828,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583829,"byte_end":583904,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583905,"byte_end":583912,"line_start":561,"line_end":561,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":583913,"byte_end":583922,"line_start":562,"line_end":562,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584620,"byte_end":584626,"line_start":586,"line_end":586,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::streaming::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584104,"byte_end":584158,"line_start":570,"line_end":570,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584159,"byte_end":584162,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584163,"byte_end":584259,"line_start":572,"line_end":572,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584260,"byte_end":584263,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584264,"byte_end":584275,"line_start":574,"line_end":574,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584276,"byte_end":584323,"line_start":575,"line_end":575,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584324,"byte_end":584363,"line_start":576,"line_end":576,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584364,"byte_end":584367,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584368,"byte_end":584390,"line_start":578,"line_end":578,"column_start":1,"column_end":23}},{"value":"/   le_i24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584391,"byte_end":584427,"line_start":579,"line_end":579,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584428,"byte_end":584434,"line_start":580,"line_end":580,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584435,"byte_end":584438,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584439,"byte_end":584518,"line_start":582,"line_end":582,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584519,"byte_end":584594,"line_start":583,"line_end":583,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584595,"byte_end":584602,"line_start":584,"line_end":584,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584603,"byte_end":584612,"line_start":585,"line_end":585,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585466,"byte_end":585472,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::streaming::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584944,"byte_end":584998,"line_start":598,"line_end":598,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":584999,"byte_end":585002,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585003,"byte_end":585099,"line_start":600,"line_end":600,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585100,"byte_end":585103,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585104,"byte_end":585115,"line_start":602,"line_end":602,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585116,"byte_end":585163,"line_start":603,"line_end":603,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585164,"byte_end":585203,"line_start":604,"line_end":604,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585204,"byte_end":585207,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585208,"byte_end":585230,"line_start":606,"line_end":606,"column_start":1,"column_end":23}},{"value":"/   le_i32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585231,"byte_end":585267,"line_start":607,"line_end":607,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585268,"byte_end":585274,"line_start":608,"line_end":608,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585275,"byte_end":585278,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585279,"byte_end":585364,"line_start":610,"line_end":610,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585365,"byte_end":585440,"line_start":611,"line_end":611,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585441,"byte_end":585448,"line_start":612,"line_end":612,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585449,"byte_end":585458,"line_start":613,"line_end":613,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586186,"byte_end":586192,"line_start":637,"line_end":637,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::streaming::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585640,"byte_end":585694,"line_start":621,"line_end":621,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585695,"byte_end":585698,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585699,"byte_end":585795,"line_start":623,"line_end":623,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585796,"byte_end":585799,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585800,"byte_end":585811,"line_start":625,"line_end":625,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585812,"byte_end":585859,"line_start":626,"line_end":626,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585860,"byte_end":585899,"line_start":627,"line_end":627,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585900,"byte_end":585903,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585904,"byte_end":585926,"line_start":629,"line_end":629,"column_start":1,"column_end":23}},{"value":"/   le_i64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585927,"byte_end":585963,"line_start":630,"line_end":630,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585964,"byte_end":585970,"line_start":631,"line_end":631,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585971,"byte_end":585974,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":585975,"byte_end":586084,"line_start":633,"line_end":633,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586085,"byte_end":586160,"line_start":634,"line_end":634,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586161,"byte_end":586168,"line_start":635,"line_end":635,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586169,"byte_end":586178,"line_start":636,"line_end":636,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586978,"byte_end":586985,"line_start":661,"line_end":661,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::streaming::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586360,"byte_end":586415,"line_start":644,"line_end":644,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586416,"byte_end":586419,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586420,"byte_end":586516,"line_start":646,"line_end":646,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586517,"byte_end":586520,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586521,"byte_end":586532,"line_start":648,"line_end":648,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586533,"byte_end":586580,"line_start":649,"line_end":649,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586581,"byte_end":586621,"line_start":650,"line_end":650,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586622,"byte_end":586625,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586626,"byte_end":586648,"line_start":652,"line_end":652,"column_start":1,"column_end":23}},{"value":"/   le_i128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586649,"byte_end":586686,"line_start":653,"line_end":653,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586687,"byte_end":586693,"line_start":654,"line_end":654,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586694,"byte_end":586697,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586698,"byte_end":586855,"line_start":656,"line_end":656,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586856,"byte_end":586932,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586933,"byte_end":586940,"line_start":658,"line_end":658,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586941,"byte_end":586950,"line_start":659,"line_end":659,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":586951,"byte_end":586970,"line_start":660,"line_end":660,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587731,"byte_end":587733,"line_start":685,"line_end":685,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::streaming::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587156,"byte_end":587197,"line_start":668,"line_end":668,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587198,"byte_end":587201,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587202,"byte_end":587260,"line_start":670,"line_end":670,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587261,"byte_end":587357,"line_start":671,"line_end":671,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587358,"byte_end":587369,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587370,"byte_end":587417,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587418,"byte_end":587446,"line_start":674,"line_end":674,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587447,"byte_end":587482,"line_start":675,"line_end":675,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587483,"byte_end":587486,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587487,"byte_end":587509,"line_start":677,"line_end":677,"column_start":1,"column_end":23}},{"value":"/   u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587510,"byte_end":587542,"line_start":678,"line_end":678,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587543,"byte_end":587549,"line_start":679,"line_end":679,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587550,"byte_end":587553,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587554,"byte_end":587633,"line_start":681,"line_end":681,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587634,"byte_end":587705,"line_start":682,"line_end":682,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587706,"byte_end":587713,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":587714,"byte_end":587723,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589055,"byte_end":589058,"line_start":725,"line_end":725,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::streaming::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588067,"byte_end":588109,"line_start":699,"line_end":699,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588110,"byte_end":588113,"line_start":700,"line_end":700,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588114,"byte_end":588201,"line_start":701,"line_end":701,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588202,"byte_end":588287,"line_start":702,"line_end":702,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588288,"byte_end":588384,"line_start":703,"line_end":703,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588385,"byte_end":588388,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588389,"byte_end":588400,"line_start":705,"line_end":705,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588401,"byte_end":588448,"line_start":706,"line_end":706,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588449,"byte_end":588477,"line_start":707,"line_end":707,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588478,"byte_end":588514,"line_start":708,"line_end":708,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588515,"byte_end":588518,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588519,"byte_end":588541,"line_start":710,"line_end":710,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588542,"byte_end":588605,"line_start":711,"line_end":711,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588606,"byte_end":588612,"line_start":712,"line_end":712,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588613,"byte_end":588616,"line_start":713,"line_end":713,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588617,"byte_end":588694,"line_start":714,"line_end":714,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588695,"byte_end":588770,"line_start":715,"line_end":715,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588771,"byte_end":588774,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588775,"byte_end":588797,"line_start":717,"line_end":717,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588798,"byte_end":588864,"line_start":718,"line_end":718,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588865,"byte_end":588871,"line_start":719,"line_end":719,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588872,"byte_end":588875,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588876,"byte_end":588953,"line_start":721,"line_end":721,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":588954,"byte_end":589029,"line_start":722,"line_end":722,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589030,"byte_end":589037,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589038,"byte_end":589047,"line_start":724,"line_end":724,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590503,"byte_end":590506,"line_start":764,"line_end":764,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::streaming::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589509,"byte_end":589550,"line_start":739,"line_end":739,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589551,"byte_end":589554,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589555,"byte_end":589642,"line_start":741,"line_end":741,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589643,"byte_end":589728,"line_start":742,"line_end":742,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589729,"byte_end":589825,"line_start":743,"line_end":743,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589826,"byte_end":589837,"line_start":744,"line_end":744,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589838,"byte_end":589885,"line_start":745,"line_end":745,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589886,"byte_end":589914,"line_start":746,"line_end":746,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589915,"byte_end":589951,"line_start":747,"line_end":747,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589952,"byte_end":589955,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589956,"byte_end":589978,"line_start":749,"line_end":749,"column_start":1,"column_end":23}},{"value":"/   u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":589979,"byte_end":590041,"line_start":750,"line_end":750,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590042,"byte_end":590048,"line_start":751,"line_end":751,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590049,"byte_end":590052,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590053,"byte_end":590136,"line_start":753,"line_end":753,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590137,"byte_end":590212,"line_start":754,"line_end":754,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590213,"byte_end":590216,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590217,"byte_end":590239,"line_start":756,"line_end":756,"column_start":1,"column_end":23}},{"value":"/   u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590240,"byte_end":590306,"line_start":757,"line_end":757,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590307,"byte_end":590313,"line_start":758,"line_end":758,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590314,"byte_end":590317,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590318,"byte_end":590401,"line_start":760,"line_end":760,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590402,"byte_end":590477,"line_start":761,"line_end":761,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590478,"byte_end":590485,"line_start":762,"line_end":762,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590486,"byte_end":590495,"line_start":763,"line_end":763,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591964,"byte_end":591967,"line_start":803,"line_end":803,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::streaming::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590957,"byte_end":590998,"line_start":778,"line_end":778,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":590999,"byte_end":591002,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591003,"byte_end":591090,"line_start":780,"line_end":780,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591091,"byte_end":591176,"line_start":781,"line_end":781,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591177,"byte_end":591273,"line_start":782,"line_end":782,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591274,"byte_end":591285,"line_start":783,"line_end":783,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591286,"byte_end":591333,"line_start":784,"line_end":784,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591334,"byte_end":591362,"line_start":785,"line_end":785,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591363,"byte_end":591399,"line_start":786,"line_end":786,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591400,"byte_end":591403,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591404,"byte_end":591426,"line_start":788,"line_end":788,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591427,"byte_end":591490,"line_start":789,"line_end":789,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591491,"byte_end":591497,"line_start":790,"line_end":790,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591498,"byte_end":591501,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591502,"byte_end":591591,"line_start":792,"line_end":792,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591592,"byte_end":591667,"line_start":793,"line_end":793,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591668,"byte_end":591671,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591672,"byte_end":591694,"line_start":795,"line_end":795,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591695,"byte_end":591761,"line_start":796,"line_end":796,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591762,"byte_end":591768,"line_start":797,"line_end":797,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591769,"byte_end":591772,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591773,"byte_end":591862,"line_start":799,"line_end":799,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591863,"byte_end":591938,"line_start":800,"line_end":800,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591939,"byte_end":591946,"line_start":801,"line_end":801,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":591947,"byte_end":591956,"line_start":802,"line_end":802,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593473,"byte_end":593476,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::streaming::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592418,"byte_end":592459,"line_start":817,"line_end":817,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592460,"byte_end":592463,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592464,"byte_end":592551,"line_start":819,"line_end":819,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592552,"byte_end":592637,"line_start":820,"line_end":820,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592638,"byte_end":592734,"line_start":821,"line_end":821,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592735,"byte_end":592746,"line_start":822,"line_end":822,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592747,"byte_end":592794,"line_start":823,"line_end":823,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592795,"byte_end":592823,"line_start":824,"line_end":824,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592824,"byte_end":592860,"line_start":825,"line_end":825,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592861,"byte_end":592864,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592865,"byte_end":592887,"line_start":827,"line_end":827,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592888,"byte_end":592951,"line_start":828,"line_end":828,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592952,"byte_end":592958,"line_start":829,"line_end":829,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592959,"byte_end":592962,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":592963,"byte_end":593076,"line_start":831,"line_end":831,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593077,"byte_end":593152,"line_start":832,"line_end":832,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593153,"byte_end":593156,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593157,"byte_end":593179,"line_start":834,"line_end":834,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593180,"byte_end":593246,"line_start":835,"line_end":835,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593247,"byte_end":593253,"line_start":836,"line_end":836,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593254,"byte_end":593257,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593258,"byte_end":593371,"line_start":838,"line_end":838,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593372,"byte_end":593447,"line_start":839,"line_end":839,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593448,"byte_end":593455,"line_start":840,"line_end":840,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593456,"byte_end":593465,"line_start":841,"line_end":841,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595112,"byte_end":595116,"line_start":882,"line_end":882,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::streaming::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593927,"byte_end":593969,"line_start":856,"line_end":856,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593970,"byte_end":593973,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":593974,"byte_end":594062,"line_start":858,"line_end":858,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594063,"byte_end":594149,"line_start":859,"line_end":859,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594150,"byte_end":594246,"line_start":860,"line_end":860,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594247,"byte_end":594258,"line_start":861,"line_end":861,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594259,"byte_end":594306,"line_start":862,"line_end":862,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594307,"byte_end":594335,"line_start":863,"line_end":863,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594336,"byte_end":594373,"line_start":864,"line_end":864,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594374,"byte_end":594377,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594378,"byte_end":594401,"line_start":866,"line_end":866,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594402,"byte_end":594466,"line_start":867,"line_end":867,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594467,"byte_end":594473,"line_start":868,"line_end":868,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594474,"byte_end":594477,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594478,"byte_end":594640,"line_start":870,"line_end":870,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594641,"byte_end":594718,"line_start":871,"line_end":871,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594719,"byte_end":594722,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594723,"byte_end":594746,"line_start":873,"line_end":873,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594747,"byte_end":594814,"line_start":874,"line_end":874,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594815,"byte_end":594821,"line_start":875,"line_end":875,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594822,"byte_end":594825,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594826,"byte_end":594988,"line_start":877,"line_end":877,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":594989,"byte_end":595066,"line_start":878,"line_end":878,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595067,"byte_end":595074,"line_start":879,"line_end":879,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595075,"byte_end":595084,"line_start":880,"line_end":880,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595085,"byte_end":595104,"line_start":881,"line_end":881,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596144,"byte_end":596146,"line_start":913,"line_end":913,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::streaming::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595572,"byte_end":595610,"line_start":896,"line_end":896,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595611,"byte_end":595614,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595615,"byte_end":595673,"line_start":898,"line_end":898,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595674,"byte_end":595770,"line_start":899,"line_end":899,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595771,"byte_end":595782,"line_start":900,"line_end":900,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595783,"byte_end":595830,"line_start":901,"line_end":901,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595831,"byte_end":595859,"line_start":902,"line_end":902,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i8;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595860,"byte_end":595895,"line_start":903,"line_end":903,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595896,"byte_end":595899,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595900,"byte_end":595922,"line_start":905,"line_end":905,"column_start":1,"column_end":23}},{"value":"/   i8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595923,"byte_end":595955,"line_start":906,"line_end":906,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595956,"byte_end":595962,"line_start":907,"line_end":907,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595963,"byte_end":595966,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":595967,"byte_end":596046,"line_start":909,"line_end":909,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596047,"byte_end":596118,"line_start":910,"line_end":910,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596119,"byte_end":596126,"line_start":911,"line_end":911,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596127,"byte_end":596136,"line_start":912,"line_end":912,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597280,"byte_end":597283,"line_start":945,"line_end":945,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::streaming::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596300,"byte_end":596338,"line_start":920,"line_end":920,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596339,"byte_end":596342,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596343,"byte_end":596430,"line_start":922,"line_end":922,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596431,"byte_end":596516,"line_start":923,"line_end":923,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596517,"byte_end":596613,"line_start":924,"line_end":924,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596614,"byte_end":596625,"line_start":925,"line_end":925,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596626,"byte_end":596673,"line_start":926,"line_end":926,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596674,"byte_end":596702,"line_start":927,"line_end":927,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i16;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596703,"byte_end":596739,"line_start":928,"line_end":928,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596740,"byte_end":596743,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596744,"byte_end":596766,"line_start":930,"line_end":930,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596767,"byte_end":596830,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596831,"byte_end":596837,"line_start":932,"line_end":932,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596838,"byte_end":596841,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596842,"byte_end":596919,"line_start":934,"line_end":934,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596920,"byte_end":596995,"line_start":935,"line_end":935,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":596996,"byte_end":596999,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597000,"byte_end":597022,"line_start":937,"line_end":937,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597023,"byte_end":597089,"line_start":938,"line_end":938,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597090,"byte_end":597096,"line_start":939,"line_end":939,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597097,"byte_end":597100,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597101,"byte_end":597178,"line_start":941,"line_end":941,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597179,"byte_end":597254,"line_start":942,"line_end":942,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597255,"byte_end":597262,"line_start":943,"line_end":943,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597263,"byte_end":597272,"line_start":944,"line_end":944,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598726,"byte_end":598729,"line_start":984,"line_end":984,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::streaming::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597734,"byte_end":597772,"line_start":959,"line_end":959,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597773,"byte_end":597776,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597777,"byte_end":597864,"line_start":961,"line_end":961,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597865,"byte_end":597950,"line_start":962,"line_end":962,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":597951,"byte_end":598047,"line_start":963,"line_end":963,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598048,"byte_end":598059,"line_start":964,"line_end":964,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598060,"byte_end":598107,"line_start":965,"line_end":965,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598108,"byte_end":598136,"line_start":966,"line_end":966,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i24;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598137,"byte_end":598173,"line_start":967,"line_end":967,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598174,"byte_end":598177,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598178,"byte_end":598200,"line_start":969,"line_end":969,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598201,"byte_end":598264,"line_start":970,"line_end":970,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598265,"byte_end":598271,"line_start":971,"line_end":971,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598272,"byte_end":598275,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598276,"byte_end":598359,"line_start":973,"line_end":973,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598360,"byte_end":598435,"line_start":974,"line_end":974,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598436,"byte_end":598439,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598440,"byte_end":598462,"line_start":976,"line_end":976,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598463,"byte_end":598529,"line_start":977,"line_end":977,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598530,"byte_end":598536,"line_start":978,"line_end":978,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598537,"byte_end":598540,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598541,"byte_end":598624,"line_start":980,"line_end":980,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598625,"byte_end":598700,"line_start":981,"line_end":981,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598701,"byte_end":598708,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":598709,"byte_end":598718,"line_start":983,"line_end":983,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600184,"byte_end":600187,"line_start":1023,"line_end":1023,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::streaming::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599180,"byte_end":599218,"line_start":998,"line_end":998,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599219,"byte_end":599222,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599223,"byte_end":599310,"line_start":1000,"line_end":1000,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599311,"byte_end":599396,"line_start":1001,"line_end":1001,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599397,"byte_end":599493,"line_start":1002,"line_end":1002,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599494,"byte_end":599505,"line_start":1003,"line_end":1003,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599506,"byte_end":599553,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599554,"byte_end":599582,"line_start":1005,"line_end":1005,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599583,"byte_end":599619,"line_start":1006,"line_end":1006,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599620,"byte_end":599623,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599624,"byte_end":599646,"line_start":1008,"line_end":1008,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599647,"byte_end":599710,"line_start":1009,"line_end":1009,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599711,"byte_end":599717,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599718,"byte_end":599721,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599722,"byte_end":599811,"line_start":1012,"line_end":1012,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599812,"byte_end":599887,"line_start":1013,"line_end":1013,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599888,"byte_end":599891,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599892,"byte_end":599914,"line_start":1015,"line_end":1015,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599915,"byte_end":599981,"line_start":1016,"line_end":1016,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599982,"byte_end":599988,"line_start":1017,"line_end":1017,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599989,"byte_end":599992,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":599993,"byte_end":600082,"line_start":1019,"line_end":1019,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600083,"byte_end":600158,"line_start":1020,"line_end":1020,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600159,"byte_end":600166,"line_start":1021,"line_end":1021,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600167,"byte_end":600176,"line_start":1022,"line_end":1022,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601690,"byte_end":601693,"line_start":1062,"line_end":1062,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::streaming::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600638,"byte_end":600676,"line_start":1037,"line_end":1037,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600677,"byte_end":600680,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600681,"byte_end":600768,"line_start":1039,"line_end":1039,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600769,"byte_end":600854,"line_start":1040,"line_end":1040,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600855,"byte_end":600951,"line_start":1041,"line_end":1041,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600952,"byte_end":600963,"line_start":1042,"line_end":1042,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":600964,"byte_end":601011,"line_start":1043,"line_end":1043,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601012,"byte_end":601040,"line_start":1044,"line_end":1044,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601041,"byte_end":601077,"line_start":1045,"line_end":1045,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601078,"byte_end":601081,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601082,"byte_end":601104,"line_start":1047,"line_end":1047,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601105,"byte_end":601168,"line_start":1048,"line_end":1048,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601169,"byte_end":601175,"line_start":1049,"line_end":1049,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601176,"byte_end":601179,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601180,"byte_end":601293,"line_start":1051,"line_end":1051,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601294,"byte_end":601369,"line_start":1052,"line_end":1052,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601370,"byte_end":601373,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601374,"byte_end":601396,"line_start":1054,"line_end":1054,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601397,"byte_end":601463,"line_start":1055,"line_end":1055,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601464,"byte_end":601470,"line_start":1056,"line_end":1056,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601471,"byte_end":601474,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601475,"byte_end":601588,"line_start":1058,"line_end":1058,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601589,"byte_end":601664,"line_start":1059,"line_end":1059,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601665,"byte_end":601672,"line_start":1060,"line_end":1060,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":601673,"byte_end":601682,"line_start":1061,"line_end":1061,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603326,"byte_end":603330,"line_start":1102,"line_end":1102,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::streaming::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602144,"byte_end":602183,"line_start":1076,"line_end":1076,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602184,"byte_end":602187,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602188,"byte_end":602276,"line_start":1078,"line_end":1078,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602277,"byte_end":602363,"line_start":1079,"line_end":1079,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602364,"byte_end":602460,"line_start":1080,"line_end":1080,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602461,"byte_end":602472,"line_start":1081,"line_end":1081,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602473,"byte_end":602520,"line_start":1082,"line_end":1082,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602521,"byte_end":602549,"line_start":1083,"line_end":1083,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i128;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602550,"byte_end":602587,"line_start":1084,"line_end":1084,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602588,"byte_end":602591,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602592,"byte_end":602615,"line_start":1086,"line_end":1086,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602616,"byte_end":602680,"line_start":1087,"line_end":1087,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602681,"byte_end":602687,"line_start":1088,"line_end":1088,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602688,"byte_end":602691,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602692,"byte_end":602854,"line_start":1090,"line_end":1090,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602855,"byte_end":602932,"line_start":1091,"line_end":1091,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602933,"byte_end":602936,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602937,"byte_end":602960,"line_start":1093,"line_end":1093,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":602961,"byte_end":603028,"line_start":1094,"line_end":1094,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603029,"byte_end":603035,"line_start":1095,"line_end":1095,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603036,"byte_end":603039,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603040,"byte_end":603202,"line_start":1097,"line_end":1097,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603203,"byte_end":603280,"line_start":1098,"line_end":1098,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603281,"byte_end":603288,"line_start":1099,"line_end":1099,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603289,"byte_end":603298,"line_start":1100,"line_end":1100,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603299,"byte_end":603318,"line_start":1101,"line_end":1101,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604302,"byte_end":604308,"line_start":1131,"line_end":1131,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::streaming::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603786,"byte_end":603844,"line_start":1116,"line_end":1116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603845,"byte_end":603848,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603849,"byte_end":603945,"line_start":1118,"line_end":1118,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603946,"byte_end":603957,"line_start":1119,"line_end":1119,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":603958,"byte_end":604005,"line_start":1120,"line_end":1120,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604006,"byte_end":604045,"line_start":1121,"line_end":1121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604046,"byte_end":604049,"line_start":1122,"line_end":1122,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604050,"byte_end":604072,"line_start":1123,"line_end":1123,"column_start":1,"column_end":23}},{"value":"/   be_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604073,"byte_end":604109,"line_start":1124,"line_end":1124,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604110,"byte_end":604116,"line_start":1125,"line_end":1125,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604117,"byte_end":604120,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604121,"byte_end":604201,"line_start":1127,"line_end":1127,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604202,"byte_end":604276,"line_start":1128,"line_end":1128,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604277,"byte_end":604284,"line_start":1129,"line_end":1129,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604285,"byte_end":604294,"line_start":1130,"line_end":1130,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605072,"byte_end":605078,"line_start":1156,"line_end":1156,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::streaming::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604536,"byte_end":604594,"line_start":1141,"line_end":1141,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604595,"byte_end":604598,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604599,"byte_end":604695,"line_start":1143,"line_end":1143,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604696,"byte_end":604707,"line_start":1144,"line_end":1144,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604708,"byte_end":604755,"line_start":1145,"line_end":1145,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604756,"byte_end":604795,"line_start":1146,"line_end":1146,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604796,"byte_end":604799,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604800,"byte_end":604822,"line_start":1148,"line_end":1148,"column_start":1,"column_end":23}},{"value":"/   be_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604823,"byte_end":604859,"line_start":1149,"line_end":1149,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604860,"byte_end":604866,"line_start":1150,"line_end":1150,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604867,"byte_end":604870,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604871,"byte_end":604971,"line_start":1152,"line_end":1152,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":604972,"byte_end":605046,"line_start":1153,"line_end":1153,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605047,"byte_end":605054,"line_start":1154,"line_end":1154,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605055,"byte_end":605064,"line_start":1155,"line_end":1155,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605821,"byte_end":605827,"line_start":1181,"line_end":1181,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::streaming::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605306,"byte_end":605367,"line_start":1166,"line_end":1166,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605368,"byte_end":605371,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605372,"byte_end":605468,"line_start":1168,"line_end":1168,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605469,"byte_end":605480,"line_start":1169,"line_end":1169,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605481,"byte_end":605528,"line_start":1170,"line_end":1170,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605529,"byte_end":605568,"line_start":1171,"line_end":1171,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605569,"byte_end":605572,"line_start":1172,"line_end":1172,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605573,"byte_end":605595,"line_start":1173,"line_end":1173,"column_start":1,"column_end":23}},{"value":"/   le_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605596,"byte_end":605632,"line_start":1174,"line_end":1174,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605633,"byte_end":605639,"line_start":1175,"line_end":1175,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605640,"byte_end":605643,"line_start":1176,"line_end":1176,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605644,"byte_end":605720,"line_start":1177,"line_end":1177,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605721,"byte_end":605795,"line_start":1178,"line_end":1178,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605796,"byte_end":605803,"line_start":1179,"line_end":1179,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":605804,"byte_end":605813,"line_start":1180,"line_end":1180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606599,"byte_end":606605,"line_start":1206,"line_end":1206,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::streaming::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606055,"byte_end":606116,"line_start":1191,"line_end":1191,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606117,"byte_end":606120,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606121,"byte_end":606217,"line_start":1193,"line_end":1193,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606218,"byte_end":606229,"line_start":1194,"line_end":1194,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606230,"byte_end":606277,"line_start":1195,"line_end":1195,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606278,"byte_end":606317,"line_start":1196,"line_end":1196,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606318,"byte_end":606321,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606322,"byte_end":606344,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/   le_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606345,"byte_end":606381,"line_start":1199,"line_end":1199,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606382,"byte_end":606388,"line_start":1200,"line_end":1200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606389,"byte_end":606392,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606393,"byte_end":606498,"line_start":1202,"line_end":1202,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606499,"byte_end":606573,"line_start":1203,"line_end":1203,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606574,"byte_end":606581,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606582,"byte_end":606591,"line_start":1205,"line_end":1205,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607812,"byte_end":607815,"line_start":1241,"line_end":1241,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::streaming::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606833,"byte_end":606878,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606879,"byte_end":606882,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606883,"byte_end":606968,"line_start":1218,"line_end":1218,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":606969,"byte_end":607052,"line_start":1219,"line_end":1219,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607053,"byte_end":607149,"line_start":1220,"line_end":1220,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607150,"byte_end":607161,"line_start":1221,"line_end":1221,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607162,"byte_end":607209,"line_start":1222,"line_end":1222,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607210,"byte_end":607238,"line_start":1223,"line_end":1223,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607239,"byte_end":607275,"line_start":1224,"line_end":1224,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607276,"byte_end":607279,"line_start":1225,"line_end":1225,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607280,"byte_end":607302,"line_start":1226,"line_end":1226,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607303,"byte_end":607366,"line_start":1227,"line_end":1227,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607367,"byte_end":607373,"line_start":1228,"line_end":1228,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607374,"byte_end":607377,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607378,"byte_end":607454,"line_start":1230,"line_end":1230,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607455,"byte_end":607529,"line_start":1231,"line_end":1231,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607530,"byte_end":607533,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607534,"byte_end":607556,"line_start":1233,"line_end":1233,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607557,"byte_end":607623,"line_start":1234,"line_end":1234,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607624,"byte_end":607630,"line_start":1235,"line_end":1235,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607631,"byte_end":607634,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607635,"byte_end":607711,"line_start":1237,"line_end":1237,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607712,"byte_end":607786,"line_start":1238,"line_end":1238,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607787,"byte_end":607794,"line_start":1239,"line_end":1239,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":607795,"byte_end":607804,"line_start":1240,"line_end":1240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609294,"byte_end":609297,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::streaming::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608266,"byte_end":608312,"line_start":1255,"line_end":1255,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608313,"byte_end":608316,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608317,"byte_end":608402,"line_start":1257,"line_end":1257,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608403,"byte_end":608486,"line_start":1258,"line_end":1258,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608487,"byte_end":608583,"line_start":1259,"line_end":1259,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608584,"byte_end":608595,"line_start":1260,"line_end":1260,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608596,"byte_end":608643,"line_start":1261,"line_end":1261,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608644,"byte_end":608672,"line_start":1262,"line_end":1262,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f64;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608673,"byte_end":608709,"line_start":1263,"line_end":1263,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608710,"byte_end":608713,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608714,"byte_end":608736,"line_start":1265,"line_end":1265,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608737,"byte_end":608800,"line_start":1266,"line_end":1266,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608801,"byte_end":608807,"line_start":1267,"line_end":1267,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608808,"byte_end":608811,"line_start":1268,"line_end":1268,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608812,"byte_end":608912,"line_start":1269,"line_end":1269,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608913,"byte_end":608987,"line_start":1270,"line_end":1270,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608988,"byte_end":608991,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":608992,"byte_end":609014,"line_start":1272,"line_end":1272,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609015,"byte_end":609081,"line_start":1273,"line_end":1273,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609082,"byte_end":609088,"line_start":1274,"line_end":1274,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609089,"byte_end":609092,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609093,"byte_end":609193,"line_start":1276,"line_end":1276,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609194,"byte_end":609268,"line_start":1277,"line_end":1277,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609269,"byte_end":609276,"line_start":1278,"line_end":1278,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609277,"byte_end":609286,"line_start":1279,"line_end":1279,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3004},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610277,"byte_end":610284,"line_start":1310,"line_end":1310,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::streaming::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609748,"byte_end":609785,"line_start":1294,"line_end":1294,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609786,"byte_end":609789,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609790,"byte_end":609886,"line_start":1296,"line_end":1296,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609887,"byte_end":609898,"line_start":1297,"line_end":1297,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609899,"byte_end":609946,"line_start":1298,"line_end":1298,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::hex_u32;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609947,"byte_end":609987,"line_start":1299,"line_end":1299,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609988,"byte_end":609991,"line_start":1300,"line_end":1300,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":609992,"byte_end":610014,"line_start":1301,"line_end":1301,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610015,"byte_end":610031,"line_start":1302,"line_end":1302,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610032,"byte_end":610038,"line_start":1303,"line_end":1303,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610039,"byte_end":610042,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610043,"byte_end":610101,"line_start":1305,"line_end":1305,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610102,"byte_end":610171,"line_start":1306,"line_end":1306,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610172,"byte_end":610251,"line_start":1307,"line_end":1307,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610252,"byte_end":610259,"line_start":1308,"line_end":1308,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610260,"byte_end":610269,"line_start":1309,"line_end":1309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6599},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611491,"byte_end":611506,"line_start":1352,"line_end":1352,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::streaming::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the corresponding part of the input.","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the corresponding part of the input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610809,"byte_end":610911,"line_start":1333,"line_end":1333,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610912,"byte_end":610915,"line_start":1334,"line_end":1334,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":610916,"byte_end":611015,"line_start":1335,"line_end":1335,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611016,"byte_end":611019,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611020,"byte_end":611031,"line_start":1337,"line_end":1337,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611032,"byte_end":611079,"line_start":1338,"line_end":1338,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::recognize_float;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611080,"byte_end":611128,"line_start":1339,"line_end":1339,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611129,"byte_end":611132,"line_start":1340,"line_end":1340,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611133,"byte_end":611155,"line_start":1341,"line_end":1341,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611156,"byte_end":611180,"line_start":1342,"line_end":1342,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611181,"byte_end":611187,"line_start":1343,"line_end":1343,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611188,"byte_end":611191,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611192,"byte_end":611245,"line_start":1345,"line_end":1345,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611246,"byte_end":611303,"line_start":1346,"line_end":1346,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611304,"byte_end":611359,"line_start":1347,"line_end":1347,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611360,"byte_end":611433,"line_start":1348,"line_end":1348,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611434,"byte_end":611441,"line_start":1349,"line_end":1349,"column_start":1,"column_end":8}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611442,"byte_end":611466,"line_start":1350,"line_end":1350,"column_start":1,"column_end":25}},{"value":"rustfmt::skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":611467,"byte_end":611483,"line_start":1351,"line_end":1351,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612741,"byte_end":612746,"line_start":1394,"line_end":1394,"column_start":8,"column_end":13},"name":"float","qualname":"::number::streaming::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f32>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f32`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f32`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612129,"byte_end":612203,"line_start":1377,"line_end":1377,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612204,"byte_end":612207,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612208,"byte_end":612307,"line_start":1379,"line_end":1379,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612308,"byte_end":612319,"line_start":1380,"line_end":1380,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612320,"byte_end":612367,"line_start":1381,"line_end":1381,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::float;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612368,"byte_end":612406,"line_start":1382,"line_end":1382,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612407,"byte_end":612410,"line_start":1383,"line_end":1383,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612411,"byte_end":612433,"line_start":1384,"line_end":1384,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612434,"byte_end":612448,"line_start":1385,"line_end":1385,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612449,"byte_end":612455,"line_start":1386,"line_end":1386,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612456,"byte_end":612459,"line_start":1387,"line_end":1387,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612460,"byte_end":612509,"line_start":1388,"line_end":1388,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612510,"byte_end":612562,"line_start":1389,"line_end":1389,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612563,"byte_end":612618,"line_start":1390,"line_end":1390,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612619,"byte_end":612692,"line_start":1391,"line_end":1391,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612693,"byte_end":612700,"line_start":1392,"line_end":1392,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":612701,"byte_end":612733,"line_start":1393,"line_end":1393,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":615090,"byte_end":615096,"line_start":1465,"line_end":1465,"column_start":8,"column_end":14},"name":"double","qualname":"::number::streaming::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + crate::traits::ParseTo<f64>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns a `f64`.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns a `f64`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614476,"byte_end":614550,"line_start":1448,"line_end":1448,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614551,"byte_end":614554,"line_start":1449,"line_end":1449,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614555,"byte_end":614654,"line_start":1450,"line_end":1450,"column_start":1,"column_end":100}},{"value":"/ ```rust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614655,"byte_end":614666,"line_start":1451,"line_end":1451,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614667,"byte_end":614714,"line_start":1452,"line_end":1452,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::double;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614715,"byte_end":614754,"line_start":1453,"line_end":1453,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614755,"byte_end":614758,"line_start":1454,"line_end":1454,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614759,"byte_end":614781,"line_start":1455,"line_end":1455,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614782,"byte_end":614797,"line_start":1456,"line_end":1456,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614798,"byte_end":614804,"line_start":1457,"line_end":1457,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614805,"byte_end":614808,"line_start":1458,"line_end":1458,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", 1.1)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614809,"byte_end":614858,"line_start":1459,"line_end":1459,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", 1.23)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614859,"byte_end":614911,"line_start":1460,"line_end":1460,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614912,"byte_end":614967,"line_start":1461,"line_end":1461,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":614968,"byte_end":615041,"line_start":1462,"line_end":1462,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":615042,"byte_end":615049,"line_start":1463,"line_end":1463,"column_start":1,"column_end":8}},{"value":"cfg(not(feature = \"lexical\"))","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/streaming.rs","byte_start":615050,"byte_end":615082,"line_start":1464,"line_end":1464,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6605},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497400,"byte_end":497403,"line_start":13,"line_end":13,"column_start":3,"column_end":6},"name":"Big","qualname":"::number::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":6604},"children":[],"decl_id":null,"docs":" Big endian\n","sig":null,"attributes":[{"value":"/ Big endian","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497383,"byte_end":497397,"line_start":12,"line_end":12,"column_start":3,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6607},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497427,"byte_end":497433,"line_start":15,"line_end":15,"column_start":3,"column_end":9},"name":"Little","qualname":"::number::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":6604},"children":[],"decl_id":null,"docs":" Little endian\n","sig":null,"attributes":[{"value":"/ Little endian","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497407,"byte_end":497424,"line_start":14,"line_end":14,"column_start":3,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6609},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497476,"byte_end":497482,"line_start":17,"line_end":17,"column_start":3,"column_end":9},"name":"Native","qualname":"::number::Endianness::Native","value":"Endianness::Native","parent":{"krate":0,"index":6604},"children":[],"decl_id":null,"docs":" Will match the host's endianness\n","sig":null,"attributes":[{"value":"/ Will match the host's endianness","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497437,"byte_end":497473,"line_start":16,"line_end":16,"column_start":3,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6604},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497368,"byte_end":497378,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::number::Endianness","value":"pub enum Endianness { Big, Little, Native, }","parent":null,"children":[{"krate":0,"index":6605},{"krate":0,"index":6607},{"krate":0,"index":6609}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497286,"byte_end":497313,"line_start":9,"line_end":9,"column_start":1,"column_end":28}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24993,"byte_end":24998,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25149,"byte_end":25154,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25355,"byte_end":25360,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25407,"byte_end":25412,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25710,"byte_end":25715,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25928,"byte_end":25933,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28297,"byte_end":28309,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28850,"byte_end":28862,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29148,"byte_end":29160,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29416,"byte_end":29428,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29955,"byte_end":29967,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37688,"byte_end":37697,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51996,"byte_end":52003,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52735,"byte_end":52741,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54521,"byte_end":54524,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55198,"byte_end":55201,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55723,"byte_end":55726,"line_start":156,"line_end":156,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55969,"byte_end":55972,"line_start":165,"line_end":165,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56254,"byte_end":56257,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56290,"byte_end":56293,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56797,"byte_end":56800,"line_start":193,"line_end":193,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58984,"byte_end":58985,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59217,"byte_end":59220,"line_start":295,"line_end":295,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59578,"byte_end":59581,"line_start":309,"line_end":309,"column_start":83,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60025,"byte_end":60032,"line_start":327,"line_end":327,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60423,"byte_end":60430,"line_start":344,"line_end":344,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60798,"byte_end":60801,"line_start":361,"line_end":361,"column_start":7,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61196,"byte_end":61198,"line_start":378,"line_end":378,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61956,"byte_end":61960,"line_start":409,"line_end":409,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65356,"byte_end":65364,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":66529,"byte_end":66537,"line_start":174,"line_end":174,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77917,"byte_end":77918,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":86317,"byte_end":86318,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98175,"byte_end":98183,"line_start":1487,"line_end":1487,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100293,"byte_end":100298,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100493,"byte_end":100498,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100781,"byte_end":100793,"line_start":1613,"line_end":1613,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":101118,"byte_end":101130,"line_start":1623,"line_end":1623,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124639,"byte_end":124653,"line_start":852,"line_end":852,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16589,"byte_end":16594,"line_start":491,"line_end":491,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16657,"byte_end":16667,"line_start":497,"line_end":497,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":925}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16690,"byte_end":16696,"line_start":499,"line_end":499,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1294}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16719,"byte_end":16727,"line_start":501,"line_end":501,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1349}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16750,"byte_end":16755,"line_start":503,"line_end":503,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1484}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16779,"byte_end":16784,"line_start":506,"line_end":506,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1739}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/mod.rs","byte_start":310695,"byte_end":310703,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1756}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bytes/mod.rs","byte_start":310713,"byte_end":310722,"line_start":6,"line_end":6,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1924}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16807,"byte_end":16811,"line_start":508,"line_end":508,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2094}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388363,"byte_end":388371,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2100}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/bits/mod.rs","byte_start":388381,"byte_end":388390,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2159}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16835,"byte_end":16844,"line_start":511,"line_end":511,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2277}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408063,"byte_end":408071,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2282}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/character/mod.rs","byte_start":408081,"byte_end":408090,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2434}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/lib.rs","byte_start":16997,"byte_end":17003,"line_start":521,"line_end":521,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2597}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497256,"byte_end":497264,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2607}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/number/mod.rs","byte_start":497274,"byte_end":497283,"line_start":7,"line_end":7,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2812}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":23191,"byte_end":23196,"line_start":16,"line_end":16,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":105}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24066,"byte_end":24071,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":24993,"byte_end":24998,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25149,"byte_end":25154,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3014},"to":{"krate":0,"index":105}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25355,"byte_end":25360,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3014},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25407,"byte_end":25412,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3014},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25710,"byte_end":25715,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3014},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":25928,"byte_end":25933,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3014},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28297,"byte_end":28309,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":105}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":28850,"byte_end":28862,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29148,"byte_end":29160,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29416,"byte_end":29428,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3027},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":29955,"byte_end":29967,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3027},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/error.rs","byte_start":37688,"byte_end":37697,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":51996,"byte_end":52003,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":224},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":52735,"byte_end":52741,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":54521,"byte_end":54524,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55198,"byte_end":55201,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55723,"byte_end":55726,"line_start":156,"line_end":156,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":55969,"byte_end":55972,"line_start":165,"line_end":165,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56254,"byte_end":56257,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3201},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56290,"byte_end":56293,"line_start":175,"line_end":175,"column_start":26,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3201},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":56797,"byte_end":56800,"line_start":193,"line_end":193,"column_start":19,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3201},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":58984,"byte_end":58985,"line_start":282,"line_end":282,"column_start":42,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":309},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59217,"byte_end":59220,"line_start":295,"line_end":295,"column_start":39,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":59578,"byte_end":59581,"line_start":309,"line_end":309,"column_start":83,"column_end":86},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":320},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60025,"byte_end":60032,"line_start":327,"line_end":327,"column_start":7,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":336},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60423,"byte_end":60430,"line_start":344,"line_end":344,"column_start":7,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":353},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":60798,"byte_end":60801,"line_start":361,"line_end":361,"column_start":7,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61196,"byte_end":61198,"line_start":378,"line_end":378,"column_start":23,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/internal.rs","byte_start":61956,"byte_end":61960,"line_start":409,"line_end":409,"column_start":27,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":396},"to":{"krate":0,"index":281}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":65356,"byte_end":65364,"line_start":105,"line_end":105,"column_start":23,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":18,"index":1263},"to":{"krate":0,"index":493}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":66529,"byte_end":66537,"line_start":174,"line_end":174,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":18,"index":1263},"to":{"krate":0,"index":514}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":71842,"byte_end":71847,"line_start":407,"line_end":407,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":585}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":75941,"byte_end":75946,"line_start":578,"line_end":578,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":636}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":77917,"byte_end":77918,"line_start":633,"line_end":633,"column_start":7,"column_end":8},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":651},"to":{"krate":0,"index":636}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":86317,"byte_end":86318,"line_start":979,"line_end":979,"column_start":20,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":722}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":98175,"byte_end":98183,"line_start":1487,"line_end":1487,"column_start":27,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":18,"index":1263},"to":{"krate":0,"index":842}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100293,"byte_end":100298,"line_start":1593,"line_end":1593,"column_start":50,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3014},"to":{"krate":0,"index":899}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100493,"byte_end":100498,"line_start":1602,"line_end":1602,"column_start":59,"column_end":64},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3014},"to":{"krate":0,"index":899}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":100781,"byte_end":100793,"line_start":1613,"line_end":1613,"column_start":57,"column_end":69},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":899}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/traits.rs","byte_start":101118,"byte_end":101130,"line_start":1623,"line_end":1623,"column_start":66,"column_end":78},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":899}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-6.2.1/src/combinator/mod.rs","byte_start":124639,"byte_end":124653,"line_start":852,"line_end":852,"column_start":22,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}}]}