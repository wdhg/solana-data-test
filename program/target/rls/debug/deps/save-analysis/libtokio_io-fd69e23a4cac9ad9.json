{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13","program":"/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_io","/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=fd69e23a4cac9ad9","-C","extra-filename=-fd69e23a4cac9ad9","--out-dir","/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","-L","dependency=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps","--extern","bytes=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libbytes-447d4812eec8f18a.rmeta","--extern","futures=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libfutures-e658606375be5f9d.rmeta","--extern","log=/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/liblog-8ba8f2dc4ee8272b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/wdhg/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/wdhg/Dev/solana/solana-data-test/target/rls/debug/deps/libtokio_io-fd69e23a4cac9ad9.rmeta"},"prelude":{"crate_id":{"name":"tokio_io","disambiguator":[2629597093878324443,0]},"crate_root":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src","external_crates":[{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9888355131369537266,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11275466351773074568,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14505302196044876161,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12672318884608983985,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9602480897548461658,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6215642551405411717,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11323364399412649918,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[505106994998565642,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5151717038203672608,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12015404889719386584,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6634436157752397486,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10627139614780737919,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15241097753775192730,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4193977997774401605,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4301272078305384557,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12250611045243811845,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8394371263132856076,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":18,"id":{"name":"log","disambiguator":[18072682390500885843,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[3837542141301491945,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":20,"id":{"name":"futures","disambiguator":[2023037260997866914,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":21,"id":{"name":"bytes","disambiguator":[2436125391624493784,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":22,"id":{"name":"byteorder","disambiguator":[16014862732876121180,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":23,"id":{"name":"iovec","disambiguator":[141642684090034266,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[15030351460787452080,0]}},{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","num":25,"id":{"name":"either","disambiguator":[10256191035377449052,0]}}],"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":0,"byte_end":2155,"line_start":1,"line_end":75,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2962,"byte_end":2972,"line_start":26,"line_end":26,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2997,"byte_end":3004,"line_start":27,"line_end":27,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3029,"byte_end":3036,"line_start":28,"line_end":28,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1672},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3065,"byte_end":3075,"line_start":29,"line_end":29,"column_start":28,"column_end":38},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3095,"byte_end":3101,"line_start":31,"line_end":31,"column_start":18,"column_end":24},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3103,"byte_end":3114,"line_start":31,"line_end":31,"column_start":26,"column_end":37},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3138,"byte_end":3148,"line_start":32,"line_end":32,"column_start":22,"column_end":32},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1247},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3172,"byte_end":3183,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":21}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16346,"byte_end":16347,"line_start":377,"line_end":377,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":153}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27252,"byte_end":27256,"line_start":21,"line_end":21,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1692},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27258,"byte_end":27262,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27287,"byte_end":27292,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"flush","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27294,"byte_end":27299,"line_start":22,"line_end":22,"column_start":30,"column_end":35},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27323,"byte_end":27327,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27329,"byte_end":27333,"line_start":23,"line_end":23,"column_start":28,"column_end":32},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27363,"byte_end":27373,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"alias_span":null,"name":"read_exact","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27375,"byte_end":27384,"line_start":24,"line_end":24,"column_start":40,"column_end":49},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27415,"byte_end":27426,"line_start":25,"line_end":25,"column_start":29,"column_end":40},"alias_span":null,"name":"read_to_end","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27428,"byte_end":27437,"line_start":25,"line_end":25,"column_start":42,"column_end":51},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27467,"byte_end":27477,"line_start":26,"line_end":26,"column_start":28,"column_end":38},"alias_span":null,"name":"read_until","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1769},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27479,"byte_end":27488,"line_start":26,"line_end":26,"column_start":40,"column_end":49},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27516,"byte_end":27524,"line_start":27,"line_end":27,"column_start":26,"column_end":34},"alias_span":null,"name":"shutdown","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1786},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27526,"byte_end":27534,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27563,"byte_end":27572,"line_start":28,"line_end":28,"column_start":27,"column_end":36},"alias_span":null,"name":"write_all","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1792},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27574,"byte_end":27582,"line_start":28,"line_end":28,"column_start":38,"column_end":46},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1825},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27604,"byte_end":27614,"line_start":29,"line_end":29,"column_start":20,"column_end":30},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27632,"byte_end":27637,"line_start":30,"line_end":30,"column_start":17,"column_end":22},"alias_span":null,"name":"lines","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27639,"byte_end":27644,"line_start":30,"line_end":30,"column_start":24,"column_end":29},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1907},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27663,"byte_end":27671,"line_start":31,"line_end":31,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1913},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27673,"byte_end":27682,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27701,"byte_end":27707,"line_start":32,"line_end":32,"column_start":17,"column_end":23},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/decoder.rs","byte_start":44284,"byte_end":44291,"line_start":3,"line_end":3,"column_start":16,"column_end":23},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":441}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/encoder.rs","byte_start":44381,"byte_end":44388,"line_start":3,"line_end":3,"column_start":16,"column_end":23},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":445}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44030,"byte_end":44037,"line_start":32,"line_end":32,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44062,"byte_end":44069,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44094,"byte_end":44100,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":1813},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44102,"byte_end":44113,"line_start":34,"line_end":34,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44143,"byte_end":44153,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":44183,"byte_end":44194,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":901},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":1982,"byte_end":1991,"line_start":68,"line_end":68,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":2020,"byte_end":2030,"line_start":69,"line_end":69,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":0,"byte_end":2155,"line_start":1,"line_end":75,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":155},{"krate":0,"index":440},{"krate":0,"index":815},{"krate":0,"index":860},{"krate":0,"index":919},{"krate":0,"index":975},{"krate":0,"index":1109},{"krate":0,"index":1197},{"krate":0,"index":1316},{"krate":0,"index":1528},{"krate":0,"index":1559},{"krate":0,"index":1621},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647}],"decl_id":null,"docs":" Core I/O traits and combinators when working with Tokio.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ Core I/O traits and combinators when working with Tokio.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":114,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ > **Note:** This crate has been **deprecated in tokio 0.2.x** and has been","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":179,"byte_end":257,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ > moved into [`tokio::io`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":258,"byte_end":289,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":290,"byte_end":293,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: https://docs.rs/tokio/latest/tokio/io/index.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":294,"byte_end":361,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":362,"byte_end":365,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A description of the high-level I/O combinators can be [found online] in","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":366,"byte_end":442,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ addition to a description of the [low level details].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":443,"byte_end":500,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":501,"byte_end":504,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [found online]: https://tokio.rs/docs/getting-started/core/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":505,"byte_end":568,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ [low level details]: https://tokio.rs/docs/going-deeper-tokio/core-low-level/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":569,"byte_end":650,"line_start":15,"line_end":15,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":886,"byte_end":894,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"IoFuture","qualname":"::IoFuture","value":"Box<dyn Future<Item = T, Error = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A convenience typedef around a `Future` whose error component is `io::Error`\n","sig":null,"attributes":[{"value":"/ A convenience typedef around a `Future` whose error component is `io::Error`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":796,"byte_end":876,"line_start":28,"line_end":28,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":1048,"byte_end":1056,"line_start":32,"line_end":32,"column_start":10,"column_end":18},"name":"IoStream","qualname":"::IoStream","value":"Box<dyn Stream<Item = T, Error = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A convenience typedef around a `Stream` whose error component is `io::Error`\n","sig":null,"attributes":[{"value":"/ A convenience typedef around a `Stream` whose error component is `io::Error`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":958,"byte_end":1038,"line_start":31,"line_end":31,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":53},{"krate":0,"index":80},{"krate":0,"index":91},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2157,"byte_end":2204,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2205,"byte_end":2208,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2209,"byte_end":2277,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2278,"byte_end":2353,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as [transports].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2354,"byte_end":2404,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2405,"byte_end":2408,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2409,"byte_end":2429,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ [`AsyncWrite`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2430,"byte_end":2451,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/ [`Sink`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2452,"byte_end":2467,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/ [`Stream`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2468,"byte_end":2485,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ [transports]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2486,"byte_end":2505,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":2851,"byte_end":2872,"line_start":19,"line_end":19,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16665,"byte_end":16675,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16458,"byte_end":16523,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"deprecated(since = \"0.1.7\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16592,"byte_end":16653,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16777,"byte_end":16780,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16704,"byte_end":16765,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18200,"byte_end":18207,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17527,"byte_end":17562,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17563,"byte_end":17566,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17567,"byte_end":17634,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17635,"byte_end":17712,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17713,"byte_end":17785,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17786,"byte_end":17810,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17811,"byte_end":17814,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17815,"byte_end":17883,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17884,"byte_end":17961,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":17962,"byte_end":18023,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18255,"byte_end":18259,"line_start":24,"line_end":24,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18214,"byte_end":18245,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18966,"byte_end":18971,"line_start":39,"line_end":39,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18266,"byte_end":18318,"line_start":26,"line_end":26,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18323,"byte_end":18326,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18331,"byte_end":18400,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18405,"byte_end":18475,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18480,"byte_end":18526,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18531,"byte_end":18534,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18539,"byte_end":18615,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18620,"byte_end":18693,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18698,"byte_end":18773,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18778,"byte_end":18818,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18823,"byte_end":18826,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18831,"byte_end":18905,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18910,"byte_end":18956,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20398,"byte_end":20404,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":18995,"byte_end":19060,"line_start":41,"line_end":41,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19065,"byte_end":19068,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19073,"byte_end":19145,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19150,"byte_end":19223,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19228,"byte_end":19301,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19306,"byte_end":19349,"line_start":46,"line_end":46,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19354,"byte_end":19357,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19362,"byte_end":19435,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19440,"byte_end":19503,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19508,"byte_end":19583,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19588,"byte_end":19663,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19668,"byte_end":19691,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19696,"byte_end":19699,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19704,"byte_end":19776,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19781,"byte_end":19853,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19858,"byte_end":19928,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19933,"byte_end":19936,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":19941,"byte_end":20009,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20014,"byte_end":20085,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20090,"byte_end":20170,"line_start":60,"line_end":60,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20175,"byte_end":20187,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20192,"byte_end":20195,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20200,"byte_end":20270,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20275,"byte_end":20348,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20353,"byte_end":20390,"line_start":65,"line_end":65,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21263,"byte_end":21273,"line_start":81,"line_end":81,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20485,"byte_end":20557,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20562,"byte_end":20611,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20616,"byte_end":20619,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20624,"byte_end":20692,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20697,"byte_end":20764,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20769,"byte_end":20837,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20842,"byte_end":20890,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20895,"byte_end":20898,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20903,"byte_end":20971,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":20976,"byte_end":21051,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21056,"byte_end":21131,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21136,"byte_end":21208,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21213,"byte_end":21255,"line_start":80,"line_end":80,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22748,"byte_end":22754,"line_start":111,"line_end":111,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Encoder + Sized","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21691,"byte_end":21767,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21772,"byte_end":21848,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21853,"byte_end":21856,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21861,"byte_end":21936,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":21941,"byte_end":22011,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22016,"byte_end":22087,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22092,"byte_end":22164,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22169,"byte_end":22227,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22232,"byte_end":22235,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22240,"byte_end":22309,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22314,"byte_end":22389,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22394,"byte_end":22470,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22475,"byte_end":22497,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22502,"byte_end":22505,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22510,"byte_end":22583,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22588,"byte_end":22659,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/decoder.rs","byte_start":22664,"byte_end":22740,"line_start":110,"line_end":110,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23211,"byte_end":23218,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":22943,"byte_end":23015,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23016,"byte_end":23034,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23282,"byte_end":23286,"line_start":11,"line_end":11,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23225,"byte_end":23272,"line_start":10,"line_end":10,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23484,"byte_end":23489,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23293,"byte_end":23325,"line_start":13,"line_end":13,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23330,"byte_end":23333,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23338,"byte_end":23413,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23418,"byte_end":23474,"line_start":16,"line_end":16,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23774,"byte_end":23780,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23513,"byte_end":23558,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23563,"byte_end":23566,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23571,"byte_end":23645,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23650,"byte_end":23723,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/encoder.rs","byte_start":23728,"byte_end":23766,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24170,"byte_end":24180,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1673}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":23967,"byte_end":24034,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"deprecated(since = \"0.1.7\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24097,"byte_end":24158,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24658,"byte_end":24661,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.\n","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24586,"byte_end":24646,"line_start":21,"line_end":21,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":153},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3271,"byte_end":3287,"line_start":37,"line_end":37,"column_start":9,"column_end":25},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3186,"byte_end":3247,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3294,"byte_end":3346,"line_start":38,"line_end":38,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3351,"byte_end":3354,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3359,"byte_end":3429,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3434,"byte_end":3492,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3497,"byte_end":3569,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3574,"byte_end":3644,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3649,"byte_end":3716,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3721,"byte_end":3724,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Getting started","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3729,"byte_end":3750,"line_start":46,"line_end":46,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3755,"byte_end":3758,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3763,"byte_end":3838,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ is an easy way to get started. [`Framed::new()`](length_delimited::Framed::new) will adapt a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3843,"byte_end":3939,"line_start":49,"line_end":49,"column_start":5,"column_end":101}},{"value":"/ full-duplex byte stream with a length delimited framer using default","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":3944,"byte_end":4016,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ configuration values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4021,"byte_end":4046,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4051,"byte_end":4054,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4059,"byte_end":4066,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use tokio_io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4071,"byte_end":4113,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/ use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4118,"byte_end":4160,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4165,"byte_end":4168,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4173,"byte_end":4228,"line_start":57,"line_end":57,"column_start":5,"column_end":60}},{"value":"/     -> length_delimited::Framed<T>","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4233,"byte_end":4271,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4276,"byte_end":4281,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/     length_delimited::Framed::new(io)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4286,"byte_end":4327,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4332,"byte_end":4337,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4342,"byte_end":4349,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4354,"byte_end":4357,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4362,"byte_end":4434,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4439,"byte_end":4510,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ payload length:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4515,"byte_end":4534,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4539,"byte_end":4542,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4547,"byte_end":4558,"line_start":68,"line_end":68,"column_start":5,"column_end":16}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4563,"byte_end":4612,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4617,"byte_end":4666,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4671,"byte_end":4720,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4725,"byte_end":4732,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4737,"byte_end":4740,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4745,"byte_end":4783,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4788,"byte_end":4791,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4796,"byte_end":4803,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_io;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4808,"byte_end":4836,"line_start":77,"line_end":77,"column_start":5,"column_end":33}},{"value":"/ # extern crate bytes;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4841,"byte_end":4866,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4871,"byte_end":4898,"line_start":79,"line_end":79,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4903,"byte_end":4908,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use tokio_io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4913,"byte_end":4955,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":4960,"byte_end":5002,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5007,"byte_end":5031,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::{Sink, Future};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5036,"byte_end":5068,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5073,"byte_end":5076,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5081,"byte_end":5135,"line_start":86,"line_end":86,"column_start":5,"column_end":59}},{"value":"/     let mut transport = length_delimited::Framed::new(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5140,"byte_end":5202,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/     let frame = BytesMut::from(\"hello world\");","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5207,"byte_end":5257,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5262,"byte_end":5265,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     transport.send(frame).wait().unwrap();","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5270,"byte_end":5316,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5321,"byte_end":5326,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5331,"byte_end":5336,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5341,"byte_end":5363,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5368,"byte_end":5375,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5380,"byte_end":5383,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5388,"byte_end":5430,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5435,"byte_end":5438,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5443,"byte_end":5454,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5459,"byte_end":5498,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5503,"byte_end":5542,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5547,"byte_end":5586,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5591,"byte_end":5598,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5603,"byte_end":5606,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Decoding","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5611,"byte_end":5625,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5630,"byte_end":5633,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5638,"byte_end":5713,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5718,"byte_end":5791,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5796,"byte_end":5862,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5867,"byte_end":5936,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":5941,"byte_end":6006,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6011,"byte_end":6014,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ## Example 1","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6019,"byte_end":6035,"line_start":112,"line_end":112,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6040,"byte_end":6043,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6048,"byte_end":6124,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6129,"byte_end":6170,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6175,"byte_end":6178,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6183,"byte_end":6190,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6195,"byte_end":6225,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6230,"byte_end":6274,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6279,"byte_end":6320,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6325,"byte_end":6361,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6366,"byte_end":6414,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6419,"byte_end":6450,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6455,"byte_end":6503,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6508,"byte_end":6557,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6562,"byte_end":6584,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6589,"byte_end":6596,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6601,"byte_end":6608,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6613,"byte_end":6616,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6621,"byte_end":6669,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6674,"byte_end":6677,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6682,"byte_end":6693,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6698,"byte_end":6750,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6755,"byte_end":6820,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6825,"byte_end":6890,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6895,"byte_end":6960,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6965,"byte_end":6972,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6977,"byte_end":6980,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":6985,"byte_end":7061,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7066,"byte_end":7140,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7145,"byte_end":7217,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7222,"byte_end":7298,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7303,"byte_end":7345,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7350,"byte_end":7353,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ## Example 2","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7358,"byte_end":7374,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7379,"byte_end":7382,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7387,"byte_end":7462,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7467,"byte_end":7508,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7513,"byte_end":7516,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7521,"byte_end":7528,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7533,"byte_end":7563,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7568,"byte_end":7612,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7617,"byte_end":7658,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7663,"byte_end":7699,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7704,"byte_end":7752,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7757,"byte_end":7788,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7793,"byte_end":7841,"line_start":157,"line_end":157,"column_start":5,"column_end":53}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7846,"byte_end":7905,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7910,"byte_end":7932,"line_start":159,"line_end":159,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7937,"byte_end":7944,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7949,"byte_end":7956,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7961,"byte_end":7964,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":7969,"byte_end":8017,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8022,"byte_end":8025,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8030,"byte_end":8041,"line_start":165,"line_end":165,"column_start":5,"column_end":16}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8046,"byte_end":8095,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8100,"byte_end":8154,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8159,"byte_end":8213,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8218,"byte_end":8272,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8277,"byte_end":8284,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8289,"byte_end":8292,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8297,"byte_end":8370,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8375,"byte_end":8442,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8447,"byte_end":8450,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ## Example 3","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8455,"byte_end":8471,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8476,"byte_end":8479,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8484,"byte_end":8560,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8565,"byte_end":8637,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8642,"byte_end":8681,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8686,"byte_end":8689,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8694,"byte_end":8701,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8706,"byte_end":8736,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8741,"byte_end":8785,"line_start":183,"line_end":183,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8790,"byte_end":8831,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8836,"byte_end":8872,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8877,"byte_end":8925,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8930,"byte_end":8961,"line_start":187,"line_end":187,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":8966,"byte_end":9013,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9018,"byte_end":9038,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9043,"byte_end":9065,"line_start":190,"line_end":190,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9070,"byte_end":9077,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9082,"byte_end":9089,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9094,"byte_end":9097,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9102,"byte_end":9150,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9155,"byte_end":9158,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9163,"byte_end":9174,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9179,"byte_end":9231,"line_start":197,"line_end":197,"column_start":5,"column_end":57}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9236,"byte_end":9301,"line_start":198,"line_end":198,"column_start":5,"column_end":70}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9306,"byte_end":9371,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9376,"byte_end":9441,"line_start":200,"line_end":200,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9446,"byte_end":9453,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9458,"byte_end":9461,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9466,"byte_end":9538,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9543,"byte_end":9618,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9623,"byte_end":9695,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9700,"byte_end":9776,"line_start":206,"line_end":206,"column_start":5,"column_end":81}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9781,"byte_end":9854,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9859,"byte_end":9862,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ## Example 4","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9867,"byte_end":9883,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9888,"byte_end":9891,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9896,"byte_end":9970,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":9975,"byte_end":10042,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10047,"byte_end":10050,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10055,"byte_end":10062,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10067,"byte_end":10097,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10102,"byte_end":10146,"line_start":216,"line_end":216,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10151,"byte_end":10192,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10197,"byte_end":10233,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10238,"byte_end":10286,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10291,"byte_end":10322,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10327,"byte_end":10375,"line_start":221,"line_end":221,"column_start":5,"column_end":53}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10380,"byte_end":10400,"line_start":222,"line_end":222,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10405,"byte_end":10427,"line_start":223,"line_end":223,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10432,"byte_end":10439,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10444,"byte_end":10451,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10456,"byte_end":10459,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10464,"byte_end":10512,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10517,"byte_end":10520,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10525,"byte_end":10536,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/                  INPUT","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10541,"byte_end":10567,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10572,"byte_end":10617,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10622,"byte_end":10667,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10672,"byte_end":10717,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10722,"byte_end":10725,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/                  DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10730,"byte_end":10758,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10763,"byte_end":10808,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10813,"byte_end":10858,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10863,"byte_end":10908,"line_start":238,"line_end":238,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10913,"byte_end":10920,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10925,"byte_end":10928,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":10933,"byte_end":11005,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11010,"byte_end":11086,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11091,"byte_end":11161,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11166,"byte_end":11235,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11240,"byte_end":11277,"line_start":245,"line_end":245,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11282,"byte_end":11285,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11290,"byte_end":11364,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11369,"byte_end":11423,"line_start":248,"line_end":248,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11428,"byte_end":11431,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## Example 5","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11436,"byte_end":11452,"line_start":250,"line_end":250,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11457,"byte_end":11460,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11465,"byte_end":11538,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11543,"byte_end":11619,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11624,"byte_end":11698,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ included.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11703,"byte_end":11716,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11721,"byte_end":11724,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11729,"byte_end":11736,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11741,"byte_end":11771,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11776,"byte_end":11820,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11825,"byte_end":11866,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11871,"byte_end":11907,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11912,"byte_end":11961,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":11966,"byte_end":11997,"line_start":263,"line_end":263,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12002,"byte_end":12050,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12055,"byte_end":12099,"line_start":265,"line_end":265,"column_start":5,"column_end":49}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12104,"byte_end":12126,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12131,"byte_end":12138,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12143,"byte_end":12150,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12155,"byte_end":12158,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12163,"byte_end":12211,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12216,"byte_end":12219,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12224,"byte_end":12235,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/                  INPUT","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12240,"byte_end":12266,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12271,"byte_end":12321,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12326,"byte_end":12376,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12381,"byte_end":12431,"line_start":276,"line_end":276,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12436,"byte_end":12439,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/          DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12444,"byte_end":12464,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12469,"byte_end":12499,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12504,"byte_end":12534,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12539,"byte_end":12569,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12574,"byte_end":12581,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12586,"byte_end":12589,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12594,"byte_end":12667,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12672,"byte_end":12747,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12752,"byte_end":12824,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12829,"byte_end":12867,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12872,"byte_end":12875,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12880,"byte_end":12954,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":12959,"byte_end":13035,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13040,"byte_end":13113,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ second half of the head.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13118,"byte_end":13146,"line_start":292,"line_end":292,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13151,"byte_end":13154,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ## Example 6","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13159,"byte_end":13175,"line_start":294,"line_end":294,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13180,"byte_end":13183,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13188,"byte_end":13261,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13266,"byte_end":13342,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13347,"byte_end":13421,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13426,"byte_end":13498,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ length.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13503,"byte_end":13514,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13519,"byte_end":13522,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13527,"byte_end":13534,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13539,"byte_end":13569,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13574,"byte_end":13618,"line_start":304,"line_end":304,"column_start":5,"column_end":49}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13623,"byte_end":13664,"line_start":305,"line_end":305,"column_start":5,"column_end":46}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13669,"byte_end":13705,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13710,"byte_end":13759,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13764,"byte_end":13795,"line_start":308,"line_end":308,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13800,"byte_end":13865,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13870,"byte_end":13890,"line_start":310,"line_end":310,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13895,"byte_end":13917,"line_start":311,"line_end":311,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13922,"byte_end":13929,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13934,"byte_end":13941,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13946,"byte_end":13949,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":13954,"byte_end":14002,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14007,"byte_end":14010,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14015,"byte_end":14026,"line_start":317,"line_end":317,"column_start":5,"column_end":16}},{"value":"/                  INPUT","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14031,"byte_end":14057,"line_start":318,"line_end":318,"column_start":5,"column_end":31}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14062,"byte_end":14112,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14117,"byte_end":14167,"line_start":320,"line_end":320,"column_start":5,"column_end":55}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14172,"byte_end":14222,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14227,"byte_end":14230,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/          DECODED","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14235,"byte_end":14255,"line_start":323,"line_end":323,"column_start":5,"column_end":25}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14260,"byte_end":14290,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14295,"byte_end":14325,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14330,"byte_end":14360,"line_start":326,"line_end":326,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14365,"byte_end":14372,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14377,"byte_end":14380,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14385,"byte_end":14458,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14463,"byte_end":14537,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14542,"byte_end":14616,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14621,"byte_end":14694,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14699,"byte_end":14775,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14780,"byte_end":14813,"line_start":334,"line_end":334,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14818,"byte_end":14821,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Encoding","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14826,"byte_end":14840,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14845,"byte_end":14848,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14853,"byte_end":14928,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":14933,"byte_end":15005,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15010,"byte_end":15078,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15083,"byte_end":15159,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15164,"byte_end":15205,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15210,"byte_end":15213,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15218,"byte_end":15288,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ configuration:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15293,"byte_end":15311,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15316,"byte_end":15319,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15324,"byte_end":15331,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_io;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15336,"byte_end":15364,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ # extern crate bytes;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15369,"byte_end":15394,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ # use tokio_io::AsyncWrite;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15399,"byte_end":15430,"line_start":350,"line_end":350,"column_start":5,"column_end":36}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15435,"byte_end":15479,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15484,"byte_end":15510,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15515,"byte_end":15559,"line_start":353,"line_end":353,"column_start":5,"column_end":49}},{"value":"/ # let _: length_delimited::FramedWrite<T, BytesMut> =","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15564,"byte_end":15621,"line_start":354,"line_end":354,"column_start":5,"column_end":62}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15626,"byte_end":15662,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15667,"byte_end":15698,"line_start":356,"line_end":356,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15703,"byte_end":15726,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15731,"byte_end":15738,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15743,"byte_end":15765,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15770,"byte_end":15777,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15782,"byte_end":15785,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15790,"byte_end":15840,"line_start":362,"line_end":362,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15845,"byte_end":15848,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15853,"byte_end":15864,"line_start":364,"line_end":364,"column_start":5,"column_end":16}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15869,"byte_end":15902,"line_start":365,"line_end":365,"column_start":5,"column_end":38}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15907,"byte_end":15940,"line_start":366,"line_end":366,"column_start":5,"column_end":38}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15945,"byte_end":15978,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15983,"byte_end":15990,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":15995,"byte_end":15998,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16003,"byte_end":16045,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16050,"byte_end":16094,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16099,"byte_end":16144,"line_start":372,"line_end":372,"column_start":5,"column_end":50}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16149,"byte_end":16196,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16201,"byte_end":16239,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/mod.rs","byte_start":16244,"byte_end":16314,"line_start":375,"line_end":375,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":155},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":184},{"krate":0,"index":208},{"krate":0,"index":234},{"krate":0,"index":261},{"krate":0,"index":285},{"krate":0,"index":313},{"krate":0,"index":337},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437}],"decl_id":null,"docs":" I/O conveniences when working with primitives in `tokio-core`","sig":null,"attributes":[{"value":"/ I/O conveniences when working with primitives in `tokio-core`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26669,"byte_end":26734,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26735,"byte_end":26738,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains various combinators to work with I/O objects and type definitions","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26739,"byte_end":26817,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26818,"byte_end":26830,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26831,"byte_end":26834,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A description of the high-level I/O combinators can be [found online] in","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26835,"byte_end":26911,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ addition to a description of the [low level details].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26912,"byte_end":26969,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26970,"byte_end":26973,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [found online]: https://tokio.rs/docs/getting-started/core/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":26974,"byte_end":27037,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [low level details]: https://tokio.rs/docs/going-deeper-tokio/core-low-level/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/mod.rs","byte_start":27038,"byte_end":27119,"line_start":10,"line_end":10,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28039,"byte_end":28043,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":" A future which will copy all data from a reader into a writer.","sig":null,"attributes":[{"value":"/ A future which will copy all data from a reader into a writer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27784,"byte_end":27850,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27851,"byte_end":27854,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the [`copy`] function, this future will resolve to the number of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27855,"byte_end":27934,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ bytes copied or an error if one happens.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27935,"byte_end":27979,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27980,"byte_end":27983,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`copy`]: fn.copy.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":27984,"byte_end":28010,"line_start":12,"line_end":12,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28711,"byte_end":28715,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W>(R, W) -> Copy<R, W> where R: AsyncRead, W: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents copying all the bytes from one object to\n another.","sig":null,"attributes":[{"value":"/ Creates a future which represents copying all the bytes from one object to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28188,"byte_end":28266,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ another.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28267,"byte_end":28279,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28280,"byte_end":28283,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from `reader` into the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28284,"byte_end":28359,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28360,"byte_end":28440,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28441,"byte_end":28513,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28514,"byte_end":28527,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28528,"byte_end":28531,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned and the `reader` and `writer` are","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28532,"byte_end":28612,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ consumed. On error the error is returned and the I/O objects are consumed as","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28613,"byte_end":28693,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ well.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":28694,"byte_end":28703,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31081,"byte_end":31086,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":1708}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"/ A future used to fully flush an I/O object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":30845,"byte_end":30892,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":30893,"byte_end":30896,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Resolves to the underlying I/O object once the flush operation is complete.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":30897,"byte_end":30976,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":30977,"byte_end":30980,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created by the [`flush`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":30981,"byte_end":31019,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31020,"byte_end":31023,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`flush`]: fn.flush.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31024,"byte_end":31052,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31431,"byte_end":31436,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::flush::flush","value":"pub fn flush<A>(A) -> Flush<A> where A: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush an I/O object and then yield the\n object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush an I/O object and then yield the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31113,"byte_end":31192,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ object itself.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31193,"byte_end":31211,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31212,"byte_end":31215,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function will consume the object provided if an error happens, and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31216,"byte_end":31291,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ otherwise it will repeatedly call `flush` until it sees `Ok(())`, scheduling","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31292,"byte_end":31372,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a retry if `WouldBlock` is seen along the way.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31373,"byte_end":31423,"line_start":24,"line_end":24,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32211,"byte_end":32215,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::read","value":"pub fn read<R, T>(R, T) -> Read<R, T> where R: AsyncRead, T: AsMut<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":31935,"byte_end":32009,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32010,"byte_end":32046,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32047,"byte_end":32050,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned future will resolve to both the I/O stream and the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32051,"byte_end":32125,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ as well as the number of bytes read once the read operation is completed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32126,"byte_end":32203,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32533,"byte_end":32537,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":1727}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read available number of bytes to fill","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32369,"byte_end":32448,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ a buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32449,"byte_end":32462,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32463,"byte_end":32466,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32467,"byte_end":32504,"line_start":32,"line_end":32,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33535,"byte_end":33544,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":1735}],"decl_id":null,"docs":" A future which can be used to easily read exactly enough bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read exactly enough bytes to fill","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33327,"byte_end":33401,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ a buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33402,"byte_end":33415,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33416,"byte_end":33419,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_exact`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33420,"byte_end":33463,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33464,"byte_end":33467,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read_exact`]: fn.read_exact.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33468,"byte_end":33506,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34182,"byte_end":34192,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read_exact::read_exact","value":"pub fn read_exact<A, T>(A, T) -> ReadExact<A, T> where A: AsyncRead,\nT: AsMut<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33672,"byte_end":33744,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ returning an error if EOF is hit sooner.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33745,"byte_end":33789,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33790,"byte_end":33793,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The returned future will resolve to both the I/O stream as well as the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33794,"byte_end":33868,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ buffer once the read operation is completed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33869,"byte_end":33917,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33918,"byte_end":33921,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":33922,"byte_end":33999,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ the error yielded. In the case of success the object will be destroyed and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34000,"byte_end":34078,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the buffer will be returned, with all data read from the stream appended to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34079,"byte_end":34158,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34159,"byte_end":34174,"line_start":34,"line_end":34,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35715,"byte_end":35724,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":1755}],"decl_id":null,"docs":" A future which can be used to easily read the entire contents of a stream\n into a vector.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read the entire contents of a stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35496,"byte_end":35573,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ into a vector.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35574,"byte_end":35592,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35593,"byte_end":35596,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_to_end`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35597,"byte_end":35641,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35642,"byte_end":35645,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read_to_end`]: fn.read_to_end.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35646,"byte_end":35686,"line_start":13,"line_end":13,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":36200,"byte_end":36211,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read_to_end::read_to_end","value":"pub fn read_to_end<A>(A, Vec<u8>) -> ReadToEnd<A> where A: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with the I/O\n object `A` into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with the I/O","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35837,"byte_end":35911,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ object `A` into the buffer provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35912,"byte_end":35952,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35953,"byte_end":35956,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":35957,"byte_end":36034,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ the error yielded. In the case of success both the object and the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":36035,"byte_end":36111,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ will be returned, with all data read from the stream appended to the buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":36112,"byte_end":36192,"line_start":30,"line_end":30,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37541,"byte_end":37550,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":1771}],"decl_id":null,"docs":" A future which can be used to easily read the contents of a stream into a\n vector until the delimiter is reached.","sig":null,"attributes":[{"value":"/ A future which can be used to easily read the contents of a stream into a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37301,"byte_end":37378,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ vector until the delimiter is reached.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37379,"byte_end":37421,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37422,"byte_end":37425,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created by the [`read_until`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37426,"byte_end":37469,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37470,"byte_end":37473,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read_until`]: fn.read_until.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37474,"byte_end":37512,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38262,"byte_end":38272,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::read_until::read_until","value":"pub fn read_until<A>(A, u8, Vec<u8>) -> ReadUntil<A> where A: AsyncRead +\nBufRead","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with the I/O\n object `A` into the buffer provided until the delimiter `byte` is reached.\n This method is the async equivalent to [`BufRead::read_until`].","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with the I/O","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37673,"byte_end":37747,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ object `A` into the buffer provided until the delimiter `byte` is reached.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37748,"byte_end":37826,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37827,"byte_end":37894,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37895,"byte_end":37898,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37899,"byte_end":37972,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ the error yielded. In the case of success the object will be destroyed and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":37973,"byte_end":38051,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the buffer will be returned, with all bytes up to, and including, the delimiter","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38052,"byte_end":38135,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/ (if found).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38136,"byte_end":38151,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38152,"byte_end":38155,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`BufRead::read_until`]: https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_until","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38156,"byte_end":38254,"line_start":34,"line_end":34,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39782,"byte_end":39790,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Shutdown","qualname":"::io::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":1788}],"decl_id":null,"docs":" A future used to fully shutdown an I/O object.","sig":null,"attributes":[{"value":"/ A future used to fully shutdown an I/O object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39527,"byte_end":39577,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39578,"byte_end":39581,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Resolves to the underlying I/O object once the shutdown operation is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39582,"byte_end":39654,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ complete.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39655,"byte_end":39668,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39669,"byte_end":39672,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Created by the [`shutdown`] function.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39673,"byte_end":39714,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39715,"byte_end":39718,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`shutdown`]: fn.shutdown.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39719,"byte_end":39753,"line_start":14,"line_end":14,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":40141,"byte_end":40149,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::io::shutdown::shutdown","value":"pub fn shutdown<A>(A) -> Shutdown<A> where A: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will entirely shutdown an I/O object and then yield\n the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely shutdown an I/O object and then yield","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39817,"byte_end":39895,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ the object itself.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39896,"byte_end":39918,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39919,"byte_end":39922,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will consume the object provided if an error happens, and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39923,"byte_end":39998,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ otherwise it will repeatedly call `shutdown` until it sees `Ok(())`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":39999,"byte_end":40071,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ scheduling a retry if `WouldBlock` is seen along the way.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":40072,"byte_end":40133,"line_start":25,"line_end":25,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40780,"byte_end":40788,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":1795}],"decl_id":null,"docs":" A future used to write the entire contents of some data to a stream.","sig":null,"attributes":[{"value":"/ A future used to write the entire contents of some data to a stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40575,"byte_end":40647,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40648,"byte_end":40651,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`write_all`] top-level method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40652,"byte_end":40710,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40711,"byte_end":40714,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`write_all`]: fn.write_all.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40715,"byte_end":40751,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41600,"byte_end":41609,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write_all::write_all","value":"pub fn write_all<A, T>(A, T) -> WriteAll<A, T> where A: AsyncWrite,\nT: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will write the entire contents of the buffer `buf` to\n the stream `a` provided.","sig":null,"attributes":[{"value":"/ Creates a future that will write the entire contents of the buffer `buf` to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40916,"byte_end":40995,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ the stream `a` provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":40996,"byte_end":41024,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41025,"byte_end":41028,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The returned future will not return until all the data has been written, and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41029,"byte_end":41109,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ the future will resolve to the stream as well as the buffer (for reuse if","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41110,"byte_end":41187,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ needed).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41188,"byte_end":41200,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41201,"byte_end":41204,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Any error which happens during writing will cause both the stream and the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41205,"byte_end":41282,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ buffer to get destroyed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41283,"byte_end":41311,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41312,"byte_end":41315,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `buf` parameter here only requires the `AsRef<[u8]>` trait, which should","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41316,"byte_end":41396,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be broadly applicable to accepting data which can be converted to a slice.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41397,"byte_end":41475,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ The `Window` struct is also available in this crate to provide a different","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41476,"byte_end":41554,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ window into a slice if necessary.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41555,"byte_end":41592,"line_start":37,"line_end":37,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":440},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"_tokio_codec","qualname":"::_tokio_codec","value":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":589},{"krate":0,"index":677},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":42848,"byte_end":42895,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":42896,"byte_end":42899,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":42900,"byte_end":42968,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":42969,"byte_end":43044,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as [transports].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43045,"byte_end":43095,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43096,"byte_end":43099,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43100,"byte_end":43120,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ [`AsyncWrite`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43121,"byte_end":43142,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/ [`Sink`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43143,"byte_end":43158,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/ [`Stream`]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43159,"byte_end":43176,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ [transports]: #","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43177,"byte_end":43196,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/mod.rs","byte_start":43198,"byte_end":43251,"line_start":13,"line_end":13,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":44997,"byte_end":45003,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Framed","qualname":"::_tokio_codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":516}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying I/O object, using","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":44754,"byte_end":44832,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":44833,"byte_end":44900,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":44901,"byte_end":44904,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ You can create a `Framed` instance by using the `AsyncRead::framed` adapter.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":44905,"byte_end":44985,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46257,"byte_end":46260,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45196,"byte_end":45272,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45277,"byte_end":45353,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45358,"byte_end":45361,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45366,"byte_end":45441,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45446,"byte_end":45516,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45521,"byte_end":45592,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45597,"byte_end":45669,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45674,"byte_end":45732,"line_start":36,"line_end":36,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45737,"byte_end":45740,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45745,"byte_end":45814,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45819,"byte_end":45894,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45899,"byte_end":45975,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45980,"byte_end":46002,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46007,"byte_end":46010,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46015,"byte_end":46088,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46093,"byte_end":46164,"line_start":44,"line_end":44,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46169,"byte_end":46245,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47666,"byte_end":47676,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46433,"byte_end":46509,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46514,"byte_end":46590,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46595,"byte_end":46598,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46603,"byte_end":46678,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46683,"byte_end":46753,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46758,"byte_end":46829,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46834,"byte_end":46906,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46911,"byte_end":46969,"line_start":61,"line_end":61,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46974,"byte_end":46977,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46982,"byte_end":47051,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47056,"byte_end":47131,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47136,"byte_end":47212,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47217,"byte_end":47239,"line_start":66,"line_end":66,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47244,"byte_end":47247,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47252,"byte_end":47331,"line_start":68,"line_end":68,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47336,"byte_end":47411,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47416,"byte_end":47419,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47424,"byte_end":47497,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47502,"byte_end":47573,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47578,"byte_end":47654,"line_start":73,"line_end":73,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48222,"byte_end":48229,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":47940,"byte_end":48003,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48008,"byte_end":48020,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48025,"byte_end":48028,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48033,"byte_end":48108,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48113,"byte_end":48183,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48188,"byte_end":48210,"line_start":88,"line_end":88,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48588,"byte_end":48595,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48298,"byte_end":48369,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48374,"byte_end":48386,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48391,"byte_end":48394,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48399,"byte_end":48474,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48479,"byte_end":48549,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48554,"byte_end":48576,"line_start":98,"line_end":98,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48926,"byte_end":48931,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48676,"byte_end":48734,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48739,"byte_end":48751,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48756,"byte_end":48759,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48764,"byte_end":48838,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":48843,"byte_end":48914,"line_start":107,"line_end":107,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49258,"byte_end":49267,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49000,"byte_end":49066,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49071,"byte_end":49083,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49088,"byte_end":49091,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49096,"byte_end":49170,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49175,"byte_end":49246,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49612,"byte_end":49622,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49348,"byte_end":49410,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49415,"byte_end":49418,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49423,"byte_end":49498,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49503,"byte_end":49573,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49578,"byte_end":49600,"line_start":125,"line_end":125,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":50015,"byte_end":50025,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49694,"byte_end":49767,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49772,"byte_end":49813,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49818,"byte_end":49821,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49826,"byte_end":49901,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49906,"byte_end":49976,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":49981,"byte_end":50003,"line_start":135,"line_end":135,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52970,"byte_end":52981,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::_tokio_codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52738,"byte_end":52809,"line_start":250,"line_end":250,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52810,"byte_end":52880,"line_start":251,"line_end":251,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52881,"byte_end":52941,"line_start":252,"line_end":252,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53067,"byte_end":53069,"line_start":256,"line_end":256,"column_start":9,"column_end":11},"name":"io","qualname":"::_tokio_codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52994,"byte_end":53058,"line_start":255,"line_end":255,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53101,"byte_end":53106,"line_start":259,"line_end":259,"column_start":9,"column_end":14},"name":"codec","qualname":"::_tokio_codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53079,"byte_end":53092,"line_start":258,"line_end":258,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53171,"byte_end":53179,"line_start":262,"line_end":262,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::_tokio_codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53116,"byte_end":53162,"line_start":261,"line_end":261,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53266,"byte_end":53275,"line_start":265,"line_end":265,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::_tokio_codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53196,"byte_end":53257,"line_start":264,"line_end":264,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53508,"byte_end":53511,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53456,"byte_end":53496,"line_start":273,"line_end":273,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":53971,"byte_end":53981,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"FramedRead","qualname":"::_tokio_codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[{"value":"/ A `Stream` of messages decoded from an `AsyncRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":53904,"byte_end":53959,"line_start":12,"line_end":12,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54351,"byte_end":54354,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54283,"byte_end":54339,"line_start":33,"line_end":33,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54815,"byte_end":54822,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54528,"byte_end":54591,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54596,"byte_end":54613,"line_start":43,"line_end":43,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54618,"byte_end":54621,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54626,"byte_end":54701,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54706,"byte_end":54776,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54781,"byte_end":54803,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55172,"byte_end":55179,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54877,"byte_end":54948,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54953,"byte_end":54970,"line_start":53,"line_end":53,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54975,"byte_end":54978,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54983,"byte_end":55058,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55063,"byte_end":55133,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55138,"byte_end":55160,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55515,"byte_end":55525,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55246,"byte_end":55313,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55318,"byte_end":55321,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55326,"byte_end":55401,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55406,"byte_end":55476,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55481,"byte_end":55503,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55639,"byte_end":55646,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55577,"byte_end":55627,"line_start":71,"line_end":71,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55771,"byte_end":55782,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55701,"byte_end":55759,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":59823,"byte_end":59834,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::_tokio_codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":730}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ A `Sink` of frames encoded to an `AsyncWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":59761,"byte_end":59811,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60194,"byte_end":60197,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60125,"byte_end":60182,"line_start":31,"line_end":31,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60663,"byte_end":60670,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60375,"byte_end":60438,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60443,"byte_end":60461,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60466,"byte_end":60469,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60474,"byte_end":60549,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60554,"byte_end":60624,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60629,"byte_end":60651,"line_start":45,"line_end":45,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61021,"byte_end":61028,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60725,"byte_end":60796,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60801,"byte_end":60819,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60824,"byte_end":60827,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60832,"byte_end":60907,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60912,"byte_end":60982,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60987,"byte_end":61009,"line_start":55,"line_end":55,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61365,"byte_end":61375,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61095,"byte_end":61163,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61168,"byte_end":61171,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61176,"byte_end":61251,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61256,"byte_end":61326,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61331,"byte_end":61353,"line_start":64,"line_end":64,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61489,"byte_end":61496,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61427,"byte_end":61477,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61621,"byte_end":61632,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61551,"byte_end":61609,"line_start":74,"line_end":74,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66689,"byte_end":66699,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types that only implement\n `std::io::Read` or `std::io::Write` to be used in contexts which expect\n an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types that only implement","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66051,"byte_end":66115,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ `std::io::Read` or `std::io::Write` to be used in contexts which expect","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66116,"byte_end":66191,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66192,"byte_end":66227,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66228,"byte_end":66231,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66232,"byte_end":66308,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66309,"byte_end":66380,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66381,"byte_end":66449,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66450,"byte_end":66518,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66519,"byte_end":66594,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66595,"byte_end":66609,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66806,"byte_end":66809,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66736,"byte_end":66794,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66924,"byte_end":66931,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66861,"byte_end":66912,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67045,"byte_end":67052,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66974,"byte_end":67033,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67173,"byte_end":67183,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67107,"byte_end":67161,"line_start":34,"line_end":34,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":901},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69982,"byte_end":69991,"line_start":35,"line_end":35,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::async_read::AsyncRead","value":"AsyncRead: std_io::Read","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":68767,"byte_end":68797,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":68798,"byte_end":68801,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait inherits from `std::io::Read` and indicates that an I/O object is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":68802,"byte_end":68882,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ **non-blocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":68883,"byte_end":68959,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ bytes are unavailable instead of blocking the current thread.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":68960,"byte_end":69025,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69026,"byte_end":69029,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69030,"byte_end":69107,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69108,"byte_end":69126,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69127,"byte_end":69130,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::Ready(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69131,"byte_end":69208,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69209,"byte_end":69285,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69286,"byte_end":69305,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69306,"byte_end":69309,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::NotReady)` means that no data was read into the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69310,"byte_end":69381,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69382,"byte_end":69462,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69463,"byte_end":69542,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69543,"byte_end":69616,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69617,"byte_end":69690,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69691,"byte_end":69712,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69713,"byte_end":69716,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Err(e)` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69717,"byte_end":69788,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/   underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69789,"byte_end":69813,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69814,"byte_end":69817,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69818,"byte_end":69891,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":69892,"byte_end":69971,"line_start":34,"line_end":34,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71513,"byte_end":71541,"line_start":64,"line_end":64,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [u8]) -> bool","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70012,"byte_end":70086,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70091,"byte_end":70140,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70145,"byte_end":70148,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70153,"byte_end":70226,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70231,"byte_end":70302,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70307,"byte_end":70381,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70386,"byte_end":70462,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70467,"byte_end":70505,"line_start":43,"line_end":43,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70510,"byte_end":70513,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70518,"byte_end":70594,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70599,"byte_end":70673,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70678,"byte_end":70755,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70760,"byte_end":70792,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70797,"byte_end":70800,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70805,"byte_end":70878,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70883,"byte_end":70951,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70956,"byte_end":71012,"line_start":52,"line_end":52,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71017,"byte_end":71052,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71057,"byte_end":71060,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71065,"byte_end":71141,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71146,"byte_end":71221,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ or `read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71226,"byte_end":71298,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ correct value.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71303,"byte_end":71321,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71326,"byte_end":71329,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`read_buf`].","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71334,"byte_end":71380,"line_start":60,"line_end":60,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71385,"byte_end":71388,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71393,"byte_end":71459,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ [`read_buf`]: #method.read_buf","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71464,"byte_end":71498,"line_start":63,"line_end":63,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72042,"byte_end":72051,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::async_read::AsyncRead::poll_read","value":"pub fn poll_read(&mut Self, &mut [u8]) -> Poll<usize, std_io::Error>","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71666,"byte_end":71718,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71723,"byte_end":71726,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Ok(Async::Ready(num_bytes_read))`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71731,"byte_end":71790,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71795,"byte_end":71798,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71803,"byte_end":71862,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ `Ok(Async::NotReady)` and arranges for the current task (via","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71867,"byte_end":71931,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":71936,"byte_end":72003,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72008,"byte_end":72034,"line_start":79,"line_end":79,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72683,"byte_end":72691,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"read_buf","qualname":"::async_read::AsyncRead::read_buf","value":"pub fn read_buf<B: BufMut>(&mut Self, &mut B) -> Poll<usize, std_io::Error>\nwhere Self: Sized","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Pull some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pull some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72348,"byte_end":72423,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72428,"byte_end":72457,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72462,"byte_end":72465,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72470,"byte_end":72545,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72550,"byte_end":72626,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":72631,"byte_end":72675,"line_start":93,"line_end":93,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74333,"byte_end":74339,"line_start":135,"line_end":135,"column_start":8,"column_end":14},"name":"framed","qualname":"::async_read::AsyncRead::framed","value":"pub fn framed<T: Encoder + Decoder>(Self, T) -> Framed<Self, T> where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n I/O object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73166,"byte_end":73242,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ I/O object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73247,"byte_end":73322,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73327,"byte_end":73330,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73335,"byte_end":73410,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73415,"byte_end":73485,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73490,"byte_end":73561,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73566,"byte_end":73638,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73643,"byte_end":73701,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73706,"byte_end":73709,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73714,"byte_end":73783,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73788,"byte_end":73863,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73868,"byte_end":73944,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73949,"byte_end":73971,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73976,"byte_end":73979,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":73984,"byte_end":74057,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74062,"byte_end":74133,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74138,"byte_end":74214,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"deprecated(since = \"0.1.7\", note =\n             \"Use tokio_codec::Decoder::framed instead\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74219,"byte_end":74300,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74305,"byte_end":74325,"line_start":134,"line_end":134,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74785,"byte_end":74790,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"split","qualname":"::async_read::AsyncRead::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74494,"byte_end":74565,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74570,"byte_end":74573,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `Read` and `Write` traits,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74578,"byte_end":74646,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/ respectively.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74651,"byte_end":74668,"line_start":145,"line_end":145,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74673,"byte_end":74676,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ To restore this read/write object from its `ReadHalf` and `WriteHalf`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74681,"byte_end":74754,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ use `unsplit`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74759,"byte_end":74777,"line_start":148,"line_end":148,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":936},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77038,"byte_end":77048,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::async_write::AsyncWrite","value":"AsyncWrite: std_io::Write","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75519,"byte_end":75551,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75552,"byte_end":75555,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from `std::io::Write` and indicates that an I/O object is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75556,"byte_end":75636,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75637,"byte_end":75712,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75713,"byte_end":75780,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75781,"byte_end":75784,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_write` function will return one of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75785,"byte_end":75863,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ the following:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75864,"byte_end":75882,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75883,"byte_end":75886,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::Ready(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75887,"byte_end":75959,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   written.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75960,"byte_end":75974,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75975,"byte_end":75978,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::NotReady)` means that no data was written from the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":75979,"byte_end":76053,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76054,"byte_end":76134,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76135,"byte_end":76214,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76215,"byte_end":76288,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76289,"byte_end":76362,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76363,"byte_end":76384,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76385,"byte_end":76388,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Err(e)` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76389,"byte_end":76460,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/   underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76461,"byte_end":76485,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76486,"byte_end":76489,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `write` method only works in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76490,"byte_end":76564,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76565,"byte_end":76644,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76645,"byte_end":76648,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  `Write::flush` method works","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76649,"byte_end":76727,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76728,"byte_end":76806,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76807,"byte_end":76885,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76886,"byte_end":76965,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":76966,"byte_end":77027,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77454,"byte_end":77464,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(&mut Self, &[u8]) -> Poll<usize, std_io::Error>","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77070,"byte_end":77124,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77129,"byte_end":77132,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Ok(Async::Ready(num_bytes_written))`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77137,"byte_end":77199,"line_start":40,"line_end":40,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77204,"byte_end":77207,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77212,"byte_end":77274,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ `Ok(Async::NotReady)` and arranges for the current task (via","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77279,"byte_end":77343,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77348,"byte_end":77415,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77420,"byte_end":77446,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78177,"byte_end":78187,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(&mut Self) -> Poll<(), std_io::Error>","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77758,"byte_end":77828,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ their destination.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77833,"byte_end":77855,"line_start":55,"line_end":55,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77860,"byte_end":77863,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Ok(Async::Ready(()))`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77868,"byte_end":77915,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77920,"byte_end":77923,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77928,"byte_end":77992,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ `Ok(Async::NotReady)` and arranges for the current task (via","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77997,"byte_end":78061,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78066,"byte_end":78134,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78139,"byte_end":78169,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81660,"byte_end":81668,"line_start":129,"line_end":129,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::async_write::AsyncWrite::shutdown","value":"pub fn shutdown(&mut Self) -> Poll<(), std_io::Error>","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78463,"byte_end":78537,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78542,"byte_end":78590,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78595,"byte_end":78598,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78603,"byte_end":78674,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78679,"byte_end":78755,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78760,"byte_end":78836,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78841,"byte_end":78916,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78921,"byte_end":78992,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":78997,"byte_end":79073,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79078,"byte_end":79106,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79111,"byte_end":79114,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79119,"byte_end":79180,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79185,"byte_end":79256,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79261,"byte_end":79333,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79338,"byte_end":79413,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79418,"byte_end":79491,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79496,"byte_end":79571,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79576,"byte_end":79648,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79653,"byte_end":79664,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79669,"byte_end":79672,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79677,"byte_end":79751,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79756,"byte_end":79828,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79833,"byte_end":79902,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79907,"byte_end":79975,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":79980,"byte_end":80041,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80046,"byte_end":80049,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80054,"byte_end":80072,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80077,"byte_end":80080,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<(), io::Error>` classified as such:","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80085,"byte_end":80154,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80159,"byte_end":80162,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Ok(Async::Ready(()))` - indicates that the connection was","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80167,"byte_end":80231,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80236,"byte_end":80305,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80310,"byte_end":80385,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80390,"byte_end":80463,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80468,"byte_end":80519,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80524,"byte_end":80527,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Ok(Async::NotReady)` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80532,"byte_end":80608,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80613,"byte_end":80688,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80693,"byte_end":80765,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80770,"byte_end":80840,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80845,"byte_end":80920,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80925,"byte_end":80928,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Err(e)` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":80933,"byte_end":81001,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81006,"byte_end":81081,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81086,"byte_end":81153,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81158,"byte_end":81161,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81166,"byte_end":81178,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81183,"byte_end":81186,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81191,"byte_end":81262,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81267,"byte_end":81333,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81338,"byte_end":81412,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81417,"byte_end":81481,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81486,"byte_end":81525,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81530,"byte_end":81533,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81538,"byte_end":81550,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81555,"byte_end":81558,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81563,"byte_end":81638,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81643,"byte_end":81652,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81918,"byte_end":81927,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"write_buf","qualname":"::async_write::AsyncWrite::write_buf","value":"pub fn write_buf<B: Buf>(&mut Self, &mut B) -> Poll<usize, std_io::Error>\nwhere Self: Sized","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Write a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Write a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81713,"byte_end":81786,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81791,"byte_end":81794,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81799,"byte_end":81873,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":81878,"byte_end":81910,"line_start":134,"line_end":134,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84919,"byte_end":84925,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1042}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying I/O object, using","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84599,"byte_end":84677,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84678,"byte_end":84745,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84746,"byte_end":84749,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ You can create a `Framed` instance by using the `AsyncRead::framed` adapter.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84750,"byte_end":84830,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"deprecated(since = \"0.1.7\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":84831,"byte_end":84892,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86572,"byte_end":86582,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T>, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85339,"byte_end":85415,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85420,"byte_end":85496,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85501,"byte_end":85504,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85509,"byte_end":85584,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85589,"byte_end":85659,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85664,"byte_end":85735,"line_start":44,"line_end":44,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85740,"byte_end":85812,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85817,"byte_end":85875,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85880,"byte_end":85883,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85888,"byte_end":85957,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85962,"byte_end":86037,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86042,"byte_end":86118,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86123,"byte_end":86145,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86150,"byte_end":86153,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86158,"byte_end":86237,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86242,"byte_end":86317,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86322,"byte_end":86325,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86330,"byte_end":86403,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86408,"byte_end":86479,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86484,"byte_end":86560,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87130,"byte_end":87137,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86848,"byte_end":86911,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86916,"byte_end":86928,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86933,"byte_end":86936,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":86941,"byte_end":87016,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87021,"byte_end":87091,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87096,"byte_end":87118,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87496,"byte_end":87503,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87206,"byte_end":87277,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87282,"byte_end":87294,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87299,"byte_end":87302,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87307,"byte_end":87382,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87387,"byte_end":87457,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87462,"byte_end":87484,"line_start":83,"line_end":83,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87848,"byte_end":87858,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87584,"byte_end":87646,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87651,"byte_end":87654,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87659,"byte_end":87734,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87739,"byte_end":87809,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87814,"byte_end":87836,"line_start":92,"line_end":92,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88239,"byte_end":88249,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream and the buffer\n with unprocessed data.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream and the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":87930,"byte_end":88006,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/ with unprocessed data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88011,"byte_end":88037,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88042,"byte_end":88045,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88050,"byte_end":88125,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88130,"byte_end":88200,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88205,"byte_end":88227,"line_start":102,"line_end":102,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":89062,"byte_end":89082,"line_start":123,"line_end":123,"column_start":12,"column_end":32},"name":"into_parts_and_codec","qualname":"<Framed<T, U>>::into_parts_and_codec","value":"pub fn into_parts_and_codec(Self) -> (FramedParts<T>, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream and the buffer\n with unprocessed data, and also the current codec state.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream and the buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88517,"byte_end":88593,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ with unprocessed data, and also the current codec state.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88598,"byte_end":88658,"line_start":114,"line_end":114,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88663,"byte_end":88666,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88671,"byte_end":88746,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88751,"byte_end":88821,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88826,"byte_end":88848,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88853,"byte_end":88856,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that this function will be removed once the codec has been","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88861,"byte_end":88928,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ integrated into `FramedParts` in a new version (see","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88933,"byte_end":88988,"line_start":121,"line_end":121,"column_start":5,"column_end":60}},{"value":"/ [#53](https://github.com/tokio-rs/tokio-io/pull/53)).","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":88993,"byte_end":89050,"line_start":122,"line_end":122,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92036,"byte_end":92047,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { inner, readbuf, writebuf }","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91804,"byte_end":91875,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91876,"byte_end":91946,"line_start":238,"line_end":238,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91947,"byte_end":92007,"line_start":239,"line_end":239,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92130,"byte_end":92135,"line_start":243,"line_end":243,"column_start":9,"column_end":14},"name":"inner","qualname":"::framed::FramedParts::inner","value":"T","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92057,"byte_end":92121,"line_start":242,"line_end":242,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92199,"byte_end":92206,"line_start":245,"line_end":245,"column_start":9,"column_end":16},"name":"readbuf","qualname":"::framed::FramedParts::readbuf","value":"bytes::BytesMut","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92144,"byte_end":92190,"line_start":244,"line_end":244,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92292,"byte_end":92300,"line_start":247,"line_end":247,"column_start":9,"column_end":17},"name":"writebuf","qualname":"::framed::FramedParts::writebuf","value":"bytes::BytesMut","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":92222,"byte_end":92283,"line_start":246,"line_end":246,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":92626,"byte_end":92636,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"FramedRead","qualname":"::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1144}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[{"value":"/ A `Stream` of messages decoded from an `AsyncRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":92482,"byte_end":92537,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"deprecated(since = \"0.1.7\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":92538,"byte_end":92599,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93083,"byte_end":93086,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93015,"byte_end":93071,"line_start":37,"line_end":37,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93547,"byte_end":93554,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93260,"byte_end":93323,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93328,"byte_end":93345,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93350,"byte_end":93353,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93358,"byte_end":93433,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93438,"byte_end":93508,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93513,"byte_end":93535,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93904,"byte_end":93911,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93609,"byte_end":93680,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93685,"byte_end":93702,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93707,"byte_end":93710,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93715,"byte_end":93790,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93795,"byte_end":93865,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93870,"byte_end":93892,"line_start":61,"line_end":61,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94247,"byte_end":94257,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93978,"byte_end":94045,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94050,"byte_end":94053,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94058,"byte_end":94133,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94138,"byte_end":94208,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94213,"byte_end":94235,"line_start":70,"line_end":70,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94371,"byte_end":94378,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94309,"byte_end":94359,"line_start":75,"line_end":75,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94503,"byte_end":94514,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94433,"byte_end":94491,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":98625,"byte_end":98636,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1250}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ A `Sink` of frames encoded to an `AsyncWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":98486,"byte_end":98536,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"deprecated(since = \"0.1.7\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":98537,"byte_end":98598,"line_start":14,"line_end":14,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99073,"byte_end":99076,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99004,"byte_end":99061,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99542,"byte_end":99549,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99254,"byte_end":99317,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99322,"byte_end":99340,"line_start":45,"line_end":45,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99345,"byte_end":99348,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99353,"byte_end":99428,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99433,"byte_end":99503,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99508,"byte_end":99530,"line_start":49,"line_end":49,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99900,"byte_end":99907,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99604,"byte_end":99675,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99680,"byte_end":99698,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99703,"byte_end":99706,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99711,"byte_end":99786,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99791,"byte_end":99861,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99866,"byte_end":99888,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100244,"byte_end":100254,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99974,"byte_end":100042,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100047,"byte_end":100050,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100055,"byte_end":100130,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100135,"byte_end":100205,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100210,"byte_end":100232,"line_start":68,"line_end":68,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100368,"byte_end":100375,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100306,"byte_end":100356,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100500,"byte_end":100511,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100430,"byte_end":100488,"line_start":78,"line_end":78,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105572,"byte_end":105579,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Builder","qualname":"::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"decl_id":null,"docs":" Configure length delimited `FramedRead`, `FramedWrite`, and `Framed` values.","sig":null,"attributes":[{"value":"/ Configure length delimited `FramedRead`, `FramedWrite`, and `Framed` values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105151,"byte_end":105231,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105232,"byte_end":105235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited framers. Note","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105236,"byte_end":105312,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105313,"byte_end":105393,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105394,"byte_end":105453,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":105454,"byte_end":105515,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106447,"byte_end":106453,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"Framed","qualname":"::length_delimited::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1382}],"decl_id":null,"docs":" Adapts a byte stream into a unified `Stream` and `Sink` that works over\n entire frame values.","sig":null,"attributes":[{"value":"/ Adapts a byte stream into a unified `Stream` and `Sink` that works over","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106165,"byte_end":106240,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ entire frame values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106241,"byte_end":106265,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106266,"byte_end":106269,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106270,"byte_end":106323,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106324,"byte_end":106327,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106328,"byte_end":106358,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106359,"byte_end":106420,"line_start":49,"line_end":49,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106794,"byte_end":106804,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"FramedRead","qualname":"::length_delimited::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1880}],"decl_id":null,"docs":" Adapts a byte stream to a `Stream` yielding entire frame values.","sig":null,"attributes":[{"value":"/ Adapts a byte stream to a `Stream` yielding entire frame values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106527,"byte_end":106595,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106596,"byte_end":106599,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106600,"byte_end":106653,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106654,"byte_end":106657,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106658,"byte_end":106688,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106689,"byte_end":106750,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107017,"byte_end":107028,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"FrameTooBig","qualname":"::length_delimited::FrameTooBig","value":"FrameTooBig {  }","parent":null,"children":[{"krate":0,"index":1384}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106855,"byte_end":106928,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":106929,"byte_end":106990,"line_start":68,"line_end":68,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107507,"byte_end":107518,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::length_delimited::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390}],"decl_id":null,"docs":" Adapts a byte stream to a `Sink` accepting entire frame values.","sig":null,"attributes":[{"value":"/ Adapts a byte stream to a `Sink` accepting entire frame values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107258,"byte_end":107325,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107326,"byte_end":107329,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107330,"byte_end":107383,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107384,"byte_end":107387,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107388,"byte_end":107418,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.1.8\", note = \"Moved to tokio-codec\")","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107419,"byte_end":107480,"line_start":94,"line_end":94,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107883,"byte_end":107886,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, B>>::new","value":"pub fn new(T) -> Framed<T, B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Framed` with default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `Framed` with default configuration values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107810,"byte_end":107871,"line_start":110,"line_end":110,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108279,"byte_end":108286,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, B>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108004,"byte_end":108077,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108082,"byte_end":108085,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108090,"byte_end":108165,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108170,"byte_end":108240,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108245,"byte_end":108267,"line_start":121,"line_end":121,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108643,"byte_end":108650,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108352,"byte_end":108423,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108428,"byte_end":108441,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108446,"byte_end":108449,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108454,"byte_end":108529,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108534,"byte_end":108610,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108615,"byte_end":108631,"line_start":131,"line_end":131,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108989,"byte_end":108999,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, B>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108724,"byte_end":108787,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108792,"byte_end":108795,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108800,"byte_end":108875,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108880,"byte_end":108956,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":108961,"byte_end":108977,"line_start":140,"line_end":140,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110093,"byte_end":110096,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T>>::new","value":"pub fn new(T) -> FramedRead<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with default configuration values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110016,"byte_end":110081,"line_start":187,"line_end":187,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110374,"byte_end":110390,"line_start":198,"line_end":198,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<FramedRead<T>>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110202,"byte_end":110243,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110248,"byte_end":110251,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110256,"byte_end":110329,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110334,"byte_end":110362,"line_start":197,"line_end":197,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110827,"byte_end":110847,"line_start":208,"line_end":208,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<FramedRead<T>>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110471,"byte_end":110505,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110510,"byte_end":110513,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110518,"byte_end":110588,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110593,"byte_end":110668,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110673,"byte_end":110745,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110750,"byte_end":110815,"line_start":207,"line_end":207,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111227,"byte_end":111234,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110948,"byte_end":111025,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111030,"byte_end":111033,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111038,"byte_end":111113,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111118,"byte_end":111188,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111193,"byte_end":111215,"line_start":216,"line_end":216,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111585,"byte_end":111592,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111290,"byte_end":111361,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111366,"byte_end":111383,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111388,"byte_end":111391,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111396,"byte_end":111471,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111476,"byte_end":111552,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111557,"byte_end":111573,"line_start":226,"line_end":226,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111925,"byte_end":111935,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111656,"byte_end":111723,"line_start":231,"line_end":231,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111728,"byte_end":111731,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111736,"byte_end":111811,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111816,"byte_end":111892,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":111897,"byte_end":111913,"line_start":235,"line_end":235,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116501,"byte_end":116504,"line_start":400,"line_end":400,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, B>>::new","value":"pub fn new(T) -> FramedWrite<T, B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with default configuration values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116423,"byte_end":116489,"line_start":399,"line_end":399,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116800,"byte_end":116816,"line_start":410,"line_end":410,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<FramedWrite<T, B>>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116631,"byte_end":116672,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116677,"byte_end":116680,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will write to the wire. Larger","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116685,"byte_end":116755,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116760,"byte_end":116788,"line_start":409,"line_end":409,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117237,"byte_end":117257,"line_start":420,"line_end":420,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<FramedWrite<T, B>>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116881,"byte_end":116915,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116920,"byte_end":116923,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is encoded. In other","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116928,"byte_end":116998,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being encoded with a frame","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117003,"byte_end":117078,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117083,"byte_end":117155,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117160,"byte_end":117225,"line_start":419,"line_end":419,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117626,"byte_end":117633,"line_start":430,"line_end":430,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, B>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117338,"byte_end":117401,"line_start":424,"line_end":424,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117406,"byte_end":117424,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117429,"byte_end":117432,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117437,"byte_end":117512,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117517,"byte_end":117587,"line_start":428,"line_end":428,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117592,"byte_end":117614,"line_start":429,"line_end":429,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117976,"byte_end":117983,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117680,"byte_end":117751,"line_start":434,"line_end":434,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117756,"byte_end":117774,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117779,"byte_end":117782,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117787,"byte_end":117862,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117867,"byte_end":117943,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":117948,"byte_end":117964,"line_start":439,"line_end":439,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118312,"byte_end":118322,"line_start":449,"line_end":449,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, B>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118042,"byte_end":118110,"line_start":444,"line_end":444,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118115,"byte_end":118118,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118123,"byte_end":118198,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise being","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118203,"byte_end":118279,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ worked with.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118284,"byte_end":118300,"line_start":448,"line_end":448,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122720,"byte_end":122723,"line_start":613,"line_end":613,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited framer builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited framer builder with default configuration","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122219,"byte_end":122295,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/ values.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122300,"byte_end":122311,"line_start":596,"line_end":596,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122316,"byte_end":122319,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122324,"byte_end":122338,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122343,"byte_end":122346,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122351,"byte_end":122358,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122363,"byte_end":122393,"line_start":601,"line_end":601,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122398,"byte_end":122449,"line_start":602,"line_end":602,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122454,"byte_end":122457,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122462,"byte_end":122503,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122508,"byte_end":122526,"line_start":605,"line_end":605,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122531,"byte_end":122562,"line_start":606,"line_end":606,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122567,"byte_end":122598,"line_start":607,"line_end":607,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122603,"byte_end":122632,"line_start":608,"line_end":608,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122637,"byte_end":122657,"line_start":609,"line_end":609,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122662,"byte_end":122684,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122689,"byte_end":122696,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122701,"byte_end":122708,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123866,"byte_end":123876,"line_start":653,"line_end":653,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123387,"byte_end":123436,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123441,"byte_end":123444,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123449,"byte_end":123481,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123486,"byte_end":123489,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123494,"byte_end":123562,"line_start":639,"line_end":639,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123567,"byte_end":123570,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123575,"byte_end":123589,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123594,"byte_end":123597,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123602,"byte_end":123609,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123614,"byte_end":123644,"line_start":644,"line_end":644,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123649,"byte_end":123700,"line_start":645,"line_end":645,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123705,"byte_end":123708,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123713,"byte_end":123754,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123759,"byte_end":123777,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/     .big_endian()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123782,"byte_end":123803,"line_start":649,"line_end":649,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123808,"byte_end":123830,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123835,"byte_end":123842,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123847,"byte_end":123854,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124466,"byte_end":124479,"line_start":676,"line_end":676,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":123975,"byte_end":124027,"line_start":658,"line_end":658,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124032,"byte_end":124035,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124040,"byte_end":124078,"line_start":660,"line_end":660,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124083,"byte_end":124086,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124091,"byte_end":124159,"line_start":662,"line_end":662,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124164,"byte_end":124167,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124172,"byte_end":124186,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124191,"byte_end":124194,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124199,"byte_end":124206,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124211,"byte_end":124241,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124246,"byte_end":124297,"line_start":668,"line_end":668,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124302,"byte_end":124305,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124310,"byte_end":124351,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124356,"byte_end":124374,"line_start":671,"line_end":671,"column_start":5,"column_end":23}},{"value":"/     .little_endian()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124379,"byte_end":124403,"line_start":672,"line_end":672,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124408,"byte_end":124430,"line_start":673,"line_end":673,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124435,"byte_end":124442,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124447,"byte_end":124454,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125070,"byte_end":125083,"line_start":699,"line_end":699,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124579,"byte_end":124631,"line_start":681,"line_end":681,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124636,"byte_end":124639,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124644,"byte_end":124682,"line_start":683,"line_end":683,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124687,"byte_end":124690,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124695,"byte_end":124763,"line_start":685,"line_end":685,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124768,"byte_end":124771,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124776,"byte_end":124790,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124795,"byte_end":124798,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124803,"byte_end":124810,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124815,"byte_end":124845,"line_start":690,"line_end":690,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124850,"byte_end":124901,"line_start":691,"line_end":691,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124906,"byte_end":124909,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124914,"byte_end":124955,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124960,"byte_end":124978,"line_start":694,"line_end":694,"column_start":5,"column_end":23}},{"value":"/     .native_endian()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":124983,"byte_end":125007,"line_start":695,"line_end":695,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125012,"byte_end":125034,"line_start":696,"line_end":696,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125039,"byte_end":125046,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125051,"byte_end":125058,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126108,"byte_end":126124,"line_start":732,"line_end":732,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125252,"byte_end":125281,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125286,"byte_end":125289,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125294,"byte_end":125366,"line_start":709,"line_end":709,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125371,"byte_end":125396,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125401,"byte_end":125404,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125409,"byte_end":125481,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125486,"byte_end":125555,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125560,"byte_end":125633,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125638,"byte_end":125650,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125655,"byte_end":125658,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125663,"byte_end":125738,"line_start":717,"line_end":717,"column_start":5,"column_end":80}},{"value":"/ of the `FrameTooBig` type will be returned.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125743,"byte_end":125790,"line_start":718,"line_end":718,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125795,"byte_end":125798,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125803,"byte_end":125817,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125822,"byte_end":125825,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125830,"byte_end":125837,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125842,"byte_end":125872,"line_start":723,"line_end":723,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125877,"byte_end":125928,"line_start":724,"line_end":724,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125933,"byte_end":125936,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125941,"byte_end":125982,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":125987,"byte_end":126005,"line_start":727,"line_end":727,"column_start":5,"column_end":23}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126010,"byte_end":126045,"line_start":728,"line_end":728,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126050,"byte_end":126072,"line_start":729,"line_end":729,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126077,"byte_end":126084,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126089,"byte_end":126096,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126743,"byte_end":126762,"line_start":755,"line_end":755,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126221,"byte_end":126284,"line_start":737,"line_end":737,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126289,"byte_end":126292,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126297,"byte_end":126348,"line_start":739,"line_end":739,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126353,"byte_end":126356,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126361,"byte_end":126429,"line_start":741,"line_end":741,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126434,"byte_end":126437,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126442,"byte_end":126456,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126461,"byte_end":126464,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126469,"byte_end":126476,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126481,"byte_end":126511,"line_start":746,"line_end":746,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126516,"byte_end":126567,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126572,"byte_end":126575,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126580,"byte_end":126621,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126626,"byte_end":126644,"line_start":750,"line_end":750,"column_start":5,"column_end":23}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126649,"byte_end":126680,"line_start":751,"line_end":751,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126685,"byte_end":126707,"line_start":752,"line_end":752,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126712,"byte_end":126719,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126724,"byte_end":126731,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127379,"byte_end":127398,"line_start":777,"line_end":777,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":126931,"byte_end":126997,"line_start":761,"line_end":761,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127002,"byte_end":127005,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127010,"byte_end":127065,"line_start":763,"line_end":763,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127070,"byte_end":127073,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127078,"byte_end":127092,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127097,"byte_end":127100,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127105,"byte_end":127112,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127117,"byte_end":127147,"line_start":768,"line_end":768,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127152,"byte_end":127203,"line_start":769,"line_end":769,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127208,"byte_end":127211,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127216,"byte_end":127257,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127262,"byte_end":127280,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127285,"byte_end":127316,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127321,"byte_end":127343,"line_start":774,"line_end":774,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127348,"byte_end":127355,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127360,"byte_end":127367,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127910,"byte_end":127927,"line_start":797,"line_end":797,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127501,"byte_end":127574,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127579,"byte_end":127597,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127602,"byte_end":127605,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127610,"byte_end":127624,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127629,"byte_end":127632,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127637,"byte_end":127644,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127649,"byte_end":127679,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127684,"byte_end":127735,"line_start":789,"line_end":789,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127740,"byte_end":127743,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127748,"byte_end":127789,"line_start":791,"line_end":791,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127794,"byte_end":127812,"line_start":792,"line_end":792,"column_start":5,"column_end":23}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127817,"byte_end":127847,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127852,"byte_end":127874,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127879,"byte_end":127886,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":127891,"byte_end":127898,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128535,"byte_end":128543,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128028,"byte_end":128091,"line_start":802,"line_end":802,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128096,"byte_end":128099,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128104,"byte_end":128165,"line_start":804,"line_end":804,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128170,"byte_end":128173,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128178,"byte_end":128232,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128237,"byte_end":128240,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128245,"byte_end":128259,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128264,"byte_end":128267,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128272,"byte_end":128279,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128284,"byte_end":128314,"line_start":811,"line_end":811,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128319,"byte_end":128370,"line_start":812,"line_end":812,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128375,"byte_end":128378,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128383,"byte_end":128424,"line_start":814,"line_end":814,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128429,"byte_end":128447,"line_start":815,"line_end":815,"column_start":5,"column_end":23}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128452,"byte_end":128472,"line_start":816,"line_end":816,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128477,"byte_end":128499,"line_start":817,"line_end":817,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128504,"byte_end":128511,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128516,"byte_end":128523,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129103,"byte_end":129111,"line_start":842,"line_end":842,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T> where T: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128641,"byte_end":128694,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128699,"byte_end":128702,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128707,"byte_end":128721,"line_start":827,"line_end":827,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128726,"byte_end":128729,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128734,"byte_end":128741,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"/ # use tokio_io::AsyncRead;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128746,"byte_end":128776,"line_start":830,"line_end":830,"column_start":5,"column_end":35}},{"value":"/ use tokio_io::codec::length_delimited::Builder;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128781,"byte_end":128832,"line_start":831,"line_end":831,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128837,"byte_end":128840,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128845,"byte_end":128886,"line_start":833,"line_end":833,"column_start":5,"column_end":46}},{"value":"/ Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128891,"byte_end":128909,"line_start":834,"line_end":834,"column_start":5,"column_end":23}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128914,"byte_end":128945,"line_start":835,"line_end":835,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128950,"byte_end":128981,"line_start":836,"line_end":836,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":128986,"byte_end":129015,"line_start":837,"line_end":837,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129020,"byte_end":129040,"line_start":838,"line_end":838,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129045,"byte_end":129067,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129072,"byte_end":129079,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129084,"byte_end":129091,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130002,"byte_end":130011,"line_start":875,"line_end":875,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T, B>(&Self, T) -> FramedWrite<T, B> where T: AsyncWrite,\nB: IntoBuf","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129443,"byte_end":129497,"line_start":857,"line_end":857,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129502,"byte_end":129505,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129510,"byte_end":129524,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129529,"byte_end":129532,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129537,"byte_end":129544,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_io;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129549,"byte_end":129577,"line_start":862,"line_end":862,"column_start":5,"column_end":33}},{"value":"/ # extern crate bytes;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129582,"byte_end":129607,"line_start":863,"line_end":863,"column_start":5,"column_end":30}},{"value":"/ # use tokio_io::AsyncWrite;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129612,"byte_end":129643,"line_start":864,"line_end":864,"column_start":5,"column_end":36}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129648,"byte_end":129692,"line_start":865,"line_end":865,"column_start":5,"column_end":49}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129697,"byte_end":129723,"line_start":866,"line_end":866,"column_start":5,"column_end":31}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129728,"byte_end":129772,"line_start":867,"line_end":867,"column_start":5,"column_end":49}},{"value":"/ # let _: length_delimited::FramedWrite<T, BytesMut> =","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129777,"byte_end":129834,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129839,"byte_end":129875,"line_start":869,"line_end":869,"column_start":5,"column_end":41}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129880,"byte_end":129911,"line_start":870,"line_end":870,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129916,"byte_end":129939,"line_start":871,"line_end":871,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129944,"byte_end":129951,"line_start":872,"line_end":872,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129956,"byte_end":129978,"line_start":873,"line_end":873,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":129983,"byte_end":129990,"line_start":874,"line_end":874,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130812,"byte_end":130822,"line_start":905,"line_end":905,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T, B>(&Self, T) -> Framed<T, B> where T: AsyncRead +\nAsyncWrite, B: IntoBuf","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130237,"byte_end":130286,"line_start":887,"line_end":887,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130291,"byte_end":130294,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130299,"byte_end":130313,"line_start":889,"line_end":889,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130318,"byte_end":130321,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130326,"byte_end":130333,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ # extern crate tokio_io;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130338,"byte_end":130366,"line_start":892,"line_end":892,"column_start":5,"column_end":33}},{"value":"/ # extern crate bytes;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130371,"byte_end":130396,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ # use tokio_io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130401,"byte_end":130445,"line_start":894,"line_end":894,"column_start":5,"column_end":49}},{"value":"/ # use tokio_io::codec::length_delimited;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130450,"byte_end":130494,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130499,"byte_end":130525,"line_start":896,"line_end":896,"column_start":5,"column_end":31}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130530,"byte_end":130586,"line_start":897,"line_end":897,"column_start":5,"column_end":61}},{"value":"/ # let _: length_delimited::Framed<T, BytesMut> =","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130591,"byte_end":130643,"line_start":898,"line_end":898,"column_start":5,"column_end":57}},{"value":"/ length_delimited::Builder::new()","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130648,"byte_end":130684,"line_start":899,"line_end":899,"column_start":5,"column_end":41}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130689,"byte_end":130720,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130725,"byte_end":130749,"line_start":901,"line_end":901,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130754,"byte_end":130761,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130766,"byte_end":130788,"line_start":903,"line_end":903,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":130793,"byte_end":130800,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132006,"byte_end":132011,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Lines","qualname":"::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"decl_id":null,"docs":" Combinator created by the top-level `lines` method which is a stream over\n the lines of text on an I/O object.\n","sig":null,"attributes":[{"value":"/ Combinator created by the top-level `lines` method which is a stream over","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":131860,"byte_end":131937,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ the lines of text on an I/O object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":131938,"byte_end":131977,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132352,"byte_end":132357,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"lines","qualname":"::lines::lines","value":"pub fn lines<A>(A) -> Lines<A> where A: AsyncRead + BufRead","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream from the I/O object given representing the lines of\n input that are found on `A`.","sig":null,"attributes":[{"value":"/ Creates a new stream from the I/O object given representing the lines of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132049,"byte_end":132125,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ input that are found on `A`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132126,"byte_end":132158,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132159,"byte_end":132162,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This method takes an asynchronous I/O object, `a`, and returns a `Stream` of","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132163,"byte_end":132243,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ lines that the object contains. The returned stream will reach its end once","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132244,"byte_end":132323,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ `a` reaches EOF.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132324,"byte_end":132344,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132714,"byte_end":132724,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<A>>::into_inner","value":"pub fn into_inner(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying I/O object.","sig":null,"attributes":[{"value":"/ Returns the underlying I/O object.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132503,"byte_end":132541,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132546,"byte_end":132549,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that this may lose data already read into internal buffers. It's","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132554,"byte_end":132627,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ recommended to only call this once the stream has reached its end.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132632,"byte_end":132702,"line_start":36,"line_end":36,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133580,"byte_end":133588,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1909}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133483,"byte_end":133551,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133908,"byte_end":133915,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunite with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunite with a previously split `WriteHalf`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133670,"byte_end":133718,"line_start":16,"line_end":16,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133723,"byte_end":133726,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133731,"byte_end":133743,"line_start":18,"line_end":18,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133748,"byte_end":133751,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133756,"byte_end":133826,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ the same `AsyncRead::split` operation this method will panic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133831,"byte_end":133896,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134223,"byte_end":134232,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1915}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134126,"byte_end":134194,"line_start":31,"line_end":31,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134552,"byte_end":134559,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<WriteHalf<T>>::unsplit","value":"pub fn unsplit(Self, ReadHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunite with a previously split `ReadHalf`.","sig":null,"attributes":[{"value":"/ Reunite with a previously split `ReadHalf`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134315,"byte_end":134362,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134367,"byte_end":134370,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134375,"byte_end":134387,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134392,"byte_end":134395,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If this `WriteHalf` and the given `ReadHalf` do not originate from","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134400,"byte_end":134470,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ the same `AsyncRead::split` operation this method will panic.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134475,"byte_end":134540,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140683,"byte_end":140689,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":139728,"byte_end":139775,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":139776,"byte_end":139779,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":139780,"byte_end":139856,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":139857,"byte_end":139935,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":139936,"byte_end":140012,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140013,"byte_end":140088,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140089,"byte_end":140162,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140163,"byte_end":140194,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140195,"byte_end":140198,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140199,"byte_end":140270,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140271,"byte_end":140350,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140351,"byte_end":140378,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140379,"byte_end":140382,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140383,"byte_end":140457,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140458,"byte_end":140532,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140533,"byte_end":140612,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140613,"byte_end":140654,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141003,"byte_end":141006,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140779,"byte_end":140850,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140855,"byte_end":140865,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140870,"byte_end":140873,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140878,"byte_end":140952,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140957,"byte_end":140991,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141225,"byte_end":141232,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141128,"byte_end":141195,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141200,"byte_end":141213,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141377,"byte_end":141384,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141279,"byte_end":141347,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141352,"byte_end":141365,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141515,"byte_end":141525,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141443,"byte_end":141503,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141666,"byte_end":141671,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141569,"byte_end":141641,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141646,"byte_end":141654,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141818,"byte_end":141821,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141726,"byte_end":141793,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141798,"byte_end":141806,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142219,"byte_end":142228,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"set_start","qualname":"<Window<T>>::set_start","value":"pub fn set_start(&mut Self, usize) -> &mut Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Changes the starting index of this window to the index specified.","sig":null,"attributes":[{"value":"/ Changes the starting index of this window to the index specified.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141874,"byte_end":141943,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141948,"byte_end":141951,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns the windows back to chain multiple calls to this method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":141956,"byte_end":142024,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142029,"byte_end":142032,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142037,"byte_end":142049,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142054,"byte_end":142057,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `start` is out of bounds for the underlying","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142062,"byte_end":142135,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ slice or if it comes after the `end` configured in this window.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142140,"byte_end":142207,"line_start":75,"line_end":75,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142768,"byte_end":142775,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"set_end","qualname":"<Window<T>>::set_end","value":"pub fn set_end(&mut Self, usize) -> &mut Window<T>","parent":null,"children":[],"decl_id":null,"docs":" Changes the end index of this window to the index specified.","sig":null,"attributes":[{"value":"/ Changes the end index of this window to the index specified.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142427,"byte_end":142491,"line_start":83,"line_end":83,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142496,"byte_end":142499,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns the windows back to chain multiple calls to this method.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142504,"byte_end":142572,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142577,"byte_end":142580,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142585,"byte_end":142597,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142602,"byte_end":142605,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `end` is out of bounds for the underlying","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142610,"byte_end":142681,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ slice or if it comes before the `start` configured in this window.","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":142686,"byte_end":142756,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16687,"byte_end":16697,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16848,"byte_end":16858,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":17176,"byte_end":17186,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24569,"byte_end":24579,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":25061,"byte_end":25071,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":26406,"byte_end":26416,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":29013,"byte_end":29017,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31532,"byte_end":31537,"line_start":32,"line_end":32,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32595,"byte_end":32599,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34517,"byte_end":34526,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":36371,"byte_end":36380,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38509,"byte_end":38518,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":40251,"byte_end":40259,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41944,"byte_end":41952,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45114,"byte_end":45120,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46414,"byte_end":46420,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":50371,"byte_end":50377,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":50600,"byte_end":50606,"line_start":163,"line_end":163,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51142,"byte_end":51148,"line_start":185,"line_end":185,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51499,"byte_end":51503,"line_start":200,"line_end":200,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51644,"byte_end":51648,"line_start":206,"line_end":206,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51819,"byte_end":51823,"line_start":212,"line_end":212,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52038,"byte_end":52042,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52170,"byte_end":52174,"line_start":228,"line_end":228,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52538,"byte_end":52542,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53432,"byte_end":53443,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54220,"byte_end":54230,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54505,"byte_end":54515,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55869,"byte_end":55879,"line_start":82,"line_end":82,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":56102,"byte_end":56112,"line_start":95,"line_end":95,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":56597,"byte_end":56607,"line_start":115,"line_end":115,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":57652,"byte_end":57663,"line_start":155,"line_end":155,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":57973,"byte_end":57984,"line_start":173,"line_end":173,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60060,"byte_end":60071,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60351,"byte_end":60362,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61717,"byte_end":61728,"line_start":80,"line_end":80,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":62183,"byte_end":62194,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":62412,"byte_end":62423,"line_start":113,"line_end":113,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":63278,"byte_end":63290,"line_start":147,"line_end":147,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":63598,"byte_end":63610,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65318,"byte_end":65330,"line_start":223,"line_end":223,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65666,"byte_end":65678,"line_start":236,"line_end":236,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65817,"byte_end":65829,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66716,"byte_end":66726,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67243,"byte_end":67253,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67674,"byte_end":67684,"line_start":58,"line_end":58,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67825,"byte_end":67835,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":68406,"byte_end":68416,"line_start":87,"line_end":87,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74962,"byte_end":74965,"line_start":157,"line_end":157,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82275,"byte_end":82278,"line_start":149,"line_end":149,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82556,"byte_end":82562,"line_start":160,"line_end":160,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82690,"byte_end":82694,"line_start":166,"line_end":166,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82825,"byte_end":82829,"line_start":172,"line_end":172,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83010,"byte_end":83015,"line_start":178,"line_end":178,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83432,"byte_end":83441,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83626,"byte_end":83635,"line_start":198,"line_end":198,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83826,"byte_end":83832,"line_start":204,"line_end":204,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83872,"byte_end":83878,"line_start":206,"line_end":206,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":84010,"byte_end":84016,"line_start":212,"line_end":212,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":84143,"byte_end":84149,"line_start":218,"line_end":218,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85320,"byte_end":85326,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":89437,"byte_end":89443,"line_start":137,"line_end":137,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":89666,"byte_end":89672,"line_start":150,"line_end":150,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90208,"byte_end":90214,"line_start":172,"line_end":172,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90565,"byte_end":90569,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90710,"byte_end":90714,"line_start":193,"line_end":193,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90885,"byte_end":90889,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91104,"byte_end":91108,"line_start":209,"line_end":209,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91236,"byte_end":91240,"line_start":215,"line_end":215,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91604,"byte_end":91608,"line_start":228,"line_end":228,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":92952,"byte_end":92962,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93237,"byte_end":93247,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94601,"byte_end":94611,"line_start":86,"line_end":86,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94834,"byte_end":94844,"line_start":99,"line_end":99,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":95329,"byte_end":95339,"line_start":119,"line_end":119,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":96384,"byte_end":96395,"line_start":159,"line_end":159,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":96705,"byte_end":96716,"line_start":177,"line_end":177,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":98939,"byte_end":98950,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99230,"byte_end":99241,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100596,"byte_end":100607,"line_start":84,"line_end":84,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":101062,"byte_end":101073,"line_start":105,"line_end":105,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":101291,"byte_end":101302,"line_start":117,"line_end":117,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":102157,"byte_end":102169,"line_start":151,"line_end":151,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":102477,"byte_end":102489,"line_start":169,"line_end":169,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104216,"byte_end":104228,"line_start":227,"line_end":227,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104564,"byte_end":104576,"line_start":240,"line_end":240,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104715,"byte_end":104727,"line_start":246,"line_end":246,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107791,"byte_end":107797,"line_start":109,"line_end":109,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107985,"byte_end":107991,"line_start":116,"line_end":116,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109109,"byte_end":109115,"line_start":146,"line_end":146,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109317,"byte_end":109323,"line_start":155,"line_end":155,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109717,"byte_end":109723,"line_start":172,"line_end":172,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109996,"byte_end":110006,"line_start":186,"line_end":186,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110182,"byte_end":110192,"line_start":193,"line_end":193,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112020,"byte_end":112030,"line_start":241,"line_end":241,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112211,"byte_end":112221,"line_start":250,"line_end":250,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112652,"byte_end":112662,"line_start":267,"line_end":267,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112899,"byte_end":112909,"line_start":277,"line_end":277,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":113179,"byte_end":113186,"line_start":289,"line_end":289,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":115464,"byte_end":115471,"line_start":365,"line_end":365,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116399,"byte_end":116410,"line_start":398,"line_end":398,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116607,"byte_end":116618,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118396,"byte_end":118407,"line_start":454,"line_end":454,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":120385,"byte_end":120396,"line_start":523,"line_end":523,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121147,"byte_end":121158,"line_start":553,"line_end":553,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121358,"byte_end":121369,"line_start":562,"line_end":562,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121527,"byte_end":121538,"line_start":568,"line_end":568,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121847,"byte_end":121858,"line_start":578,"line_end":578,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122205,"byte_end":122212,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131390,"byte_end":131401,"line_start":927,"line_end":927,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131541,"byte_end":131552,"line_start":933,"line_end":933,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131681,"byte_end":131692,"line_start":939,"line_end":939,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132488,"byte_end":132493,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132782,"byte_end":132787,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133652,"byte_end":133660,"line_start":15,"line_end":15,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134296,"byte_end":134305,"line_start":37,"line_end":37,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135062,"byte_end":135070,"line_start":62,"line_end":62,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135329,"byte_end":135337,"line_start":71,"line_end":71,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135554,"byte_end":135563,"line_start":78,"line_end":78,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":136020,"byte_end":136029,"line_start":94,"line_end":94,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140763,"byte_end":140769,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":143182,"byte_end":143188,"line_start":107,"line_end":107,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":143335,"byte_end":143341,"line_start":113,"line_end":113,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":1762,"byte_end":1767,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":1777,"byte_end":1779,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":155}},{"kind":"Mod","span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lib.rs","byte_start":1790,"byte_end":1802,"line_start":56,"line_end":56,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":440}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16687,"byte_end":16697,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":16848,"byte_end":16858,"line_start":19,"line_end":19,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1650},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/bytes_codec.rs","byte_start":17176,"byte_end":17186,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1650},"to":{"krate":0,"index":87}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":24569,"byte_end":24579,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":25061,"byte_end":25071,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1672},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/codec/lines_codec.rs","byte_start":26406,"byte_end":26416,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1672},"to":{"krate":0,"index":87}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/copy.rs","byte_start":29013,"byte_end":29017,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1692},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/flush.rs","byte_start":31532,"byte_end":31537,"line_start":32,"line_end":32,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1706},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read.rs","byte_start":32595,"byte_end":32599,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1724},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_exact.rs","byte_start":34517,"byte_end":34526,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1732},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_to_end.rs","byte_start":36371,"byte_end":36380,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1753},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/read_until.rs","byte_start":38509,"byte_end":38518,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1769},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/shutdown.rs","byte_start":40251,"byte_end":40259,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1786},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/io/write_all.rs","byte_start":41944,"byte_end":41952,"line_start":56,"line_end":56,"column_start":23,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1792},"to":{"krate":20,"index":730}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":45114,"byte_end":45120,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":46414,"byte_end":46420,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":50371,"byte_end":50377,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":513},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":50600,"byte_end":50606,"line_start":163,"line_end":163,"column_start":21,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":513},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51142,"byte_end":51148,"line_start":185,"line_end":185,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51499,"byte_end":51503,"line_start":200,"line_end":200,"column_start":27,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":517},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51644,"byte_end":51648,"line_start":206,"line_end":206,"column_start":37,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":51819,"byte_end":51823,"line_start":212,"line_end":212,"column_start":29,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":517},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52038,"byte_end":52042,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52170,"byte_end":52174,"line_start":228,"line_end":228,"column_start":33,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":52538,"byte_end":52542,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":87}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed.rs","byte_start":53432,"byte_end":53443,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54220,"byte_end":54230,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":54505,"byte_end":54515,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":55869,"byte_end":55879,"line_start":82,"line_end":82,"column_start":23,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":621},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":56102,"byte_end":56112,"line_start":95,"line_end":95,"column_start":21,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":621},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":56597,"byte_end":56607,"line_start":115,"line_end":115,"column_start":27,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":57652,"byte_end":57663,"line_start":155,"line_end":155,"column_start":9,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_read.rs","byte_start":57973,"byte_end":57984,"line_start":173,"line_end":173,"column_start":20,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":625},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60060,"byte_end":60071,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":60351,"byte_end":60362,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":61717,"byte_end":61728,"line_start":80,"line_end":80,"column_start":21,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":727},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":62183,"byte_end":62194,"line_start":101,"line_end":101,"column_start":23,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":727},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":62412,"byte_end":62423,"line_start":113,"line_end":113,"column_start":27,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":63278,"byte_end":63290,"line_start":147,"line_end":147,"column_start":9,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":63598,"byte_end":63610,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":731},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65318,"byte_end":65330,"line_start":223,"line_end":223,"column_start":30,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":731},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65666,"byte_end":65678,"line_start":236,"line_end":236,"column_start":24,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/_tokio_codec/framed_write.rs","byte_start":65817,"byte_end":65829,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":731},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":66716,"byte_end":66726,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67243,"byte_end":67253,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1825},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67674,"byte_end":67684,"line_start":58,"line_end":58,"column_start":24,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1825},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":67825,"byte_end":67835,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1825},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/allow_std.rs","byte_start":68406,"byte_end":68416,"line_start":87,"line_end":87,"column_start":23,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1825},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":70001,"byte_end":70005,"line_start":35,"line_end":35,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":4331},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_read.rs","byte_start":74962,"byte_end":74965,"line_start":157,"line_end":157,"column_start":43,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":77058,"byte_end":77063,"line_start":37,"line_end":37,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":4392},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82275,"byte_end":82278,"line_start":149,"line_end":149,"column_start":45,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82556,"byte_end":82562,"line_start":160,"line_end":160,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":4276},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82690,"byte_end":82694,"line_start":166,"line_end":166,"column_start":29,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":10409},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":82825,"byte_end":82829,"line_start":172,"line_end":172,"column_start":42,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":10462},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83010,"byte_end":83015,"line_start":178,"line_end":178,"column_start":34,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":10452},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83432,"byte_end":83441,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":3449},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83626,"byte_end":83635,"line_start":198,"line_end":198,"column_start":42,"column_end":51},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":3362},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83826,"byte_end":83832,"line_start":204,"line_end":204,"column_start":44,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":83872,"byte_end":83878,"line_start":206,"line_end":206,"column_start":33,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":84010,"byte_end":84016,"line_start":212,"line_end":212,"column_start":29,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/async_write.rs","byte_start":84143,"byte_end":84149,"line_start":218,"line_end":218,"column_start":29,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":1,"index":10271},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":85320,"byte_end":85326,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":89437,"byte_end":89443,"line_start":137,"line_end":137,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1039},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":89666,"byte_end":89672,"line_start":150,"line_end":150,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1039},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90208,"byte_end":90214,"line_start":172,"line_end":172,"column_start":27,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1039},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90565,"byte_end":90569,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1043},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90710,"byte_end":90714,"line_start":193,"line_end":193,"column_start":37,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":90885,"byte_end":90889,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1043},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91104,"byte_end":91108,"line_start":209,"line_end":209,"column_start":39,"column_end":43},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91236,"byte_end":91240,"line_start":215,"line_end":215,"column_start":33,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed.rs","byte_start":91604,"byte_end":91608,"line_start":228,"line_end":228,"column_start":33,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1043},"to":{"krate":0,"index":87}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":92952,"byte_end":92962,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":93237,"byte_end":93247,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94601,"byte_end":94611,"line_start":86,"line_end":86,"column_start":23,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1141},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":94834,"byte_end":94844,"line_start":99,"line_end":99,"column_start":21,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1141},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":95329,"byte_end":95339,"line_start":119,"line_end":119,"column_start":27,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":96384,"byte_end":96395,"line_start":159,"line_end":159,"column_start":9,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_read.rs","byte_start":96705,"byte_end":96716,"line_start":177,"line_end":177,"column_start":20,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1145},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":98939,"byte_end":98950,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":99230,"byte_end":99241,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":100596,"byte_end":100607,"line_start":84,"line_end":84,"column_start":21,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1247},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":101062,"byte_end":101073,"line_start":105,"line_end":105,"column_start":23,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1247},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":101291,"byte_end":101302,"line_start":117,"line_end":117,"column_start":27,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":102157,"byte_end":102169,"line_start":151,"line_end":151,"column_start":9,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":102477,"byte_end":102489,"line_start":169,"line_end":169,"column_start":18,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1251},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104216,"byte_end":104228,"line_start":227,"line_end":227,"column_start":30,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104564,"byte_end":104576,"line_start":240,"line_end":240,"column_start":24,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1251},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/framed_write.rs","byte_start":104715,"byte_end":104727,"line_start":246,"line_end":246,"column_start":34,"column_end":46},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107791,"byte_end":107797,"line_start":109,"line_end":109,"column_start":45,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":107985,"byte_end":107991,"line_start":116,"line_end":116,"column_start":21,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109109,"byte_end":109115,"line_start":146,"line_end":146,"column_start":43,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1379},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109317,"byte_end":109323,"line_start":155,"line_end":155,"column_start":42,"column_end":48},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1379},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109717,"byte_end":109723,"line_start":172,"line_end":172,"column_start":36,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":109996,"byte_end":110006,"line_start":186,"line_end":186,"column_start":20,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":110182,"byte_end":110192,"line_start":193,"line_end":193,"column_start":9,"column_end":19},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112020,"byte_end":112030,"line_start":241,"line_end":241,"column_start":31,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1878},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112211,"byte_end":112221,"line_start":250,"line_end":250,"column_start":24,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1878},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112652,"byte_end":112662,"line_start":267,"line_end":267,"column_start":34,"column_end":44},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1878},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":112899,"byte_end":112909,"line_start":277,"line_end":277,"column_start":36,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1878},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":113179,"byte_end":113186,"line_start":289,"line_end":289,"column_start":6,"column_end":13},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":115464,"byte_end":115471,"line_start":365,"line_end":365,"column_start":25,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1884},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116399,"byte_end":116410,"line_start":398,"line_end":398,"column_start":33,"column_end":44},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":116607,"byte_end":116618,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":118396,"byte_end":118407,"line_start":454,"line_end":454,"column_start":33,"column_end":44},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":120385,"byte_end":120396,"line_start":523,"line_end":523,"column_start":42,"column_end":53},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1385},"to":{"krate":20,"index":2548}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121147,"byte_end":121158,"line_start":553,"line_end":553,"column_start":40,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1385},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121358,"byte_end":121369,"line_start":562,"line_end":562,"column_start":44,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1385},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121527,"byte_end":121538,"line_start":568,"line_end":568,"column_start":46,"column_end":57},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1385},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":121847,"byte_end":121858,"line_start":578,"line_end":578,"column_start":36,"column_end":47},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1385},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":122205,"byte_end":122212,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131390,"byte_end":131401,"line_start":927,"line_end":927,"column_start":21,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131541,"byte_end":131552,"line_start":933,"line_end":933,"column_start":23,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":9309}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/length_delimited.rs","byte_start":131681,"byte_end":131692,"line_start":939,"line_end":939,"column_start":19,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1383},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132488,"byte_end":132493,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/lines.rs","byte_start":132782,"byte_end":132787,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1900},"to":{"krate":20,"index":2068}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":133652,"byte_end":133660,"line_start":15,"line_end":15,"column_start":33,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":134296,"byte_end":134305,"line_start":37,"line_end":37,"column_start":33,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135062,"byte_end":135070,"line_start":62,"line_end":62,"column_start":29,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1907},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135329,"byte_end":135337,"line_start":71,"line_end":71,"column_start":34,"column_end":42},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1907},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":135554,"byte_end":135563,"line_start":78,"line_end":78,"column_start":31,"column_end":40},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1913},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/split.rs","byte_start":136020,"byte_end":136029,"line_start":94,"line_end":94,"column_start":36,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1913},"to":{"krate":0,"index":936}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":140763,"byte_end":140769,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":143182,"byte_end":143188,"line_start":107,"line_end":107,"column_start":38,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/wdhg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-io-0.1.13/src/window.rs","byte_start":143335,"byte_end":143341,"line_start":113,"line_end":113,"column_start":38,"column_end":44},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":2889}}]}